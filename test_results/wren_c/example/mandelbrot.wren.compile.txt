Constants:
00: 0.2
01: 0.1
02: 1.5
03: 1.1
04: 0
05: 24
06: 80
07: 79
08: " "
09: 2
10: 4
11: " .:;+=xX$&"
12: 8
Code:
00 (ln 1): Constant(0: 0.2)
01 (ln 1): Call(Method, -)
02 (ln 1): Store(Module)
03 (ln 1): Pop
04 (ln 2): Constant(1: 0.1)
05 (ln 2): Store(Module)
06 (ln 2): Pop
07 (ln 3): Constant(2: 1.5)
08 (ln 3): Call(Method, -)
09 (ln 3): Store(Module)
10 (ln 3): Pop
11 (ln 4): Constant(3: 1.1)
12 (ln 4): Call(Method, -)
13 (ln 4): Store(Module)
14 (ln 4): Pop
15 (ln 6): Constant(4: 0)
16 (ln 6): Constant(5: 24)
17 (ln 6): Call(Method, ...(_))
18 (ln 6): Null
19 (ln 6): Load(Local, 1)
20 (ln 6): Load(Local, 2)
21 (ln 6): Call(Method, iterate(_))
22 (ln 6): Store(Local, 2)
23 (ln 6): JumpIfFalse(121)
24 (ln 6): Load(Local, 1)
25 (ln 6): Load(Local, 2)
26 (ln 6): Call(Method, iteratorValue(_))
27 (ln 7): Load(Local, 3)
28 (ln 7): Constant(5: 24)
29 (ln 7): Call(Method, /(_))
30 (ln 7): Load(Module, Null)
31 (ln 7): Load(Module, Null)
32 (ln 7): Call(Method, -(_))
33 (ln 7): Call(Method, *(_))
34 (ln 7): Load(Module, Null)
35 (ln 7): Call(Method, +(_))
36 (ln 8): Constant(4: 0)
37 (ln 8): Constant(6: 80)
38 (ln 8): Call(Method, ...(_))
39 (ln 8): Null
40 (ln 8): Load(Local, 5)
41 (ln 8): Load(Local, 6)
42 (ln 8): Call(Method, iterate(_))
43 (ln 8): Store(Local, 6)
44 (ln 8): JumpIfFalse(92)
45 (ln 8): Load(Local, 5)
46 (ln 8): Load(Local, 6)
47 (ln 8): Call(Method, iteratorValue(_))
48 (ln 9): Load(Local, 7)
49 (ln 9): Constant(7: 79)
50 (ln 9): Call(Method, /(_))
51 (ln 9): Load(Module, Null)
52 (ln 9): Load(Module, Null)
53 (ln 9): Call(Method, -(_))
54 (ln 9): Call(Method, *(_))
55 (ln 9): Load(Module, Null)
56 (ln 9): Call(Method, +(_))
57 (ln 10): Constant(8: " ")
58 (ln 11): Load(Local, 8)
59 (ln 12): Load(Local, 4)
60 (ln 13): Constant(4: 0)
61 (ln 13): Constant(6: 80)
62 (ln 13): Call(Method, ...(_))
63 (ln 13): Null
64 (ln 13): Load(Local, 12)
65 (ln 13): Load(Local, 13)
66 (ln 13): Call(Method, iterate(_))
67 (ln 13): Store(Local, 13)
68 (ln 13): JumpIfFalse(56)
69 (ln 13): Load(Local, 12)
70 (ln 13): Load(Local, 13)
71 (ln 13): Call(Method, iteratorValue(_))
72 (ln 14): Load(Local, 10)
73 (ln 14): Load(Local, 10)
74 (ln 14): Call(Method, *(_))
75 (ln 14): Load(Local, 11)
76 (ln 14): Load(Local, 11)
77 (ln 14): Call(Method, *(_))
78 (ln 14): Call(Method, -(_))
79 (ln 15): Constant(9: 2)
80 (ln 15): Load(Local, 10)
81 (ln 15): Call(Method, *(_))
82 (ln 15): Load(Local, 11)
83 (ln 15): Call(Method, *(_))
84 (ln 18): Load(Local, 15)
85 (ln 18): Load(Local, 8)
86 (ln 18): Call(Method, +(_))
87 (ln 18): Store(Local, 15)
88 (ln 18): Pop
89 (ln 19): Load(Local, 16)
90 (ln 19): Load(Local, 4)
91 (ln 19): Call(Method, +(_))
92 (ln 19): Store(Local, 16)
93 (ln 19): Pop
94 (ln 21): Load(Local, 15)
95 (ln 21): Store(Local, 10)
96 (ln 21): Pop
97 (ln 22): Load(Local, 16)
98 (ln 22): Store(Local, 11)
99 (ln 22): Pop
100 (ln 25): Load(Local, 10)
101 (ln 25): Load(Local, 10)
102 (ln 25): Call(Method, *(_))
103 (ln 25): Load(Local, 11)
104 (ln 25): Load(Local, 11)
105 (ln 25): Call(Method, *(_))
106 (ln 25): Call(Method, +(_))
107 (ln 26): Load(Local, 17)
108 (ln 26): Constant(10: 4)
109 (ln 26): Call(Method, >(_))
110 (ln 26): JumpIfFalse(9)
111 (ln 27): Constant(11: " .:;+=xX$&")
112 (ln 27): Load(Local, 14)
113 (ln 27): Constant(12: 8)
114 (ln 27): Call(Method, /(_))
115 (ln 27): Call(Getter, floor)
116 (ln 27): Call(Subscript, [_])
117 (ln 27): Store(Local, 9)
118 (ln 27): Pop
119 (ln 28): Jump(5)
120 (ln 30): Pop
121 (ln 30): Pop
122 (ln 30): Pop
123 (ln 30): Pop
124 (ln 30): Loop(61)
125 (ln 30): Pop
126 (ln 30): Pop
127 (ln 32): Load(Module, Class("System"))
128 (ln 32): Load(Local, 9)
129 (ln 32): Call(Method, write(_))
130 (ln 32): Pop
131 (ln 33): Pop
132 (ln 33): Pop
133 (ln 33): Pop
134 (ln 33): Pop
135 (ln 33): Pop
136 (ln 33): Loop(97)
137 (ln 33): Pop
138 (ln 33): Pop
139 (ln 35): Load(Module, Class("System"))
140 (ln 35): Call(Method, print())
141 (ln 35): Pop
142 (ln 36): Pop
143 (ln 36): Pop
144 (ln 36): Loop(126)
145 (ln 36): Pop
146 (ln 36): Pop
147 (ln 37): EndModule
148 (ln 37): Return
149 (ln 37): End
