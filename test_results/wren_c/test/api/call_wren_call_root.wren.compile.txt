<script> Constants:
00: "Test"
01: Fn(run())
<script> Code:
00 (ln 1): Constant(0: "Test")
01 (ln 1): Load(Module, Class("Object"))
02 (ln 1): Class(0 fields)
03 (ln 1): Store(Module)
04 (ln 1): Pop
05 (ln 11): Closure(1, [])
06 (ln 11): Load(Module, Null)
07 (ln 11): Method(static, run())
08 (ln 13): EndModule
09 (ln 13): Return
10 (ln 13): End
run() Constants:
00: "begin root"
01: Fn(new(_) block argument)
run() Code:
00 (ln 3): Load(Module, Class("Fiber"))
01 (ln 3): Call(current)
02 (ln 4): Load(Module, Class("System"))
03 (ln 4): Constant(0: "begin root")
04 (ln 4): Call(print(_))
05 (ln 4): Pop
06 (ln 6): Load(Module, Class("Fiber"))
07 (ln 10): Closure(1, [Upvalue { is_local_in_parent: true, index: 1 }])
08 (ln 10): Call(new(_))
09 (ln 10): Call(transfer())
10 (ln 10): Pop
11 (ln 11): Null
12 (ln 11): Return
13 (ln 11): End
new(_) block argument Constants:
00: "in new fiber"
01: "called root"
new(_) block argument Code:
00 (ln 7): Load(Module, Class("System"))
01 (ln 7): Constant(0: "in new fiber")
02 (ln 7): Call(print(_))
03 (ln 7): Pop
04 (ln 8): Load(Upvalue, 0)
05 (ln 8): Call(call())
06 (ln 8): Pop
07 (ln 9): Load(Module, Class("System"))
08 (ln 9): Constant(1: "called root")
09 (ln 9): Call(print(_))
10 (ln 9): Pop
11 (ln 10): Null
12 (ln 10): Return
13 (ln 10): End
