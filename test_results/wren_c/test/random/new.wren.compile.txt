<script> Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
01: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
02: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
<script> Code:
00 (ln 1): ImportModule("random")
01 (ln 1): Pop
02 (ln 1): ImportVariable("Random")
03 (ln 1): Store(Module)
04 (ln 1): Pop
05 (ln 3): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
06 (ln 3): Call(new())
07 (ln 3): Store(Module)
08 (ln 3): Pop
09 (ln 5): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
10 (ln 5): Store(Module)
11 (ln 5): Pop
12 (ln 6): Constant(1: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
13 (ln 6): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
14 (ln 6): Call(..(_))
15 (ln 6): Null
16 (ln 6): Load(Local, 1)
17 (ln 6): Load(Local, 2)
18 (ln 6): Call(iterate(_))
19 (ln 6): Store(Local, 2)
20 (ln 6): JumpIfFalse(26)
21 (ln 6): Load(Local, 1)
22 (ln 6): Load(Local, 2)
23 (ln 6): Call(iteratorValue(_))
24 (ln 7): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
25 (ln 7): Call(float())
26 (ln 8): Load(Local, 4)
27 (ln 8): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
28 (ln 8): Call(>=(_))
29 (ln 8): JumpIfFalse(5)
30 (ln 8): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
31 (ln 8): Constant(1: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
32 (ln 8): Call(+(_))
33 (ln 8): Store(Module)
34 (ln 8): Pop
35 (ln 9): Load(Local, 4)
36 (ln 9): Constant(1: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
37 (ln 9): Call(<(_))
38 (ln 9): JumpIfFalse(5)
39 (ln 9): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
40 (ln 9): Constant(1: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
41 (ln 9): Call(+(_))
42 (ln 9): Store(Module)
43 (ln 9): Pop
44 (ln 10): Pop
45 (ln 10): Pop
46 (ln 10): Loop(31)
47 (ln 10): Pop
48 (ln 10): Pop
49 (ln 12): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
50 (ln 12): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
51 (ln 12): Call(print(_))
52 (ln 12): Pop
53 (ln 13): EndModule
54 (ln 13): Return
55 (ln 13): End
