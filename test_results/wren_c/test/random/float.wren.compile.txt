<script> Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
01: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
02: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
03: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
04: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
05: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
06: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
<script> Code:
00 (ln 1): ImportModule("random")
01 (ln 1): Pop
02 (ln 1): ImportVariable("Random")
03 (ln 1): Store(Module)
04 (ln 1): Pop
05 (ln 3): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
06 (ln 3): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
07 (ln 3): Call(new(_))
08 (ln 3): Store(Module)
09 (ln 3): Pop
10 (ln 5): Constant(1: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
11 (ln 5): Store(Module)
12 (ln 5): Pop
13 (ln 6): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
14 (ln 6): Constant(3: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
15 (ln 6): Call(..(_))
16 (ln 6): Null
17 (ln 6): Load(Local, 1)
18 (ln 6): Load(Local, 2)
19 (ln 6): Call(iterate(_))
20 (ln 6): Store(Local, 2)
21 (ln 6): JumpIfFalse(17)
22 (ln 6): Load(Local, 1)
23 (ln 6): Load(Local, 2)
24 (ln 6): Call(iteratorValue(_))
25 (ln 7): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
26 (ln 7): Call(float())
27 (ln 8): Load(Local, 4)
28 (ln 8): Constant(4: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
29 (ln 8): Call(<(_))
30 (ln 8): JumpIfFalse(5)
31 (ln 8): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
32 (ln 8): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
33 (ln 8): Call(+(_))
34 (ln 8): Store(Module)
35 (ln 8): Pop
36 (ln 9): Pop
37 (ln 9): Pop
38 (ln 9): Loop(22)
39 (ln 9): Pop
40 (ln 9): Pop
41 (ln 12): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
42 (ln 12): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
43 (ln 12): Constant(5: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
44 (ln 12): Call(>(_))
45 (ln 12): Call(print(_))
46 (ln 12): Pop
47 (ln 13): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
48 (ln 13): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
49 (ln 13): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
50 (ln 13): Call(<(_))
51 (ln 13): Call(print(_))
52 (ln 13): Pop
53 (ln 14): EndModule
54 (ln 14): Return
55 (ln 14): End
