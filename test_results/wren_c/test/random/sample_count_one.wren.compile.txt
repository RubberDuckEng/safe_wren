<script> Constants:
00: 12345
01: "single"
02: 1
03: "a"
04: "b"
05: "c"
06: "d"
07: "e"
08: 5000
09: 0
10: 0.1
11: "!!! "
12: ""
<script> Code:
00 (ln 1): ImportModule("random")
01 (ln 1): Pop
02 (ln 1): ImportVariable("Random")
03 (ln 1): Store(Module)
04 (ln 1): Pop
05 (ln 3): Load(Module, Null)
06 (ln 3): Constant(0: 12345)
07 (ln 3): Call(new(_))
08 (ln 3): Store(Module)
09 (ln 3): Pop
10 (ln 6): Load(Module, Class("System"))
11 (ln 6): Load(Module, Null)
12 (ln 6): Load(Module, Class("List"))
13 (ln 6): Call(new())
14 (ln 6): Constant(1: "single")
15 (ln 6): Call(addCore_(_))
16 (ln 6): Constant(2: 1)
17 (ln 6): Call(sample(_,_))
18 (ln 6): Call(print(_))
19 (ln 6): Pop
20 (ln 9): Load(Module, Class("List"))
21 (ln 9): Call(new())
22 (ln 9): Constant(3: "a")
23 (ln 9): Call(addCore_(_))
24 (ln 9): Constant(4: "b")
25 (ln 9): Call(addCore_(_))
26 (ln 9): Constant(5: "c")
27 (ln 9): Call(addCore_(_))
28 (ln 9): Constant(6: "d")
29 (ln 9): Call(addCore_(_))
30 (ln 9): Constant(7: "e")
31 (ln 9): Call(addCore_(_))
32 (ln 9): Store(Module)
33 (ln 9): Pop
34 (ln 10): Load(Module, Class("Map"))
35 (ln 10): Call(new())
36 (ln 10): Store(Module)
37 (ln 10): Pop
38 (ln 11): Constant(2: 1)
39 (ln 11): Constant(8: 5000)
40 (ln 11): Call(..(_))
41 (ln 11): Null
42 (ln 11): Load(Local, 1)
43 (ln 11): Load(Local, 2)
44 (ln 11): Call(iterate(_))
45 (ln 11): Store(Local, 2)
46 (ln 11): JumpIfFalse(32)
47 (ln 11): Load(Local, 1)
48 (ln 11): Load(Local, 2)
49 (ln 11): Call(iteratorValue(_))
50 (ln 12): Load(Module, Null)
51 (ln 12): Load(Module, Null)
52 (ln 12): Constant(2: 1)
53 (ln 12): Call(sample(_,_))
54 (ln 14): Load(Local, 4)
55 (ln 14): Call(toString)
56 (ln 15): Load(Module, Null)
57 (ln 15): Load(Local, 5)
58 (ln 15): Call(containsKey(_))
59 (ln 15): Call(!)
60 (ln 15): JumpIfFalse(5)
61 (ln 15): Load(Module, Null)
62 (ln 15): Load(Local, 5)
63 (ln 15): Constant(9: 0)
64 (ln 15): Call([_]=(_))
65 (ln 15): Pop
66 (ln 16): Load(Module, Null)
67 (ln 16): Load(Local, 5)
68 (ln 16): Load(Module, Null)
69 (ln 16): Load(Local, 5)
70 (ln 16): Call([_])
71 (ln 16): Constant(2: 1)
72 (ln 16): Call(+(_))
73 (ln 16): Call([_]=(_))
74 (ln 16): Pop
75 (ln 17): Pop
76 (ln 17): Pop
77 (ln 17): Pop
78 (ln 17): Loop(37)
79 (ln 17): Pop
80 (ln 17): Pop
81 (ln 19): Load(Module, Class("System"))
82 (ln 19): Load(Module, Null)
83 (ln 19): Call(count)
84 (ln 19): Call(print(_))
85 (ln 19): Pop
86 (ln 20): Load(Module, Null)
87 (ln 20): Call(keys)
88 (ln 20): Null
89 (ln 20): Load(Local, 1)
90 (ln 20): Load(Local, 2)
91 (ln 20): Call(iterate(_))
92 (ln 20): Store(Local, 2)
93 (ln 20): JumpIfFalse(33)
94 (ln 20): Load(Local, 1)
95 (ln 20): Load(Local, 2)
96 (ln 20): Call(iteratorValue(_))
97 (ln 21): Load(Module, Null)
98 (ln 21): Load(Local, 3)
99 (ln 21): Call([_])
100 (ln 21): Constant(8: 5000)
101 (ln 21): Load(Module, Null)
102 (ln 21): Call(count)
103 (ln 21): Call(/(_))
104 (ln 21): Call(/(_))
105 (ln 21): Constant(2: 1)
106 (ln 21): Call(-(_))
107 (ln 21): Call(abs)
108 (ln 22): Load(Local, 4)
109 (ln 22): Constant(10: 0.1)
110 (ln 22): Call(>(_))
111 (ln 22): JumpIfFalse(12)
112 (ln 22): Load(Module, Class("System"))
113 (ln 22): Load(Module, Class("List"))
114 (ln 22): Call(new())
115 (ln 22): Constant(11: "!!! ")
116 (ln 22): Call(addCore_(_))
117 (ln 22): Load(Local, 4)
118 (ln 22): Call(addCore_(_))
119 (ln 22): Constant(12: "")
120 (ln 22): Call(addCore_(_))
121 (ln 22): Call(join())
122 (ln 22): Call(print(_))
123 (ln 22): Pop
124 (ln 23): Pop
125 (ln 23): Pop
126 (ln 23): Loop(38)
127 (ln 23): Pop
128 (ln 23): Pop
129 (ln 24): EndModule
130 (ln 24): Return
131 (ln 24): End
