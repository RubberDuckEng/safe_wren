<script> Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
01: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
02: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
03: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
04: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
05: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
<script> Code:
00 (ln 1): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 1): Store(Module)
02 (ln 1): Pop
03 (ln 3): Constant(1: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
04 (ln 3): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
05 (ln 3): Class(0 fields)
06 (ln 3): Store(Module)
07 (ln 3): Pop
08 (ln 4): Closure(2, [])
09 (ln 4): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
10 (ln 4): Method(instance, init new())
11 (ln 4): Closure(3, [])
12 (ln 4): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
13 (ln 4): Method(static, new())
14 (ln 8): Closure(4, [])
15 (ln 8): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
16 (ln 8): Method(instance, method)
17 (ln 12): Closure(5, [])
18 (ln 12): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
19 (ln 12): Method(static, classMethod)
20 (ln 15): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
21 (ln 15): Call(new())
22 (ln 15): Call(method)
23 (ln 15): Pop
24 (ln 16): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
25 (ln 16): Call(classMethod)
26 (ln 16): Pop
27 (ln 17): EndModule
28 (ln 17): Return
29 (ln 17): End
init new() Code:
00 (ln 4): Load(Local, 0)
01 (ln 4): Return
02 (ln 4): End
 Code:
00 (ln 4): Construct
01 (ln 4): Call(init new())
02 (ln 4): Return
03 (ln 4): End
method Code:
00 (ln 7): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 7): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
02 (ln 7): Call(print(_))
03 (ln 7): Pop
04 (ln 8): Null
05 (ln 8): Return
06 (ln 8): End
classMethod Code:
00 (ln 11): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 11): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
02 (ln 11): Call(print(_))
03 (ln 11): Pop
04 (ln 12): Null
05 (ln 12): Return
06 (ln 12): End
