<script> Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
01: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
02: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
03: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
04: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
05: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
06: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
07: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
08: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
09: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
10: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
11: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
<script> Code:
00 (ln 1): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 1): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
02 (ln 1): Class(1 fields)
03 (ln 1): Store(Module)
04 (ln 1): Pop
05 (ln 5): Closure(1, [])
06 (ln 5): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
07 (ln 5): Method(instance, init new(_))
08 (ln 5): Closure(2, [])
09 (ln 5): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
10 (ln 5): Method(static, new(_))
11 (ln 7): Closure(3, [])
12 (ln 7): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
13 (ln 7): Method(instance, aField)
14 (ln 10): Constant(4: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
15 (ln 10): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
16 (ln 10): Class(1 fields)
17 (ln 10): Store(Module)
18 (ln 10): Pop
19 (ln 15): Closure(5, [])
20 (ln 15): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
21 (ln 15): Method(instance, init new(_,_))
22 (ln 15): Closure(6, [])
23 (ln 15): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
24 (ln 15): Method(static, new(_,_))
25 (ln 17): Closure(7, [])
26 (ln 17): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
27 (ln 17): Method(instance, bField)
28 (ln 20): Constant(8: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
29 (ln 20): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
30 (ln 20): Class(1 fields)
31 (ln 20): Store(Module)
32 (ln 20): Pop
33 (ln 25): Closure(9, [])
34 (ln 25): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
35 (ln 25): Method(instance, init new())
36 (ln 25): Closure(10, [])
37 (ln 25): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
38 (ln 25): Method(static, new())
39 (ln 27): Closure(11, [])
40 (ln 27): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
41 (ln 27): Method(instance, cField)
42 (ln 30): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
43 (ln 30): Call(new())
44 (ln 30): Store(Module)
45 (ln 30): Pop
46 (ln 34): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
47 (ln 34): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
48 (ln 34): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
49 (ln 34): Call(is(_))
50 (ln 34): Call(print(_))
51 (ln 34): Pop
52 (ln 35): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
53 (ln 35): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
54 (ln 35): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
55 (ln 35): Call(is(_))
56 (ln 35): Call(print(_))
57 (ln 35): Pop
58 (ln 36): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
59 (ln 36): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
60 (ln 36): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
61 (ln 36): Call(is(_))
62 (ln 36): Call(print(_))
63 (ln 36): Pop
64 (ln 38): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
65 (ln 38): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
66 (ln 38): Call(aField)
67 (ln 38): Call(print(_))
68 (ln 38): Pop
69 (ln 39): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
70 (ln 39): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
71 (ln 39): Call(bField)
72 (ln 39): Call(print(_))
73 (ln 39): Pop
74 (ln 40): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
75 (ln 40): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
76 (ln 40): Call(cField)
77 (ln 40): Call(print(_))
78 (ln 40): Pop
79 (ln 41): EndModule
80 (ln 41): Return
81 (ln 41): End
init new(_) Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
01: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
init new(_) Code:
00 (ln 3): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 3): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
02 (ln 3): Call(new())
03 (ln 3): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
04 (ln 3): Call(addCore_(_))
05 (ln 3): Load(Local, 1)
06 (ln 3): Call(addCore_(_))
07 (ln 3): Constant(1: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
08 (ln 3): Call(addCore_(_))
09 (ln 3): Call(join())
10 (ln 3): Call(print(_))
11 (ln 3): Pop
12 (ln 4): Load(Local, 1)
13 (ln 4): Load(Local, 0)
14 (ln 4): StoreField(0)
15 (ln 4): Pop
16 (ln 5): Load(Local, 0)
17 (ln 5): Return
18 (ln 5): End
 Code:
00 (ln 5): Construct
01 (ln 5): Call(init new(_))
02 (ln 5): Return
03 (ln 5): End
aField Code:
00 (ln 7): Load(Local, 0)
01 (ln 7): LoadField(0)
02 (ln 7): Return
03 (ln 7): End
init new(_,_) Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
01: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
02: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
init new(_,_) Code:
00 (ln 12): Load(Local, 0)
01 (ln 12): Load(Local, 2)
02 (ln 12): CallSuper(init new(_))
03 (ln 12): Pop
04 (ln 13): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
05 (ln 13): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
06 (ln 13): Call(new())
07 (ln 13): Constant(1: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
08 (ln 13): Call(addCore_(_))
09 (ln 13): Load(Local, 1)
10 (ln 13): Call(addCore_(_))
11 (ln 13): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
12 (ln 13): Call(addCore_(_))
13 (ln 13): Call(join())
14 (ln 13): Call(print(_))
15 (ln 13): Pop
16 (ln 14): Load(Local, 1)
17 (ln 14): Load(Local, 0)
18 (ln 14): StoreField(0)
19 (ln 14): Pop
20 (ln 15): Load(Local, 0)
21 (ln 15): Return
22 (ln 15): End
 Code:
00 (ln 15): Construct
01 (ln 15): Call(init new(_,_))
02 (ln 15): Return
03 (ln 15): End
bField Code:
00 (ln 17): Load(Local, 0)
01 (ln 17): LoadField(0)
02 (ln 17): Return
03 (ln 17): End
init new() Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
01: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
02: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
03: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
04: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
init new() Code:
00 (ln 22): Load(Local, 0)
01 (ln 22): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
02 (ln 22): Constant(1: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
03 (ln 22): CallSuper(init new(_,_))
04 (ln 22): Pop
05 (ln 23): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
06 (ln 23): Constant(3: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
07 (ln 23): Call(print(_))
08 (ln 23): Pop
09 (ln 24): Constant(4: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
10 (ln 24): Load(Local, 0)
11 (ln 24): StoreField(0)
12 (ln 24): Pop
13 (ln 25): Load(Local, 0)
14 (ln 25): Return
15 (ln 25): End
 Code:
00 (ln 25): Construct
01 (ln 25): Call(init new())
02 (ln 25): Return
03 (ln 25): End
cField Code:
00 (ln 27): Load(Local, 0)
01 (ln 27): LoadField(0)
02 (ln 27): Return
03 (ln 27): End
