<script> Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
01: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
02: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
<script> Code:
00 (ln 2): Boolean true
01 (ln 2): JumpIfFalse(4)
02 (ln 2): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
03 (ln 2): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
04 (ln 2): Call(print(_))
05 (ln 2): Pop
06 (ln 3): Boolean false
07 (ln 3): JumpIfFalse(4)
08 (ln 3): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
09 (ln 3): Constant(1: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
10 (ln 3): Call(print(_))
11 (ln 3): Pop
12 (ln 6): Boolean true
13 (ln 6): JumpIfFalse(4)
14 (ln 6): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
15 (ln 6): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
16 (ln 6): Call(print(_))
17 (ln 6): Pop
18 (ln 9): Boolean false
19 (ln 9): Store(Module)
20 (ln 9): Pop
21 (ln 10): Boolean true
22 (ln 10): Store(Module)
23 (ln 10): JumpIfFalse(4)
24 (ln 10): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
25 (ln 10): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
26 (ln 10): Call(print(_))
27 (ln 10): Pop
28 (ln 11): EndModule
29 (ln 11): Return
30 (ln 11): End
