<script> Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
01: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
<script> Code:
00 (ln 2): Boolean true
01 (ln 2): JumpIfFalse(11)
02 (ln 2): Boolean false
03 (ln 2): JumpIfFalse(5)
04 (ln 2): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
05 (ln 2): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
06 (ln 2): Call(print(_))
07 (ln 2): Pop
08 (ln 2): Jump(4)
09 (ln 2): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
10 (ln 2): Constant(1: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
11 (ln 2): Call(print(_))
12 (ln 2): Pop
13 (ln 3): Boolean false
14 (ln 3): JumpIfFalse(11)
15 (ln 3): Boolean true
16 (ln 3): JumpIfFalse(5)
17 (ln 3): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
18 (ln 3): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
19 (ln 3): Call(print(_))
20 (ln 3): Pop
21 (ln 3): Jump(4)
22 (ln 3): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
23 (ln 3): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
24 (ln 3): Call(print(_))
25 (ln 3): Pop
26 (ln 4): EndModule
27 (ln 4): Return
28 (ln 4): End
