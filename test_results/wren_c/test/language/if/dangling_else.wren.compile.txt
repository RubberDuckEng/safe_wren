Function { constants: [String("bad"), String("good"), String("bad"), String("bad")], code: [Boolean(true), JumpIfFalse(11), Boolean(false), JumpIfFalse(5), Load(Variable { scope: Module, index: 9 }), Constant(0), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Jump(4), Load(Variable { scope: Module, index: 9 }), Constant(1), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Boolean(false), JumpIfFalse(11), Boolean(true), JumpIfFalse(5), Load(Variable { scope: Module, index: 9 }), Constant(2), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Jump(4), Load(Variable { scope: Module, index: 9 }), Constant(3), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, End, End] }
00: Boolean true
01: JumpIfFalse(11)
02: Boolean false
03: JumpIfFalse(5)
04: Load(Module 9: Class("System"))
05: Constant(0: String("bad"))
06: Call(Method: print(_) 42)
07: Pop
08: Jump(4)
09: Load(Module 9: Class("System"))
10: Constant(1: String("good"))
11: Call(Method: print(_) 42)
12: Pop
13: Boolean false
14: JumpIfFalse(11)
15: Boolean true
16: JumpIfFalse(5)
17: Load(Module 9: Class("System"))
18: Constant(2: String("bad"))
19: Call(Method: print(_) 42)
20: Pop
21: Jump(4)
22: Load(Module 9: Class("System"))
23: Constant(3: String("bad"))
24: Call(Method: print(_) 42)
25: Pop
26: End
27: End
