<script> Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
01: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
02: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
<script> Code:
00 (ln 1): Null
01 (ln 1): Store(Module)
02 (ln 1): Pop
03 (ln 2): Null
04 (ln 2): Store(Module)
05 (ln 2): Pop
06 (ln 5): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
07 (ln 6): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
08 (ln 10): Closure(1, [Upvalue { is_local_in_parent: true, index: 1 }])
09 (ln 10): Call(new(_))
10 (ln 10): Store(Module)
11 (ln 10): Pop
12 (ln 12): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
13 (ln 16): Closure(2, [Upvalue { is_local_in_parent: true, index: 1 }])
14 (ln 16): Call(new(_))
15 (ln 16): Store(Module)
16 (ln 16): Pop
17 (ln 17): CloseUpvalues
18 (ln 19): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
19 (ln 19): Call(call())
20 (ln 19): Pop
21 (ln 23): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
22 (ln 23): Call(call())
23 (ln 23): Pop
24 (ln 26): EndModule
25 (ln 26): Return
26 (ln 26): End
new(_) block argument Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
new(_) block argument Code:
00 (ln 7): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 7): Load(Upvalue, 0)
02 (ln 7): Call(print(_))
03 (ln 7): Pop
04 (ln 8): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
05 (ln 8): Store(Upvalue, 0)
06 (ln 8): Pop
07 (ln 9): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
08 (ln 9): Load(Upvalue, 0)
09 (ln 9): Call(print(_))
10 (ln 9): Pop
11 (ln 10): Null
12 (ln 10): Return
13 (ln 10): End
new(_) block argument Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
new(_) block argument Code:
00 (ln 13): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 13): Load(Upvalue, 0)
02 (ln 13): Call(print(_))
03 (ln 13): Pop
04 (ln 14): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
05 (ln 14): Store(Upvalue, 0)
06 (ln 14): Pop
07 (ln 15): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
08 (ln 15): Load(Upvalue, 0)
09 (ln 15): Call(print(_))
10 (ln 15): Pop
11 (ln 16): Null
12 (ln 16): Return
13 (ln 16): End
