<script> Constants:
00: "before"
01: Fn(new(_) block argument)
02: Fn(new(_) block argument)
<script> Code:
00 (ln 1): Null
01 (ln 1): Store(Module)
02 (ln 1): Pop
03 (ln 2): Null
04 (ln 2): Store(Module)
05 (ln 2): Pop
06 (ln 5): Constant(0: "before")
07 (ln 6): Load(Module, Class("Fiber"))
08 (ln 13): Closure(1, [Upvalue { is_local_in_parent: true, index: 1 }])
09 (ln 13): Call(new(_))
10 (ln 13): Store(Module)
11 (ln 13): Pop
12 (ln 15): Load(Module, Class("Fn"))
13 (ln 17): Closure(2, [Upvalue { is_local_in_parent: true, index: 1 }])
14 (ln 17): Call(new(_))
15 (ln 17): Store(Module)
16 (ln 17): Pop
17 (ln 18): CloseUpvalues
18 (ln 20): Load(Module, Null)
19 (ln 20): Call(call())
20 (ln 20): Pop
21 (ln 21): Load(Module, Null)
22 (ln 21): Call(call())
23 (ln 21): Pop
24 (ln 22): Load(Module, Null)
25 (ln 22): Call(call())
26 (ln 22): Pop
27 (ln 23): Load(Module, Null)
28 (ln 23): Call(call())
29 (ln 23): Pop
30 (ln 24): Load(Module, Null)
31 (ln 24): Call(call())
32 (ln 24): Pop
33 (ln 25): Load(Module, Null)
34 (ln 25): Call(call())
35 (ln 25): Pop
36 (ln 26): EndModule
37 (ln 26): Return
38 (ln 26): End
new(_) block argument Constants:
00: "after"
01: "final"
new(_) block argument Code:
00 (ln 7): Load(Module, Class("System"))
01 (ln 7): Load(Upvalue, 0)
02 (ln 7): Call(print(_))
03 (ln 7): Pop
04 (ln 8): Load(Module, Class("Fiber"))
05 (ln 8): Call(yield())
06 (ln 8): Pop
07 (ln 9): Constant(0: "after")
08 (ln 9): Store(Upvalue, 0)
09 (ln 9): Pop
10 (ln 10): Load(Module, Class("Fiber"))
11 (ln 10): Call(yield())
12 (ln 10): Pop
13 (ln 11): Load(Module, Class("System"))
14 (ln 11): Load(Upvalue, 0)
15 (ln 11): Call(print(_))
16 (ln 11): Pop
17 (ln 12): Constant(1: "final")
18 (ln 12): Store(Upvalue, 0)
19 (ln 12): Pop
20 (ln 13): Null
21 (ln 13): Return
22 (ln 13): End
new(_) block argument Code:
00 (ln 16): Load(Module, Class("System"))
01 (ln 16): Load(Upvalue, 0)
02 (ln 16): Call(print(_))
03 (ln 16): Pop
04 (ln 17): Null
05 (ln 17): Return
06 (ln 17): End
