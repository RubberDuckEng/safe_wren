<script> Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
01: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
02: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
03: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
04: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
05: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
06: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
07: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
08: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
09: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
10: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
11: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
12: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
13: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
14: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
15: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
16: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
17: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
18: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
19: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
20: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
21: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
22: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
23: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
24: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
25: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
26: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
27: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
28: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
29: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
30: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
31: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
32: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
<script> Code:
00 (ln 1): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 1): Closure(0, [])
02 (ln 1): Call(new(_))
03 (ln 1): Store(Module)
04 (ln 1): Pop
05 (ln 2): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
06 (ln 2): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
07 (ln 2): Call(call())
08 (ln 2): Call(print(_))
09 (ln 2): Pop
10 (ln 4): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
11 (ln 4): Closure(1, [])
12 (ln 4): Call(new(_))
13 (ln 4): Store(Module)
14 (ln 4): Pop
15 (ln 5): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
16 (ln 5): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
17 (ln 5): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
18 (ln 5): Call(call(_))
19 (ln 5): Call(print(_))
20 (ln 5): Pop
21 (ln 7): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
22 (ln 7): Closure(3, [])
23 (ln 7): Call(new(_))
24 (ln 7): Store(Module)
25 (ln 7): Pop
26 (ln 8): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
27 (ln 8): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
28 (ln 8): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
29 (ln 8): Constant(4: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
30 (ln 8): Call(call(_,_))
31 (ln 8): Call(print(_))
32 (ln 8): Pop
33 (ln 10): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
34 (ln 10): Closure(5, [])
35 (ln 10): Call(new(_))
36 (ln 10): Store(Module)
37 (ln 10): Pop
38 (ln 11): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
39 (ln 11): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
40 (ln 11): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
41 (ln 11): Constant(4: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
42 (ln 11): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
43 (ln 11): Call(call(_,_,_))
44 (ln 11): Call(print(_))
45 (ln 11): Pop
46 (ln 13): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
47 (ln 13): Closure(7, [])
48 (ln 13): Call(new(_))
49 (ln 13): Store(Module)
50 (ln 13): Pop
51 (ln 14): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
52 (ln 14): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
53 (ln 14): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
54 (ln 14): Constant(4: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
55 (ln 14): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
56 (ln 14): Constant(8: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
57 (ln 14): Call(call(_,_,_,_))
58 (ln 14): Call(print(_))
59 (ln 14): Pop
60 (ln 16): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
61 (ln 16): Closure(9, [])
62 (ln 16): Call(new(_))
63 (ln 16): Store(Module)
64 (ln 16): Pop
65 (ln 17): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
66 (ln 17): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
67 (ln 17): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
68 (ln 17): Constant(4: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
69 (ln 17): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
70 (ln 17): Constant(8: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
71 (ln 17): Constant(10: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
72 (ln 17): Call(call(_,_,_,_,_))
73 (ln 17): Call(print(_))
74 (ln 17): Pop
75 (ln 19): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
76 (ln 19): Closure(11, [])
77 (ln 19): Call(new(_))
78 (ln 19): Store(Module)
79 (ln 19): Pop
80 (ln 20): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
81 (ln 20): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
82 (ln 20): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
83 (ln 20): Constant(4: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
84 (ln 20): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
85 (ln 20): Constant(8: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
86 (ln 20): Constant(10: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
87 (ln 20): Constant(12: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
88 (ln 20): Call(call(_,_,_,_,_,_))
89 (ln 20): Call(print(_))
90 (ln 20): Pop
91 (ln 22): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
92 (ln 22): Closure(13, [])
93 (ln 22): Call(new(_))
94 (ln 22): Store(Module)
95 (ln 22): Pop
96 (ln 23): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
97 (ln 23): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
98 (ln 23): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
99 (ln 23): Constant(4: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
100 (ln 23): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
101 (ln 23): Constant(8: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
102 (ln 23): Constant(10: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
103 (ln 23): Constant(12: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
104 (ln 23): Constant(14: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
105 (ln 23): Call(call(_,_,_,_,_,_,_))
106 (ln 23): Call(print(_))
107 (ln 23): Pop
108 (ln 25): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
109 (ln 25): Closure(15, [])
110 (ln 25): Call(new(_))
111 (ln 25): Store(Module)
112 (ln 25): Pop
113 (ln 26): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
114 (ln 26): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
115 (ln 26): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
116 (ln 26): Constant(4: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
117 (ln 26): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
118 (ln 26): Constant(8: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
119 (ln 26): Constant(10: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
120 (ln 26): Constant(12: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
121 (ln 26): Constant(14: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
122 (ln 26): Constant(16: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
123 (ln 26): Call(call(_,_,_,_,_,_,_,_))
124 (ln 26): Call(print(_))
125 (ln 26): Pop
126 (ln 28): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
127 (ln 28): Closure(17, [])
128 (ln 28): Call(new(_))
129 (ln 28): Store(Module)
130 (ln 28): Pop
131 (ln 29): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
132 (ln 29): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
133 (ln 29): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
134 (ln 29): Constant(4: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
135 (ln 29): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
136 (ln 29): Constant(8: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
137 (ln 29): Constant(10: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
138 (ln 29): Constant(12: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
139 (ln 29): Constant(14: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
140 (ln 29): Constant(16: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
141 (ln 29): Constant(18: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
142 (ln 29): Call(call(_,_,_,_,_,_,_,_,_))
143 (ln 29): Call(print(_))
144 (ln 29): Pop
145 (ln 31): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
146 (ln 31): Closure(19, [])
147 (ln 31): Call(new(_))
148 (ln 31): Store(Module)
149 (ln 31): Pop
150 (ln 32): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
151 (ln 32): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
152 (ln 32): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
153 (ln 32): Constant(4: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
154 (ln 32): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
155 (ln 32): Constant(8: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
156 (ln 32): Constant(10: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
157 (ln 32): Constant(12: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
158 (ln 32): Constant(14: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
159 (ln 32): Constant(16: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
160 (ln 32): Constant(18: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
161 (ln 32): Constant(20: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
162 (ln 32): Call(call(_,_,_,_,_,_,_,_,_,_))
163 (ln 32): Call(print(_))
164 (ln 32): Pop
165 (ln 34): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
166 (ln 34): Closure(21, [])
167 (ln 34): Call(new(_))
168 (ln 34): Store(Module)
169 (ln 34): Pop
170 (ln 35): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
171 (ln 35): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
172 (ln 35): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
173 (ln 35): Constant(4: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
174 (ln 35): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
175 (ln 35): Constant(8: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
176 (ln 35): Constant(10: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
177 (ln 35): Constant(12: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
178 (ln 35): Constant(14: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
179 (ln 35): Constant(16: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
180 (ln 35): Constant(18: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
181 (ln 35): Constant(20: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
182 (ln 35): Constant(22: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
183 (ln 35): Call(call(_,_,_,_,_,_,_,_,_,_,_))
184 (ln 35): Call(print(_))
185 (ln 35): Pop
186 (ln 37): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
187 (ln 37): Closure(23, [])
188 (ln 37): Call(new(_))
189 (ln 37): Store(Module)
190 (ln 37): Pop
191 (ln 38): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
192 (ln 38): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
193 (ln 38): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
194 (ln 38): Constant(4: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
195 (ln 38): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
196 (ln 38): Constant(8: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
197 (ln 38): Constant(10: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
198 (ln 38): Constant(12: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
199 (ln 38): Constant(14: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
200 (ln 38): Constant(16: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
201 (ln 38): Constant(18: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
202 (ln 38): Constant(20: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
203 (ln 38): Constant(22: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
204 (ln 38): Constant(24: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
205 (ln 38): Call(call(_,_,_,_,_,_,_,_,_,_,_,_))
206 (ln 38): Call(print(_))
207 (ln 38): Pop
208 (ln 40): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
209 (ln 40): Closure(25, [])
210 (ln 40): Call(new(_))
211 (ln 40): Store(Module)
212 (ln 40): Pop
213 (ln 41): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
214 (ln 41): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
215 (ln 41): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
216 (ln 41): Constant(4: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
217 (ln 41): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
218 (ln 41): Constant(8: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
219 (ln 41): Constant(10: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
220 (ln 41): Constant(12: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
221 (ln 41): Constant(14: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
222 (ln 41): Constant(16: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
223 (ln 41): Constant(18: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
224 (ln 41): Constant(20: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
225 (ln 41): Constant(22: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
226 (ln 41): Constant(24: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
227 (ln 41): Constant(26: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
228 (ln 41): Call(call(_,_,_,_,_,_,_,_,_,_,_,_,_))
229 (ln 41): Call(print(_))
230 (ln 41): Pop
231 (ln 43): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
232 (ln 43): Closure(27, [])
233 (ln 43): Call(new(_))
234 (ln 43): Store(Module)
235 (ln 43): Pop
236 (ln 44): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
237 (ln 44): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
238 (ln 44): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
239 (ln 44): Constant(4: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
240 (ln 44): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
241 (ln 44): Constant(8: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
242 (ln 44): Constant(10: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
243 (ln 44): Constant(12: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
244 (ln 44): Constant(14: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
245 (ln 44): Constant(16: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
246 (ln 44): Constant(18: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
247 (ln 44): Constant(20: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
248 (ln 44): Constant(22: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
249 (ln 44): Constant(24: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
250 (ln 44): Constant(26: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
251 (ln 44): Constant(28: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
252 (ln 44): Call(call(_,_,_,_,_,_,_,_,_,_,_,_,_,_))
253 (ln 44): Call(print(_))
254 (ln 44): Pop
255 (ln 46): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
256 (ln 46): Closure(29, [])
257 (ln 46): Call(new(_))
258 (ln 46): Store(Module)
259 (ln 46): Pop
260 (ln 47): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
261 (ln 47): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
262 (ln 47): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
263 (ln 47): Constant(4: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
264 (ln 47): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
265 (ln 47): Constant(8: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
266 (ln 47): Constant(10: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
267 (ln 47): Constant(12: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
268 (ln 47): Constant(14: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
269 (ln 47): Constant(16: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
270 (ln 47): Constant(18: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
271 (ln 47): Constant(20: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
272 (ln 47): Constant(22: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
273 (ln 47): Constant(24: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
274 (ln 47): Constant(26: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
275 (ln 47): Constant(28: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
276 (ln 47): Constant(30: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
277 (ln 47): Call(call(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_))
278 (ln 47): Call(print(_))
279 (ln 47): Pop
280 (ln 49): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
281 (ln 49): Closure(31, [])
282 (ln 49): Call(new(_))
283 (ln 49): Store(Module)
284 (ln 49): Pop
285 (ln 50): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
286 (ln 50): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
287 (ln 50): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
288 (ln 50): Constant(4: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
289 (ln 50): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
290 (ln 50): Constant(8: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
291 (ln 50): Constant(10: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
292 (ln 50): Constant(12: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
293 (ln 50): Constant(14: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
294 (ln 50): Constant(16: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
295 (ln 50): Constant(18: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
296 (ln 50): Constant(20: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
297 (ln 50): Constant(22: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
298 (ln 50): Constant(24: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
299 (ln 50): Constant(26: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
300 (ln 50): Constant(28: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
301 (ln 50): Constant(30: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
302 (ln 50): Constant(32: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
303 (ln 50): Call(call(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_))
304 (ln 50): Call(print(_))
305 (ln 50): Pop
306 (ln 51): EndModule
307 (ln 51): Return
308 (ln 51): End
new(_) block argument Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
new(_) block argument Code:
00 (ln 1): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 1): Return
02 (ln 1): End
new(_) block argument Code:
00 (ln 4): Load(Local, 1)
01 (ln 4): Return
02 (ln 4): End
new(_) block argument Code:
00 (ln 7): Load(Local, 1)
01 (ln 7): Load(Local, 2)
02 (ln 7): Call(+(_))
03 (ln 7): Return
04 (ln 7): End
new(_) block argument Code:
00 (ln 10): Load(Local, 1)
01 (ln 10): Load(Local, 2)
02 (ln 10): Call(+(_))
03 (ln 10): Load(Local, 3)
04 (ln 10): Call(+(_))
05 (ln 10): Return
06 (ln 10): End
new(_) block argument Code:
00 (ln 13): Load(Local, 1)
01 (ln 13): Load(Local, 2)
02 (ln 13): Call(+(_))
03 (ln 13): Load(Local, 3)
04 (ln 13): Call(+(_))
05 (ln 13): Load(Local, 4)
06 (ln 13): Call(+(_))
07 (ln 13): Return
08 (ln 13): End
new(_) block argument Code:
00 (ln 16): Load(Local, 1)
01 (ln 16): Load(Local, 2)
02 (ln 16): Call(+(_))
03 (ln 16): Load(Local, 3)
04 (ln 16): Call(+(_))
05 (ln 16): Load(Local, 4)
06 (ln 16): Call(+(_))
07 (ln 16): Load(Local, 5)
08 (ln 16): Call(+(_))
09 (ln 16): Return
10 (ln 16): End
new(_) block argument Code:
00 (ln 19): Load(Local, 1)
01 (ln 19): Load(Local, 2)
02 (ln 19): Call(+(_))
03 (ln 19): Load(Local, 3)
04 (ln 19): Call(+(_))
05 (ln 19): Load(Local, 4)
06 (ln 19): Call(+(_))
07 (ln 19): Load(Local, 5)
08 (ln 19): Call(+(_))
09 (ln 19): Load(Local, 6)
10 (ln 19): Call(+(_))
11 (ln 19): Return
12 (ln 19): End
new(_) block argument Code:
00 (ln 22): Load(Local, 1)
01 (ln 22): Load(Local, 2)
02 (ln 22): Call(+(_))
03 (ln 22): Load(Local, 3)
04 (ln 22): Call(+(_))
05 (ln 22): Load(Local, 4)
06 (ln 22): Call(+(_))
07 (ln 22): Load(Local, 5)
08 (ln 22): Call(+(_))
09 (ln 22): Load(Local, 6)
10 (ln 22): Call(+(_))
11 (ln 22): Load(Local, 7)
12 (ln 22): Call(+(_))
13 (ln 22): Return
14 (ln 22): End
new(_) block argument Code:
00 (ln 25): Load(Local, 1)
01 (ln 25): Load(Local, 2)
02 (ln 25): Call(+(_))
03 (ln 25): Load(Local, 3)
04 (ln 25): Call(+(_))
05 (ln 25): Load(Local, 4)
06 (ln 25): Call(+(_))
07 (ln 25): Load(Local, 5)
08 (ln 25): Call(+(_))
09 (ln 25): Load(Local, 6)
10 (ln 25): Call(+(_))
11 (ln 25): Load(Local, 7)
12 (ln 25): Call(+(_))
13 (ln 25): Load(Local, 8)
14 (ln 25): Call(+(_))
15 (ln 25): Return
16 (ln 25): End
new(_) block argument Code:
00 (ln 28): Load(Local, 1)
01 (ln 28): Load(Local, 2)
02 (ln 28): Call(+(_))
03 (ln 28): Load(Local, 3)
04 (ln 28): Call(+(_))
05 (ln 28): Load(Local, 4)
06 (ln 28): Call(+(_))
07 (ln 28): Load(Local, 5)
08 (ln 28): Call(+(_))
09 (ln 28): Load(Local, 6)
10 (ln 28): Call(+(_))
11 (ln 28): Load(Local, 7)
12 (ln 28): Call(+(_))
13 (ln 28): Load(Local, 8)
14 (ln 28): Call(+(_))
15 (ln 28): Load(Local, 9)
16 (ln 28): Call(+(_))
17 (ln 28): Return
18 (ln 28): End
new(_) block argument Code:
00 (ln 31): Load(Local, 1)
01 (ln 31): Load(Local, 2)
02 (ln 31): Call(+(_))
03 (ln 31): Load(Local, 3)
04 (ln 31): Call(+(_))
05 (ln 31): Load(Local, 4)
06 (ln 31): Call(+(_))
07 (ln 31): Load(Local, 5)
08 (ln 31): Call(+(_))
09 (ln 31): Load(Local, 6)
10 (ln 31): Call(+(_))
11 (ln 31): Load(Local, 7)
12 (ln 31): Call(+(_))
13 (ln 31): Load(Local, 8)
14 (ln 31): Call(+(_))
15 (ln 31): Load(Local, 9)
16 (ln 31): Call(+(_))
17 (ln 31): Load(Local, 10)
18 (ln 31): Call(+(_))
19 (ln 31): Return
20 (ln 31): End
new(_) block argument Code:
00 (ln 34): Load(Local, 1)
01 (ln 34): Load(Local, 2)
02 (ln 34): Call(+(_))
03 (ln 34): Load(Local, 3)
04 (ln 34): Call(+(_))
05 (ln 34): Load(Local, 4)
06 (ln 34): Call(+(_))
07 (ln 34): Load(Local, 5)
08 (ln 34): Call(+(_))
09 (ln 34): Load(Local, 6)
10 (ln 34): Call(+(_))
11 (ln 34): Load(Local, 7)
12 (ln 34): Call(+(_))
13 (ln 34): Load(Local, 8)
14 (ln 34): Call(+(_))
15 (ln 34): Load(Local, 9)
16 (ln 34): Call(+(_))
17 (ln 34): Load(Local, 10)
18 (ln 34): Call(+(_))
19 (ln 34): Load(Local, 11)
20 (ln 34): Call(+(_))
21 (ln 34): Return
22 (ln 34): End
new(_) block argument Code:
00 (ln 37): Load(Local, 1)
01 (ln 37): Load(Local, 2)
02 (ln 37): Call(+(_))
03 (ln 37): Load(Local, 3)
04 (ln 37): Call(+(_))
05 (ln 37): Load(Local, 4)
06 (ln 37): Call(+(_))
07 (ln 37): Load(Local, 5)
08 (ln 37): Call(+(_))
09 (ln 37): Load(Local, 6)
10 (ln 37): Call(+(_))
11 (ln 37): Load(Local, 7)
12 (ln 37): Call(+(_))
13 (ln 37): Load(Local, 8)
14 (ln 37): Call(+(_))
15 (ln 37): Load(Local, 9)
16 (ln 37): Call(+(_))
17 (ln 37): Load(Local, 10)
18 (ln 37): Call(+(_))
19 (ln 37): Load(Local, 11)
20 (ln 37): Call(+(_))
21 (ln 37): Load(Local, 12)
22 (ln 37): Call(+(_))
23 (ln 37): Return
24 (ln 37): End
new(_) block argument Code:
00 (ln 40): Load(Local, 1)
01 (ln 40): Load(Local, 2)
02 (ln 40): Call(+(_))
03 (ln 40): Load(Local, 3)
04 (ln 40): Call(+(_))
05 (ln 40): Load(Local, 4)
06 (ln 40): Call(+(_))
07 (ln 40): Load(Local, 5)
08 (ln 40): Call(+(_))
09 (ln 40): Load(Local, 6)
10 (ln 40): Call(+(_))
11 (ln 40): Load(Local, 7)
12 (ln 40): Call(+(_))
13 (ln 40): Load(Local, 8)
14 (ln 40): Call(+(_))
15 (ln 40): Load(Local, 9)
16 (ln 40): Call(+(_))
17 (ln 40): Load(Local, 10)
18 (ln 40): Call(+(_))
19 (ln 40): Load(Local, 11)
20 (ln 40): Call(+(_))
21 (ln 40): Load(Local, 12)
22 (ln 40): Call(+(_))
23 (ln 40): Load(Local, 13)
24 (ln 40): Call(+(_))
25 (ln 40): Return
26 (ln 40): End
new(_) block argument Code:
00 (ln 43): Load(Local, 1)
01 (ln 43): Load(Local, 2)
02 (ln 43): Call(+(_))
03 (ln 43): Load(Local, 3)
04 (ln 43): Call(+(_))
05 (ln 43): Load(Local, 4)
06 (ln 43): Call(+(_))
07 (ln 43): Load(Local, 5)
08 (ln 43): Call(+(_))
09 (ln 43): Load(Local, 6)
10 (ln 43): Call(+(_))
11 (ln 43): Load(Local, 7)
12 (ln 43): Call(+(_))
13 (ln 43): Load(Local, 8)
14 (ln 43): Call(+(_))
15 (ln 43): Load(Local, 9)
16 (ln 43): Call(+(_))
17 (ln 43): Load(Local, 10)
18 (ln 43): Call(+(_))
19 (ln 43): Load(Local, 11)
20 (ln 43): Call(+(_))
21 (ln 43): Load(Local, 12)
22 (ln 43): Call(+(_))
23 (ln 43): Load(Local, 13)
24 (ln 43): Call(+(_))
25 (ln 43): Load(Local, 14)
26 (ln 43): Call(+(_))
27 (ln 43): Return
28 (ln 43): End
new(_) block argument Code:
00 (ln 46): Load(Local, 1)
01 (ln 46): Load(Local, 2)
02 (ln 46): Call(+(_))
03 (ln 46): Load(Local, 3)
04 (ln 46): Call(+(_))
05 (ln 46): Load(Local, 4)
06 (ln 46): Call(+(_))
07 (ln 46): Load(Local, 5)
08 (ln 46): Call(+(_))
09 (ln 46): Load(Local, 6)
10 (ln 46): Call(+(_))
11 (ln 46): Load(Local, 7)
12 (ln 46): Call(+(_))
13 (ln 46): Load(Local, 8)
14 (ln 46): Call(+(_))
15 (ln 46): Load(Local, 9)
16 (ln 46): Call(+(_))
17 (ln 46): Load(Local, 10)
18 (ln 46): Call(+(_))
19 (ln 46): Load(Local, 11)
20 (ln 46): Call(+(_))
21 (ln 46): Load(Local, 12)
22 (ln 46): Call(+(_))
23 (ln 46): Load(Local, 13)
24 (ln 46): Call(+(_))
25 (ln 46): Load(Local, 14)
26 (ln 46): Call(+(_))
27 (ln 46): Load(Local, 15)
28 (ln 46): Call(+(_))
29 (ln 46): Return
30 (ln 46): End
new(_) block argument Code:
00 (ln 49): Load(Local, 1)
01 (ln 49): Load(Local, 2)
02 (ln 49): Call(+(_))
03 (ln 49): Load(Local, 3)
04 (ln 49): Call(+(_))
05 (ln 49): Load(Local, 4)
06 (ln 49): Call(+(_))
07 (ln 49): Load(Local, 5)
08 (ln 49): Call(+(_))
09 (ln 49): Load(Local, 6)
10 (ln 49): Call(+(_))
11 (ln 49): Load(Local, 7)
12 (ln 49): Call(+(_))
13 (ln 49): Load(Local, 8)
14 (ln 49): Call(+(_))
15 (ln 49): Load(Local, 9)
16 (ln 49): Call(+(_))
17 (ln 49): Load(Local, 10)
18 (ln 49): Call(+(_))
19 (ln 49): Load(Local, 11)
20 (ln 49): Call(+(_))
21 (ln 49): Load(Local, 12)
22 (ln 49): Call(+(_))
23 (ln 49): Load(Local, 13)
24 (ln 49): Call(+(_))
25 (ln 49): Load(Local, 14)
26 (ln 49): Call(+(_))
27 (ln 49): Load(Local, 15)
28 (ln 49): Call(+(_))
29 (ln 49): Load(Local, 16)
30 (ln 49): Call(+(_))
31 (ln 49): Return
32 (ln 49): End
