<script> Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
<script> Code:
00 (ln 1): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 6): Closure(0, [])
02 (ln 6): Call(new(_))
03 (ln 6): Store(Module)
04 (ln 6): Pop
05 (ln 8): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
06 (ln 8): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
07 (ln 8): Call(call())
08 (ln 8): Call(print(_))
09 (ln 8): Pop
10 (ln 10): EndModule
11 (ln 10): Return
12 (ln 10): End
new(_) block argument Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
new(_) block argument Code:
00 (ln 2): Boolean true
01 (ln 2): JumpIfFalse(5)
02 (ln 3): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
03 (ln 4): Load(Local, 1)
04 (ln 4): Return
05 (ln 5): Pop
06 (ln 5): Loop(7)
07 (ln 6): Null
08 (ln 6): Return
09 (ln 6): End
