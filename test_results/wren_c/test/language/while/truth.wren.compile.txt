Function { constants: [String("bad"), String("bad"), String("true"), Num(0), Num(0), String(""), String("string")], code: [Boolean(false), JumpIfFalse(6), Load(Variable { scope: Module, index: 9 }), Constant(0), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Jump(1), Loop(8), Null, JumpIfFalse(6), Load(Variable { scope: Module, index: 9 }), Constant(1), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Jump(1), Loop(8), Boolean(true), JumpIfFalse(6), Load(Variable { scope: Module, index: 9 }), Constant(2), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Jump(1), Loop(8), Constant(3), JumpIfFalse(6), Load(Variable { scope: Module, index: 9 }), Constant(4), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Jump(1), Loop(8), Constant(5), JumpIfFalse(6), Load(Variable { scope: Module, index: 9 }), Constant(6), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Jump(1), Loop(8), End, End] }
00: Boolean false
01: JumpIfFalse(6)
02: Load(Module 9: Class("System"))
03: Constant(0: String("bad"))
04: Call(Method: print(_) 42)
05: Pop
06: Jump(1)
07: Loop(8)
08: Null
09: JumpIfFalse(6)
10: Load(Module 9: Class("System"))
11: Constant(1: String("bad"))
12: Call(Method: print(_) 42)
13: Pop
14: Jump(1)
15: Loop(8)
16: Boolean true
17: JumpIfFalse(6)
18: Load(Module 9: Class("System"))
19: Constant(2: String("true"))
20: Call(Method: print(_) 42)
21: Pop
22: Jump(1)
23: Loop(8)
24: Constant(3: Num(0))
25: JumpIfFalse(6)
26: Load(Module 9: Class("System"))
27: Constant(4: Num(0))
28: Call(Method: print(_) 42)
29: Pop
30: Jump(1)
31: Loop(8)
32: Constant(5: String(""))
33: JumpIfFalse(6)
34: Load(Module 9: Class("System"))
35: Constant(6: String("string"))
36: Call(Method: print(_) 42)
37: Pop
38: Jump(1)
39: Loop(8)
40: End
41: End
