<script> Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
01: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
02: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
03: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
04: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
05: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
06: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
07: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
08: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
09: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
<script> Code:
00 (ln 1): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 1): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
02 (ln 1): Class(1 fields)
03 (ln 1): Store(Module)
04 (ln 1): Pop
05 (ln 2): Closure(1, [])
06 (ln 2): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
07 (ln 2): Method(instance, init new())
08 (ln 2): Closure(2, [])
09 (ln 2): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
10 (ln 2): Method(static, new())
11 (ln 6): Closure(3, [])
12 (ln 6): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
13 (ln 6): Method(instance, closeOverFooGet)
14 (ln 10): Closure(4, [])
15 (ln 10): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
16 (ln 10): Method(instance, closeOverFooSet)
17 (ln 13): Constant(5: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
18 (ln 13): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
19 (ln 13): Class(1 fields)
20 (ln 13): Store(Module)
21 (ln 13): Pop
22 (ln 17): Closure(6, [])
23 (ln 17): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
24 (ln 17): Method(instance, init new())
25 (ln 17): Closure(7, [])
26 (ln 17): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
27 (ln 17): Method(static, new())
28 (ln 21): Closure(8, [])
29 (ln 21): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
30 (ln 21): Method(instance, closeOverBarGet)
31 (ln 25): Closure(9, [])
32 (ln 25): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
33 (ln 25): Method(instance, closeOverBarSet)
34 (ln 28): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
35 (ln 28): Call(new())
36 (ln 28): Store(Module)
37 (ln 28): Pop
38 (ln 29): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
39 (ln 29): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
40 (ln 29): Call(closeOverFooGet)
41 (ln 29): Call(call())
42 (ln 29): Call(call())
43 (ln 29): Call(print(_))
44 (ln 29): Pop
45 (ln 30): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
46 (ln 30): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
47 (ln 30): Call(closeOverBarGet)
48 (ln 30): Call(call())
49 (ln 30): Call(call())
50 (ln 30): Call(print(_))
51 (ln 30): Pop
52 (ln 31): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
53 (ln 31): Call(closeOverFooSet)
54 (ln 31): Call(call())
55 (ln 31): Call(call())
56 (ln 31): Pop
57 (ln 32): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
58 (ln 32): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
59 (ln 32): Call(closeOverFooGet)
60 (ln 32): Call(call())
61 (ln 32): Call(call())
62 (ln 32): Call(print(_))
63 (ln 32): Pop
64 (ln 33): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
65 (ln 33): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
66 (ln 33): Call(closeOverBarGet)
67 (ln 33): Call(call())
68 (ln 33): Call(call())
69 (ln 33): Call(print(_))
70 (ln 33): Pop
71 (ln 34): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
72 (ln 34): Call(closeOverBarSet)
73 (ln 34): Call(call())
74 (ln 34): Call(call())
75 (ln 34): Pop
76 (ln 35): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
77 (ln 35): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
78 (ln 35): Call(closeOverFooGet)
79 (ln 35): Call(call())
80 (ln 35): Call(call())
81 (ln 35): Call(print(_))
82 (ln 35): Pop
83 (ln 36): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
84 (ln 36): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
85 (ln 36): Call(closeOverBarGet)
86 (ln 36): Call(call())
87 (ln 36): Call(call())
88 (ln 36): Call(print(_))
89 (ln 36): Pop
90 (ln 37): EndModule
91 (ln 37): Return
92 (ln 37): End
init new() Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
init new() Code:
00 (ln 2): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 2): Load(Local, 0)
02 (ln 2): StoreField(0)
03 (ln 2): Pop
04 (ln 2): Load(Local, 0)
05 (ln 2): Return
06 (ln 2): End
 Code:
00 (ln 2): Construct
01 (ln 2): Call(init new())
02 (ln 2): Return
03 (ln 2): End
closeOverFooGet Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
closeOverFooGet Code:
00 (ln 5): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 5): Closure(0, [Upvalue { is_local_in_parent: true, index: 0 }])
02 (ln 5): Call(new(_))
03 (ln 5): Return
04 (ln 6): Null
05 (ln 6): Return
06 (ln 6): End
closeOverFooSet Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
closeOverFooSet Code:
00 (ln 9): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 9): Closure(0, [Upvalue { is_local_in_parent: true, index: 0 }])
02 (ln 9): Call(new(_))
03 (ln 9): Return
04 (ln 10): Null
05 (ln 10): Return
06 (ln 10): End
init new() Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
01: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
init new() Code:
00 (ln 15): Load(Local, 0)
01 (ln 15): CallSuper(init new())
02 (ln 15): Pop
03 (ln 16): Constant(1: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
04 (ln 16): Load(Local, 0)
05 (ln 16): StoreField(0)
06 (ln 16): Pop
07 (ln 17): Load(Local, 0)
08 (ln 17): Return
09 (ln 17): End
 Code:
00 (ln 17): Construct
01 (ln 17): Call(init new())
02 (ln 17): Return
03 (ln 17): End
closeOverBarGet Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
closeOverBarGet Code:
00 (ln 20): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 20): Closure(0, [Upvalue { is_local_in_parent: true, index: 0 }])
02 (ln 20): Call(new(_))
03 (ln 20): Return
04 (ln 21): Null
05 (ln 21): Return
06 (ln 21): End
closeOverBarSet Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
closeOverBarSet Code:
00 (ln 24): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 24): Closure(0, [Upvalue { is_local_in_parent: true, index: 0 }])
02 (ln 24): Call(new(_))
03 (ln 24): Return
04 (ln 25): Null
05 (ln 25): Return
06 (ln 25): End
new(_) block argument Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
new(_) block argument Code:
00 (ln 5): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 5): Closure(0, [Upvalue { is_local_in_parent: false, index: 0 }])
02 (ln 5): Call(new(_))
03 (ln 5): Return
04 (ln 5): End
new(_) block argument Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
new(_) block argument Code:
00 (ln 9): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 9): Closure(0, [Upvalue { is_local_in_parent: false, index: 0 }])
02 (ln 9): Call(new(_))
03 (ln 9): Return
04 (ln 9): End
new(_) block argument Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
new(_) block argument Code:
00 (ln 20): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 20): Closure(0, [Upvalue { is_local_in_parent: false, index: 0 }])
02 (ln 20): Call(new(_))
03 (ln 20): Return
04 (ln 20): End
new(_) block argument Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
new(_) block argument Code:
00 (ln 24): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 24): Closure(0, [Upvalue { is_local_in_parent: false, index: 0 }])
02 (ln 24): Call(new(_))
03 (ln 24): Return
04 (ln 24): End
new(_) block argument Code:
00 (ln 5): Load(Upvalue, 0)
01 (ln 5): LoadField(0)
02 (ln 5): Return
03 (ln 5): End
new(_) block argument Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
new(_) block argument Code:
00 (ln 9): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 9): Load(Upvalue, 0)
02 (ln 9): StoreField(0)
03 (ln 9): Return
04 (ln 9): End
new(_) block argument Code:
00 (ln 20): Load(Upvalue, 0)
01 (ln 20): LoadField(0)
02 (ln 20): Return
03 (ln 20): End
new(_) block argument Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
new(_) block argument Code:
00 (ln 24): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 24): Load(Upvalue, 0)
02 (ln 24): StoreField(0)
03 (ln 24): Return
04 (ln 24): End
