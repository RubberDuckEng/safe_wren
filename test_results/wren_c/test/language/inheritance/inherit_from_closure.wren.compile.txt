<script> Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
01: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
02: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
<script> Code:
00 (ln 1): Null
01 (ln 1): Store(Module)
02 (ln 1): Pop
03 (ln 4): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
04 (ln 5): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
05 (ln 5): Closure(1, [Upvalue { is_local_in_parent: true, index: 1 }])
06 (ln 5): Call(new(_))
07 (ln 5): Call(type)
08 (ln 5): Store(Module)
09 (ln 5): Pop
10 (ln 6): CloseUpvalues
11 (ln 8): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
12 (ln 8): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
13 (ln 8): Class(0 fields)
14 (ln 8): Store(Module)
15 (ln 8): Pop
16 (ln 9): EndModule
17 (ln 9): Return
18 (ln 9): End
new(_) block argument Code:
00 (ln 5): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 5): Load(Upvalue, 0)
02 (ln 5): Call(print(_))
03 (ln 5): Return
04 (ln 5): End
