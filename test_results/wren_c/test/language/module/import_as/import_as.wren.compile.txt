<script> Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
01: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
<script> Code:
00 (ln 1): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 1): Store(Module)
02 (ln 1): Pop
03 (ln 2): Constant(1: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
04 (ln 2): Store(Module)
05 (ln 2): Pop
06 (ln 3): ImportModule("./module")
07 (ln 3): Pop
08 (ln 3): ImportVariable("ValueA")
09 (ln 3): Store(Module)
10 (ln 3): Pop
11 (ln 3): ImportVariable("Module")
12 (ln 3): Store(Module)
13 (ln 3): Pop
14 (ln 3): ImportVariable("ValueB")
15 (ln 3): Store(Module)
16 (ln 3): Pop
17 (ln 4): ImportModule("./module")
18 (ln 4): Pop
19 (ln 4): ImportVariable("ValueC")
20 (ln 4): Store(Module)
21 (ln 4): Pop
22 (ln 6): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
23 (ln 6): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
24 (ln 6): Call(print(_))
25 (ln 6): Pop
26 (ln 7): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
27 (ln 7): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
28 (ln 7): Call(print(_))
29 (ln 7): Pop
30 (ln 8): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
31 (ln 8): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
32 (ln 8): Call(print(_))
33 (ln 8): Pop
34 (ln 9): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
35 (ln 9): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
36 (ln 9): Call(print(_))
37 (ln 9): Pop
38 (ln 10): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
39 (ln 10): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
40 (ln 10): Call(print(_))
41 (ln 10): Pop
42 (ln 11): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
43 (ln 11): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
44 (ln 11): Call(print(_))
45 (ln 11): Pop
46 (ln 12): EndModule
47 (ln 12): Return
48 (ln 12): End
