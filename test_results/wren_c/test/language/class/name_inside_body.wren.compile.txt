Function { constants: [String("Foo"), Fn(), Fn(), Fn(), Fn(), Fn()], code: [Constant(0), Load(Variable { scope: Module, index: 0 }), Class(0), Store(Variable { scope: Module, index: 10 }), Pop, Closure(1, []), Load(Variable { scope: Module, index: 10 }), Method(false, 43), Closure(2, []), Load(Variable { scope: Module, index: 10 }), Method(true, 44), Closure(3, []), Load(Variable { scope: Module, index: 10 }), Method(true, 45), Closure(4, []), Load(Variable { scope: Module, index: 10 }), Method(false, 45), Closure(5, []), Load(Variable { scope: Module, index: 10 }), Method(true, 46), Load(Variable { scope: Module, index: 10 }), Call(Signature { bare_name: "sayName", call_type: Getter, arity: 0 }, 45), Pop, Load(Variable { scope: Module, index: 10 }), Call(Signature { bare_name: "new", call_type: Method, arity: 0 }, 44), Call(Signature { bare_name: "sayName", call_type: Getter, arity: 0 }, 45), Pop, End, End] }
00: Constant(0: String("Foo"))
01: Load(Module 0: Class("Object"))
02: Class(0 fields)
03: Store(Module 10)
04: Pop
05: Closure(1, [])
06: Load(Module 10: Null)
07: Method(instance 43: init new())
08: Closure(2, [])
09: Load(Module 10: Null)
10: Method(static 44: new())
11: Closure(3, [])
12: Load(Module 10: Null)
13: Method(static 45: sayName)
14: Closure(4, [])
15: Load(Module 10: Null)
16: Method(instance 45: sayName)
17: Closure(5, [])
18: Load(Module 10: Null)
19: Method(static 46: toString)
20: Load(Module 10: Null)
21: Call(Getter: sayName 45)
22: Pop
23: Load(Module 10: Null)
24: Call(Method: new() 44)
25: Call(Getter: sayName 45)
26: Pop
27: End
28: End
