<script> Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
01: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
02: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
03: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
04: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
05: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
06: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
07: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
08: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
09: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
10: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
<script> Code:
00 (ln 1): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 1): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
02 (ln 1): Class(0 fields)
03 (ln 1): Store(Module)
04 (ln 1): Pop
05 (ln 2): Closure(1, [])
06 (ln 2): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
07 (ln 2): Method(instance, init new())
08 (ln 2): Closure(2, [])
09 (ln 2): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
10 (ln 2): Method(static, new())
11 (ln 3): Closure(3, [])
12 (ln 3): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
13 (ln 3): Method(static, bar)
14 (ln 4): Closure(4, [])
15 (ln 4): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
16 (ln 4): Method(static, baz)
17 (ln 8): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
18 (ln 8): Boolean true
19 (ln 8): JumpIfFalse(2)
20 (ln 8): Constant(5: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
21 (ln 8): Jump(1)
22 (ln 8): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
23 (ln 8): Call(print(_))
24 (ln 8): Pop
25 (ln 9): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
26 (ln 9): Boolean true
27 (ln 9): JumpIfFalse(2)
28 (ln 9): Constant(5: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
29 (ln 9): Jump(1)
30 (ln 9): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
31 (ln 9): Call(print(_))
32 (ln 9): Pop
33 (ln 10): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
34 (ln 10): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
35 (ln 10): Call(new())
36 (ln 10): Boolean true
37 (ln 10): Call(addCore_(_))
38 (ln 10): Constant(7: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
39 (ln 10): Call([_])
40 (ln 10): JumpIfFalse(2)
41 (ln 10): Constant(5: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
42 (ln 10): Jump(1)
43 (ln 10): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
44 (ln 10): Call(print(_))
45 (ln 10): Pop
46 (ln 11): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
47 (ln 11): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
48 (ln 11): Call(bar)
49 (ln 11): JumpIfFalse(2)
50 (ln 11): Constant(5: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
51 (ln 11): Jump(1)
52 (ln 11): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
53 (ln 11): Call(print(_))
54 (ln 11): Pop
55 (ln 12): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
56 (ln 12): Constant(8: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
57 (ln 12): Constant(9: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
58 (ln 12): Call(..(_))
59 (ln 12): JumpIfFalse(2)
60 (ln 12): Constant(5: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
61 (ln 12): Jump(1)
62 (ln 12): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
63 (ln 12): Call(print(_))
64 (ln 12): Pop
65 (ln 13): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
66 (ln 13): Constant(8: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
67 (ln 13): Constant(9: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
68 (ln 13): Call(*(_))
69 (ln 13): JumpIfFalse(2)
70 (ln 13): Constant(5: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
71 (ln 13): Jump(1)
72 (ln 13): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
73 (ln 13): Call(print(_))
74 (ln 13): Pop
75 (ln 14): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
76 (ln 14): Constant(8: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
77 (ln 14): Constant(9: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
78 (ln 14): Call(+(_))
79 (ln 14): JumpIfFalse(2)
80 (ln 14): Constant(5: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
81 (ln 14): Jump(1)
82 (ln 14): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
83 (ln 14): Call(print(_))
84 (ln 14): Pop
85 (ln 15): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
86 (ln 15): Boolean true
87 (ln 15): Or(1)
88 (ln 15): Boolean false
89 (ln 15): JumpIfFalse(2)
90 (ln 15): Constant(5: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
91 (ln 15): Jump(1)
92 (ln 15): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
93 (ln 15): Call(print(_))
94 (ln 15): Pop
95 (ln 16): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
96 (ln 16): Boolean false
97 (ln 16): Call(!)
98 (ln 16): JumpIfFalse(2)
99 (ln 16): Constant(5: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
100 (ln 16): Jump(1)
101 (ln 16): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
102 (ln 16): Call(print(_))
103 (ln 16): Pop
104 (ln 17): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
105 (ln 17): Constant(7: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
106 (ln 17): Call(~)
107 (ln 17): JumpIfFalse(2)
108 (ln 17): Constant(5: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
109 (ln 17): Jump(1)
110 (ln 17): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
111 (ln 17): Call(print(_))
112 (ln 17): Pop
113 (ln 18): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
114 (ln 18): Constant(8: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
115 (ln 18): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
116 (ln 18): Call(is(_))
117 (ln 18): JumpIfFalse(2)
118 (ln 18): Constant(5: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
119 (ln 18): Jump(1)
120 (ln 18): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
121 (ln 18): Call(print(_))
122 (ln 18): Pop
123 (ln 19): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
124 (ln 19): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
125 (ln 19): Call(new())
126 (ln 19): JumpIfFalse(2)
127 (ln 19): Constant(5: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
128 (ln 19): Jump(1)
129 (ln 19): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
130 (ln 19): Call(print(_))
131 (ln 19): Pop
132 (ln 21): Constant(7: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
133 (ln 21): Store(Module)
134 (ln 21): Pop
135 (ln 22): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
136 (ln 22): Constant(8: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
137 (ln 22): JumpIfFalse(2)
138 (ln 22): Constant(5: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
139 (ln 22): Jump(1)
140 (ln 22): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
141 (ln 22): Store(Module)
142 (ln 22): Call(print(_))
143 (ln 22): Pop
144 (ln 23): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
145 (ln 23): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
146 (ln 23): Call(print(_))
147 (ln 23): Pop
148 (ln 26): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
149 (ln 26): Boolean true
150 (ln 26): JumpIfFalse(2)
151 (ln 26): Constant(5: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
152 (ln 26): Jump(1)
153 (ln 26): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
154 (ln 26): Call(print(_))
155 (ln 26): Pop
156 (ln 27): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
157 (ln 27): Boolean true
158 (ln 27): JumpIfFalse(7)
159 (ln 27): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
160 (ln 27): Call(new())
161 (ln 27): Constant(5: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
162 (ln 27): Call(addCore_(_))
163 (ln 27): Constant(7: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
164 (ln 27): Call([_])
165 (ln 27): Jump(1)
166 (ln 27): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
167 (ln 27): Call(print(_))
168 (ln 27): Pop
169 (ln 28): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
170 (ln 28): Boolean true
171 (ln 28): JumpIfFalse(3)
172 (ln 28): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
173 (ln 28): Call(baz)
174 (ln 28): Jump(1)
175 (ln 28): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
176 (ln 28): Call(print(_))
177 (ln 28): Pop
178 (ln 29): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
179 (ln 29): Boolean true
180 (ln 29): JumpIfFalse(4)
181 (ln 29): Constant(8: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
182 (ln 29): Constant(9: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
183 (ln 29): Call(..(_))
184 (ln 29): Jump(1)
185 (ln 29): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
186 (ln 29): Call(print(_))
187 (ln 29): Pop
188 (ln 30): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
189 (ln 30): Boolean true
190 (ln 30): JumpIfFalse(4)
191 (ln 30): Constant(8: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
192 (ln 30): Constant(9: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
193 (ln 30): Call(*(_))
194 (ln 30): Jump(1)
195 (ln 30): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
196 (ln 30): Call(print(_))
197 (ln 30): Pop
198 (ln 31): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
199 (ln 31): Boolean true
200 (ln 31): JumpIfFalse(4)
201 (ln 31): Constant(8: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
202 (ln 31): Constant(9: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
203 (ln 31): Call(+(_))
204 (ln 31): Jump(1)
205 (ln 31): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
206 (ln 31): Call(print(_))
207 (ln 31): Pop
208 (ln 32): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
209 (ln 32): Boolean true
210 (ln 32): JumpIfFalse(4)
211 (ln 32): Constant(5: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
212 (ln 32): Or(1)
213 (ln 32): Boolean false
214 (ln 32): Jump(1)
215 (ln 32): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
216 (ln 32): Call(print(_))
217 (ln 32): Pop
218 (ln 33): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
219 (ln 33): Boolean true
220 (ln 33): JumpIfFalse(3)
221 (ln 33): Boolean true
222 (ln 33): Call(!)
223 (ln 33): Jump(1)
224 (ln 33): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
225 (ln 33): Call(print(_))
226 (ln 33): Pop
227 (ln 34): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
228 (ln 34): Boolean true
229 (ln 34): JumpIfFalse(3)
230 (ln 34): Constant(7: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
231 (ln 34): Call(~)
232 (ln 34): Jump(1)
233 (ln 34): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
234 (ln 34): Call(print(_))
235 (ln 34): Pop
236 (ln 35): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
237 (ln 35): Boolean true
238 (ln 35): JumpIfFalse(4)
239 (ln 35): Constant(8: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
240 (ln 35): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
241 (ln 35): Call(is(_))
242 (ln 35): Jump(1)
243 (ln 35): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
244 (ln 35): Call(print(_))
245 (ln 35): Pop
246 (ln 36): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
247 (ln 36): Boolean true
248 (ln 36): JumpIfFalse(3)
249 (ln 36): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
250 (ln 36): Call(new())
251 (ln 36): Jump(1)
252 (ln 36): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
253 (ln 36): Call(print(_))
254 (ln 36): Pop
255 (ln 38): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
256 (ln 38): Boolean true
257 (ln 38): JumpIfFalse(3)
258 (ln 38): Constant(10: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
259 (ln 38): Store(Module)
260 (ln 38): Jump(1)
261 (ln 38): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
262 (ln 38): Call(print(_))
263 (ln 38): Pop
264 (ln 39): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
265 (ln 39): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
266 (ln 39): Call(print(_))
267 (ln 39): Pop
268 (ln 42): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
269 (ln 42): Boolean false
270 (ln 42): JumpIfFalse(2)
271 (ln 42): Constant(5: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
272 (ln 42): Jump(1)
273 (ln 42): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
274 (ln 42): Call(print(_))
275 (ln 42): Pop
276 (ln 43): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
277 (ln 43): Boolean false
278 (ln 43): JumpIfFalse(2)
279 (ln 43): Constant(5: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
280 (ln 43): Jump(6)
281 (ln 43): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
282 (ln 43): Call(new())
283 (ln 43): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
284 (ln 43): Call(addCore_(_))
285 (ln 43): Constant(7: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
286 (ln 43): Call([_])
287 (ln 43): Call(print(_))
288 (ln 43): Pop
289 (ln 44): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
290 (ln 44): Boolean false
291 (ln 44): JumpIfFalse(2)
292 (ln 44): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
293 (ln 44): Jump(2)
294 (ln 44): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
295 (ln 44): Call(baz)
296 (ln 44): Call(print(_))
297 (ln 44): Pop
298 (ln 45): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
299 (ln 45): Boolean false
300 (ln 45): JumpIfFalse(2)
301 (ln 45): Constant(5: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
302 (ln 45): Jump(3)
303 (ln 45): Constant(8: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
304 (ln 45): Constant(9: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
305 (ln 45): Call(..(_))
306 (ln 45): Call(print(_))
307 (ln 45): Pop
308 (ln 46): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
309 (ln 46): Boolean false
310 (ln 46): JumpIfFalse(2)
311 (ln 46): Constant(5: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
312 (ln 46): Jump(3)
313 (ln 46): Constant(8: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
314 (ln 46): Constant(9: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
315 (ln 46): Call(*(_))
316 (ln 46): Call(print(_))
317 (ln 46): Pop
318 (ln 47): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
319 (ln 47): Boolean false
320 (ln 47): JumpIfFalse(2)
321 (ln 47): Constant(5: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
322 (ln 47): Jump(3)
323 (ln 47): Constant(8: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
324 (ln 47): Constant(9: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
325 (ln 47): Call(+(_))
326 (ln 47): Call(print(_))
327 (ln 47): Pop
328 (ln 48): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
329 (ln 48): Boolean false
330 (ln 48): JumpIfFalse(2)
331 (ln 48): Constant(5: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
332 (ln 48): Jump(3)
333 (ln 48): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
334 (ln 48): Or(1)
335 (ln 48): Boolean false
336 (ln 48): Call(print(_))
337 (ln 48): Pop
338 (ln 49): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
339 (ln 49): Boolean false
340 (ln 49): JumpIfFalse(2)
341 (ln 49): Constant(5: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
342 (ln 49): Jump(2)
343 (ln 49): Boolean false
344 (ln 49): Call(!)
345 (ln 49): Call(print(_))
346 (ln 49): Pop
347 (ln 50): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
348 (ln 50): Boolean false
349 (ln 50): JumpIfFalse(2)
350 (ln 50): Constant(5: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
351 (ln 50): Jump(2)
352 (ln 50): Constant(7: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
353 (ln 50): Call(~)
354 (ln 50): Call(print(_))
355 (ln 50): Pop
356 (ln 51): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
357 (ln 51): Boolean false
358 (ln 51): JumpIfFalse(2)
359 (ln 51): Constant(5: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
360 (ln 51): Jump(3)
361 (ln 51): Constant(8: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
362 (ln 51): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
363 (ln 51): Call(is(_))
364 (ln 51): Call(print(_))
365 (ln 51): Pop
366 (ln 52): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
367 (ln 52): Boolean false
368 (ln 52): JumpIfFalse(2)
369 (ln 52): Constant(5: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
370 (ln 52): Jump(2)
371 (ln 52): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
372 (ln 52): Call(new())
373 (ln 52): Call(print(_))
374 (ln 52): Pop
375 (ln 55): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
376 (ln 55): Boolean true
377 (ln 55): JumpIfFalse(2)
378 (ln 55): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
379 (ln 55): Jump(5)
380 (ln 55): Boolean true
381 (ln 55): JumpIfFalse(2)
382 (ln 55): Constant(9: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
383 (ln 55): Jump(1)
384 (ln 55): Constant(10: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
385 (ln 55): Call(print(_))
386 (ln 55): Pop
387 (ln 56): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
388 (ln 56): Boolean false
389 (ln 56): JumpIfFalse(2)
390 (ln 56): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
391 (ln 56): Jump(5)
392 (ln 56): Boolean true
393 (ln 56): JumpIfFalse(2)
394 (ln 56): Constant(9: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
395 (ln 56): Jump(1)
396 (ln 56): Constant(10: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
397 (ln 56): Call(print(_))
398 (ln 56): Pop
399 (ln 57): EndModule
400 (ln 57): Return
401 (ln 57): End
init new() Code:
00 (ln 2): Load(Local, 0)
01 (ln 2): Return
02 (ln 2): End
 Code:
00 (ln 2): Construct
01 (ln 2): Call(init new())
02 (ln 2): Return
03 (ln 2): End
bar Code:
00 (ln 3): Boolean true
01 (ln 3): Return
02 (ln 3): End
baz Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
baz Code:
00 (ln 4): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 4): Return
02 (ln 4): End
