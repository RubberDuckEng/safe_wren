<script> Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
01: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
02: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
03: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
04: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
05: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
06: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
07: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
<script> Code:
00 (ln 2): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 2): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
02 (ln 2): Class(3 fields)
03 (ln 2): Store(Module)
04 (ln 2): Pop
05 (ln 7): Closure(1, [])
06 (ln 7): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
07 (ln 7): Method(instance, init new(_,_,_))
08 (ln 7): Closure(2, [])
09 (ln 7): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
10 (ln 7): Method(static, new(_,_,_))
11 (ln 19): Closure(3, [])
12 (ln 19): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
13 (ln 19): Method(instance, write())
14 (ln 22): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
15 (ln 22): Null
16 (ln 22): Constant(4: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
17 (ln 22): Null
18 (ln 22): Call(new(_,_,_))
19 (ln 22): Store(Module)
20 (ln 22): Pop
21 (ln 23): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
22 (ln 23): Null
23 (ln 23): Constant(5: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
24 (ln 23): Null
25 (ln 23): Call(new(_,_,_))
26 (ln 23): Store(Module)
27 (ln 23): Pop
28 (ln 24): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
29 (ln 24): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
30 (ln 24): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
31 (ln 24): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
32 (ln 24): Call(new(_,_,_))
33 (ln 24): Store(Module)
34 (ln 24): Pop
35 (ln 25): Null
36 (ln 25): Store(Module)
37 (ln 25): Pop
38 (ln 26): Null
39 (ln 26): Store(Module)
40 (ln 26): Pop
41 (ln 27): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
42 (ln 27): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
43 (ln 27): Constant(7: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
44 (ln 27): Null
45 (ln 27): Call(new(_,_,_))
46 (ln 27): Store(Module)
47 (ln 27): Pop
48 (ln 28): Null
49 (ln 28): Store(Module)
50 (ln 28): Pop
51 (ln 29): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
52 (ln 29): Call(write())
53 (ln 29): Pop
54 (ln 34): EndModule
55 (ln 34): Return
56 (ln 34): End
init new(_,_,_) Code:
00 (ln 4): Load(Local, 1)
01 (ln 4): Load(Local, 0)
02 (ln 4): StoreField(0)
03 (ln 4): Pop
04 (ln 5): Load(Local, 2)
05 (ln 5): Load(Local, 0)
06 (ln 5): StoreField(1)
07 (ln 5): Pop
08 (ln 6): Load(Local, 3)
09 (ln 6): Load(Local, 0)
10 (ln 6): StoreField(2)
11 (ln 6): Pop
12 (ln 7): Load(Local, 0)
13 (ln 7): Return
14 (ln 7): End
 Code:
00 (ln 7): Construct
01 (ln 7): Call(init new(_,_,_))
02 (ln 7): Return
03 (ln 7): End
write() Code:
00 (ln 10): Load(Local, 0)
01 (ln 10): LoadField(0)
02 (ln 10): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
03 (ln 10): Call(is(_))
04 (ln 10): JumpIfFalse(4)
05 (ln 11): Load(Local, 0)
06 (ln 11): LoadField(0)
07 (ln 11): Call(write())
08 (ln 11): Pop
09 (ln 14): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
10 (ln 14): Load(Local, 0)
11 (ln 14): LoadField(1)
12 (ln 14): Call(print(_))
13 (ln 14): Pop
14 (ln 16): Load(Local, 0)
15 (ln 16): LoadField(2)
16 (ln 16): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
17 (ln 16): Call(is(_))
18 (ln 16): JumpIfFalse(4)
19 (ln 17): Load(Local, 0)
20 (ln 17): LoadField(2)
21 (ln 17): Call(write())
22 (ln 17): Pop
23 (ln 19): Null
24 (ln 19): Return
25 (ln 19): End
