<script> Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
01: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
02: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
03: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
04: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
05: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
06: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
07: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
08: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
<script> Code:
00 (ln 1): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 1): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
02 (ln 1): Class(1 fields)
03 (ln 1): Store(Module)
04 (ln 1): Pop
05 (ln 2): Closure(1, [])
06 (ln 2): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
07 (ln 2): Method(instance, init new(_))
08 (ln 2): Closure(2, [])
09 (ln 2): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
10 (ln 2): Method(static, new(_))
11 (ln 3): Closure(3, [])
12 (ln 3): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
13 (ln 3): Method(instance, toString)
14 (ln 7): Closure(4, [])
15 (ln 7): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
16 (ln 7): Method(instance, bar=_)
17 (ln 10): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
18 (ln 10): Constant(5: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
19 (ln 10): Call(new(_))
20 (ln 10): Store(Module)
21 (ln 10): Pop
22 (ln 11): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
23 (ln 11): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
24 (ln 11): Call(new(_))
25 (ln 11): Store(Module)
26 (ln 11): Pop
27 (ln 12): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
28 (ln 12): Constant(7: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
29 (ln 12): Call(new(_))
30 (ln 12): Store(Module)
31 (ln 12): Pop
32 (ln 15): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
33 (ln 15): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
34 (ln 15): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
35 (ln 15): Constant(8: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
36 (ln 15): Call(bar=_)
37 (ln 15): Call(bar=_)
38 (ln 15): Call(bar=_)
39 (ln 15): Pop
40 (ln 16): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
41 (ln 16): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
42 (ln 16): Call(toString)
43 (ln 16): Call(print(_))
44 (ln 16): Pop
45 (ln 17): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
46 (ln 17): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
47 (ln 17): Call(toString)
48 (ln 17): Call(print(_))
49 (ln 17): Pop
50 (ln 18): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
51 (ln 18): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
52 (ln 18): Call(toString)
53 (ln 18): Call(print(_))
54 (ln 18): Pop
55 (ln 19): EndModule
56 (ln 19): Return
57 (ln 19): End
init new(_) Code:
00 (ln 2): Load(Local, 1)
01 (ln 2): Load(Local, 0)
02 (ln 2): StoreField(0)
03 (ln 2): Pop
04 (ln 2): Load(Local, 0)
05 (ln 2): Return
06 (ln 2): End
 Code:
00 (ln 2): Construct
01 (ln 2): Call(init new(_))
02 (ln 2): Return
03 (ln 2): End
toString Code:
00 (ln 3): Load(Local, 0)
01 (ln 3): LoadField(0)
02 (ln 3): Return
03 (ln 3): End
bar=_ Code:
00 (ln 5): Load(Local, 1)
01 (ln 5): Load(Local, 0)
02 (ln 5): StoreField(0)
03 (ln 5): Pop
04 (ln 6): Load(Local, 1)
05 (ln 6): Return
06 (ln 7): Null
07 (ln 7): Return
08 (ln 7): End
