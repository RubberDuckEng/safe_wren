<script> Constants:
00: "Foo"
01: Fn(init new())
02: Fn()
03: Fn(+(_))
04: Fn(-(_))
05: Fn(*(_))
06: Fn(/(_))
07: Fn(%(_))
08: Fn(<(_))
09: Fn(>(_))
10: Fn(<=(_))
11: Fn(>=(_))
12: Fn(==(_))
13: Fn(!=(_))
14: Fn(&(_))
15: Fn(|(_))
16: Fn(is(_))
17: Fn(!)
18: Fn(~)
19: Fn(-)
20: "a"
<script> Code:
00 (ln 1): Constant(0: "Foo")
01 (ln 1): Load(Module, Class("Object"))
02 (ln 1): Class(0 fields)
03 (ln 1): Store(Module)
04 (ln 1): Pop
05 (ln 2): Closure(1, [])
06 (ln 2): Load(Module, Null)
07 (ln 2): Method(instance, init new())
08 (ln 2): Closure(2, [])
09 (ln 2): Load(Module, Null)
10 (ln 2): Method(static, new())
11 (ln 4): Closure(3, [])
12 (ln 4): Load(Module, Null)
13 (ln 4): Method(instance, +(_))
14 (ln 5): Closure(4, [])
15 (ln 5): Load(Module, Null)
16 (ln 5): Method(instance, -(_))
17 (ln 6): Closure(5, [])
18 (ln 6): Load(Module, Null)
19 (ln 6): Method(instance, *(_))
20 (ln 7): Closure(6, [])
21 (ln 7): Load(Module, Null)
22 (ln 7): Method(instance, /(_))
23 (ln 8): Closure(7, [])
24 (ln 8): Load(Module, Null)
25 (ln 8): Method(instance, %(_))
26 (ln 9): Closure(8, [])
27 (ln 9): Load(Module, Null)
28 (ln 9): Method(instance, <(_))
29 (ln 10): Closure(9, [])
30 (ln 10): Load(Module, Null)
31 (ln 10): Method(instance, >(_))
32 (ln 11): Closure(10, [])
33 (ln 11): Load(Module, Null)
34 (ln 11): Method(instance, <=(_))
35 (ln 12): Closure(11, [])
36 (ln 12): Load(Module, Null)
37 (ln 12): Method(instance, >=(_))
38 (ln 13): Closure(12, [])
39 (ln 13): Load(Module, Null)
40 (ln 13): Method(instance, ==(_))
41 (ln 14): Closure(13, [])
42 (ln 14): Load(Module, Null)
43 (ln 14): Method(instance, !=(_))
44 (ln 15): Closure(14, [])
45 (ln 15): Load(Module, Null)
46 (ln 15): Method(instance, &(_))
47 (ln 16): Closure(15, [])
48 (ln 16): Load(Module, Null)
49 (ln 16): Method(instance, |(_))
50 (ln 17): Closure(16, [])
51 (ln 17): Load(Module, Null)
52 (ln 17): Method(instance, is(_))
53 (ln 19): Closure(17, [])
54 (ln 19): Load(Module, Null)
55 (ln 19): Method(instance, !)
56 (ln 20): Closure(18, [])
57 (ln 20): Load(Module, Null)
58 (ln 20): Method(instance, ~)
59 (ln 21): Closure(19, [])
60 (ln 21): Load(Module, Null)
61 (ln 21): Method(instance, -)
62 (ln 24): Load(Module, Null)
63 (ln 24): Call(Method, new())
64 (ln 24): Store(Module)
65 (ln 24): Pop
66 (ln 25): Load(Module, Class("System"))
67 (ln 25): Load(Module, Null)
68 (ln 25): Constant(20: "a")
69 (ln 25): Call(Method, +(_))
70 (ln 25): Call(Method, print(_))
71 (ln 25): Pop
72 (ln 26): Load(Module, Class("System"))
73 (ln 26): Load(Module, Null)
74 (ln 26): Constant(20: "a")
75 (ln 26): Call(Method, -(_))
76 (ln 26): Call(Method, print(_))
77 (ln 26): Pop
78 (ln 27): Load(Module, Class("System"))
79 (ln 27): Load(Module, Null)
80 (ln 27): Constant(20: "a")
81 (ln 27): Call(Method, *(_))
82 (ln 27): Call(Method, print(_))
83 (ln 27): Pop
84 (ln 28): Load(Module, Class("System"))
85 (ln 28): Load(Module, Null)
86 (ln 28): Constant(20: "a")
87 (ln 28): Call(Method, /(_))
88 (ln 28): Call(Method, print(_))
89 (ln 28): Pop
90 (ln 29): Load(Module, Class("System"))
91 (ln 29): Load(Module, Null)
92 (ln 29): Constant(20: "a")
93 (ln 29): Call(Method, %(_))
94 (ln 29): Call(Method, print(_))
95 (ln 29): Pop
96 (ln 30): Load(Module, Class("System"))
97 (ln 30): Load(Module, Null)
98 (ln 30): Constant(20: "a")
99 (ln 30): Call(Method, <(_))
100 (ln 30): Call(Method, print(_))
101 (ln 30): Pop
102 (ln 31): Load(Module, Class("System"))
103 (ln 31): Load(Module, Null)
104 (ln 31): Constant(20: "a")
105 (ln 31): Call(Method, >(_))
106 (ln 31): Call(Method, print(_))
107 (ln 31): Pop
108 (ln 32): Load(Module, Class("System"))
109 (ln 32): Load(Module, Null)
110 (ln 32): Constant(20: "a")
111 (ln 32): Call(Method, <=(_))
112 (ln 32): Call(Method, print(_))
113 (ln 32): Pop
114 (ln 33): Load(Module, Class("System"))
115 (ln 33): Load(Module, Null)
116 (ln 33): Constant(20: "a")
117 (ln 33): Call(Method, >=(_))
118 (ln 33): Call(Method, print(_))
119 (ln 33): Pop
120 (ln 34): Load(Module, Class("System"))
121 (ln 34): Load(Module, Null)
122 (ln 34): Constant(20: "a")
123 (ln 34): Call(Method, ==(_))
124 (ln 34): Call(Method, print(_))
125 (ln 34): Pop
126 (ln 35): Load(Module, Class("System"))
127 (ln 35): Load(Module, Null)
128 (ln 35): Constant(20: "a")
129 (ln 35): Call(Method, !=(_))
130 (ln 35): Call(Method, print(_))
131 (ln 35): Pop
132 (ln 36): Load(Module, Class("System"))
133 (ln 36): Load(Module, Null)
134 (ln 36): Constant(20: "a")
135 (ln 36): Call(Method, &(_))
136 (ln 36): Call(Method, print(_))
137 (ln 36): Pop
138 (ln 37): Load(Module, Class("System"))
139 (ln 37): Load(Module, Null)
140 (ln 37): Constant(20: "a")
141 (ln 37): Call(Method, |(_))
142 (ln 37): Call(Method, print(_))
143 (ln 37): Pop
144 (ln 38): Load(Module, Class("System"))
145 (ln 38): Load(Module, Null)
146 (ln 38): Call(Method, !)
147 (ln 38): Call(Method, print(_))
148 (ln 38): Pop
149 (ln 39): Load(Module, Class("System"))
150 (ln 39): Load(Module, Null)
151 (ln 39): Call(Method, ~)
152 (ln 39): Call(Method, print(_))
153 (ln 39): Pop
154 (ln 40): Load(Module, Class("System"))
155 (ln 40): Load(Module, Null)
156 (ln 40): Call(Method, -)
157 (ln 40): Call(Method, print(_))
158 (ln 40): Pop
159 (ln 41): Load(Module, Class("System"))
160 (ln 41): Load(Module, Null)
161 (ln 41): Constant(20: "a")
162 (ln 41): Call(Method, is(_))
163 (ln 41): Call(Method, print(_))
164 (ln 41): Pop
165 (ln 42): EndModule
166 (ln 42): Return
167 (ln 42): End
init new() Code:
00 (ln 2): Load(Local, 0)
01 (ln 2): Return
02 (ln 2): End
 Code:
00 (ln 2): Construct
01 (ln 2): Call(Method, init new())
02 (ln 2): Return
03 (ln 2): End
+(_) Constants:
00: "infix + "
01: ""
+(_) Code:
00 (ln 4): Load(Module, Class("List"))
01 (ln 4): Call(Method, new())
02 (ln 4): Constant(0: "infix + ")
03 (ln 4): Call(Method, addCore_(_))
04 (ln 4): Load(Local, 1)
05 (ln 4): Call(Method, addCore_(_))
06 (ln 4): Constant(1: "")
07 (ln 4): Call(Method, addCore_(_))
08 (ln 4): Call(Method, join())
09 (ln 4): Return
10 (ln 4): End
-(_) Constants:
00: "infix - "
01: ""
-(_) Code:
00 (ln 5): Load(Module, Class("List"))
01 (ln 5): Call(Method, new())
02 (ln 5): Constant(0: "infix - ")
03 (ln 5): Call(Method, addCore_(_))
04 (ln 5): Load(Local, 1)
05 (ln 5): Call(Method, addCore_(_))
06 (ln 5): Constant(1: "")
07 (ln 5): Call(Method, addCore_(_))
08 (ln 5): Call(Method, join())
09 (ln 5): Return
10 (ln 5): End
*(_) Constants:
00: "infix * "
01: ""
*(_) Code:
00 (ln 6): Load(Module, Class("List"))
01 (ln 6): Call(Method, new())
02 (ln 6): Constant(0: "infix * ")
03 (ln 6): Call(Method, addCore_(_))
04 (ln 6): Load(Local, 1)
05 (ln 6): Call(Method, addCore_(_))
06 (ln 6): Constant(1: "")
07 (ln 6): Call(Method, addCore_(_))
08 (ln 6): Call(Method, join())
09 (ln 6): Return
10 (ln 6): End
/(_) Constants:
00: "infix / "
01: ""
/(_) Code:
00 (ln 7): Load(Module, Class("List"))
01 (ln 7): Call(Method, new())
02 (ln 7): Constant(0: "infix / ")
03 (ln 7): Call(Method, addCore_(_))
04 (ln 7): Load(Local, 1)
05 (ln 7): Call(Method, addCore_(_))
06 (ln 7): Constant(1: "")
07 (ln 7): Call(Method, addCore_(_))
08 (ln 7): Call(Method, join())
09 (ln 7): Return
10 (ln 7): End
%(_) Constants:
00: "infix % "
01: ""
%(_) Code:
00 (ln 8): Load(Module, Class("List"))
01 (ln 8): Call(Method, new())
02 (ln 8): Constant(0: "infix % ")
03 (ln 8): Call(Method, addCore_(_))
04 (ln 8): Load(Local, 1)
05 (ln 8): Call(Method, addCore_(_))
06 (ln 8): Constant(1: "")
07 (ln 8): Call(Method, addCore_(_))
08 (ln 8): Call(Method, join())
09 (ln 8): Return
10 (ln 8): End
<(_) Constants:
00: "infix < "
01: ""
<(_) Code:
00 (ln 9): Load(Module, Class("List"))
01 (ln 9): Call(Method, new())
02 (ln 9): Constant(0: "infix < ")
03 (ln 9): Call(Method, addCore_(_))
04 (ln 9): Load(Local, 1)
05 (ln 9): Call(Method, addCore_(_))
06 (ln 9): Constant(1: "")
07 (ln 9): Call(Method, addCore_(_))
08 (ln 9): Call(Method, join())
09 (ln 9): Return
10 (ln 9): End
>(_) Constants:
00: "infix > "
01: ""
>(_) Code:
00 (ln 10): Load(Module, Class("List"))
01 (ln 10): Call(Method, new())
02 (ln 10): Constant(0: "infix > ")
03 (ln 10): Call(Method, addCore_(_))
04 (ln 10): Load(Local, 1)
05 (ln 10): Call(Method, addCore_(_))
06 (ln 10): Constant(1: "")
07 (ln 10): Call(Method, addCore_(_))
08 (ln 10): Call(Method, join())
09 (ln 10): Return
10 (ln 10): End
<=(_) Constants:
00: "infix <= "
01: ""
<=(_) Code:
00 (ln 11): Load(Module, Class("List"))
01 (ln 11): Call(Method, new())
02 (ln 11): Constant(0: "infix <= ")
03 (ln 11): Call(Method, addCore_(_))
04 (ln 11): Load(Local, 1)
05 (ln 11): Call(Method, addCore_(_))
06 (ln 11): Constant(1: "")
07 (ln 11): Call(Method, addCore_(_))
08 (ln 11): Call(Method, join())
09 (ln 11): Return
10 (ln 11): End
>=(_) Constants:
00: "infix >= "
01: ""
>=(_) Code:
00 (ln 12): Load(Module, Class("List"))
01 (ln 12): Call(Method, new())
02 (ln 12): Constant(0: "infix >= ")
03 (ln 12): Call(Method, addCore_(_))
04 (ln 12): Load(Local, 1)
05 (ln 12): Call(Method, addCore_(_))
06 (ln 12): Constant(1: "")
07 (ln 12): Call(Method, addCore_(_))
08 (ln 12): Call(Method, join())
09 (ln 12): Return
10 (ln 12): End
==(_) Constants:
00: "infix == "
01: ""
==(_) Code:
00 (ln 13): Load(Module, Class("List"))
01 (ln 13): Call(Method, new())
02 (ln 13): Constant(0: "infix == ")
03 (ln 13): Call(Method, addCore_(_))
04 (ln 13): Load(Local, 1)
05 (ln 13): Call(Method, addCore_(_))
06 (ln 13): Constant(1: "")
07 (ln 13): Call(Method, addCore_(_))
08 (ln 13): Call(Method, join())
09 (ln 13): Return
10 (ln 13): End
!=(_) Constants:
00: "infix != "
01: ""
!=(_) Code:
00 (ln 14): Load(Module, Class("List"))
01 (ln 14): Call(Method, new())
02 (ln 14): Constant(0: "infix != ")
03 (ln 14): Call(Method, addCore_(_))
04 (ln 14): Load(Local, 1)
05 (ln 14): Call(Method, addCore_(_))
06 (ln 14): Constant(1: "")
07 (ln 14): Call(Method, addCore_(_))
08 (ln 14): Call(Method, join())
09 (ln 14): Return
10 (ln 14): End
&(_) Constants:
00: "infix & "
01: ""
&(_) Code:
00 (ln 15): Load(Module, Class("List"))
01 (ln 15): Call(Method, new())
02 (ln 15): Constant(0: "infix & ")
03 (ln 15): Call(Method, addCore_(_))
04 (ln 15): Load(Local, 1)
05 (ln 15): Call(Method, addCore_(_))
06 (ln 15): Constant(1: "")
07 (ln 15): Call(Method, addCore_(_))
08 (ln 15): Call(Method, join())
09 (ln 15): Return
10 (ln 15): End
|(_) Constants:
00: "infix | "
01: ""
|(_) Code:
00 (ln 16): Load(Module, Class("List"))
01 (ln 16): Call(Method, new())
02 (ln 16): Constant(0: "infix | ")
03 (ln 16): Call(Method, addCore_(_))
04 (ln 16): Load(Local, 1)
05 (ln 16): Call(Method, addCore_(_))
06 (ln 16): Constant(1: "")
07 (ln 16): Call(Method, addCore_(_))
08 (ln 16): Call(Method, join())
09 (ln 16): Return
10 (ln 16): End
is(_) Constants:
00: "infix is "
01: ""
is(_) Code:
00 (ln 17): Load(Module, Class("List"))
01 (ln 17): Call(Method, new())
02 (ln 17): Constant(0: "infix is ")
03 (ln 17): Call(Method, addCore_(_))
04 (ln 17): Load(Local, 1)
05 (ln 17): Call(Method, addCore_(_))
06 (ln 17): Constant(1: "")
07 (ln 17): Call(Method, addCore_(_))
08 (ln 17): Call(Method, join())
09 (ln 17): Return
10 (ln 17): End
! Constants:
00: "prefix !"
! Code:
00 (ln 19): Constant(0: "prefix !")
01 (ln 19): Return
02 (ln 19): End
~ Constants:
00: "prefix ~"
~ Code:
00 (ln 20): Constant(0: "prefix ~")
01 (ln 20): Return
02 (ln 20): End
- Constants:
00: "prefix -"
- Code:
00 (ln 21): Constant(0: "prefix -")
01 (ln 21): Return
02 (ln 21): End
