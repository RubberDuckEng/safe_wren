<script> Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
01: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
02: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
03: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
04: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
05: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
06: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
07: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
08: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
09: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
10: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
11: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
12: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
13: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
14: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
15: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
16: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
17: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
18: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
19: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
20: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
21: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
22: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
23: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
24: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
25: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
26: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
27: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
28: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
29: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
30: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
31: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
32: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
33: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
34: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
35: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
36: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
<script> Code:
00 (ln 1): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 1): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
02 (ln 1): Class(0 fields)
03 (ln 1): Store(Module)
04 (ln 1): Pop
05 (ln 2): Closure(1, [])
06 (ln 2): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
07 (ln 2): Method(instance, init new())
08 (ln 2): Closure(2, [])
09 (ln 2): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
10 (ln 2): Method(static, new())
11 (ln 3): Closure(3, [])
12 (ln 3): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
13 (ln 3): Method(instance, method)
14 (ln 4): Closure(4, [])
15 (ln 4): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
16 (ln 4): Method(instance, method())
17 (ln 5): Closure(5, [])
18 (ln 5): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
19 (ln 5): Method(instance, method(_))
20 (ln 6): Closure(6, [])
21 (ln 6): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
22 (ln 6): Method(instance, method(_,_))
23 (ln 7): Closure(7, [])
24 (ln 7): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
25 (ln 7): Method(instance, method(_,_,_))
26 (ln 8): Closure(8, [])
27 (ln 8): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
28 (ln 8): Method(instance, method(_,_,_,_))
29 (ln 9): Closure(9, [])
30 (ln 9): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
31 (ln 9): Method(instance, method(_,_,_,_,_))
32 (ln 10): Closure(10, [])
33 (ln 10): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
34 (ln 10): Method(instance, method(_,_,_,_,_,_))
35 (ln 11): Closure(11, [])
36 (ln 11): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
37 (ln 11): Method(instance, method(_,_,_,_,_,_,_))
38 (ln 12): Closure(12, [])
39 (ln 12): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
40 (ln 12): Method(instance, method(_,_,_,_,_,_,_,_))
41 (ln 13): Closure(13, [])
42 (ln 13): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
43 (ln 13): Method(instance, method(_,_,_,_,_,_,_,_,_))
44 (ln 14): Closure(14, [])
45 (ln 14): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
46 (ln 14): Method(instance, method(_,_,_,_,_,_,_,_,_,_))
47 (ln 15): Closure(15, [])
48 (ln 15): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
49 (ln 15): Method(instance, method(_,_,_,_,_,_,_,_,_,_,_))
50 (ln 16): Closure(16, [])
51 (ln 16): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
52 (ln 16): Method(instance, method(_,_,_,_,_,_,_,_,_,_,_,_))
53 (ln 17): Closure(17, [])
54 (ln 17): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
55 (ln 17): Method(instance, method(_,_,_,_,_,_,_,_,_,_,_,_,_))
56 (ln 18): Closure(18, [])
57 (ln 18): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
58 (ln 18): Method(instance, method(_,_,_,_,_,_,_,_,_,_,_,_,_,_))
59 (ln 19): Closure(19, [])
60 (ln 19): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
61 (ln 19): Method(instance, method(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_))
62 (ln 20): Closure(20, [])
63 (ln 20): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
64 (ln 20): Method(instance, method(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_))
65 (ln 23): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
66 (ln 23): Call(new())
67 (ln 23): Store(Module)
68 (ln 23): Pop
69 (ln 24): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
70 (ln 24): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
71 (ln 24): Call(method)
72 (ln 24): Call(print(_))
73 (ln 24): Pop
74 (ln 25): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
75 (ln 25): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
76 (ln 25): Call(method())
77 (ln 25): Call(print(_))
78 (ln 25): Pop
79 (ln 26): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
80 (ln 26): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
81 (ln 26): Constant(21: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
82 (ln 26): Call(method(_))
83 (ln 26): Call(print(_))
84 (ln 26): Pop
85 (ln 27): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
86 (ln 27): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
87 (ln 27): Constant(21: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
88 (ln 27): Constant(22: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
89 (ln 27): Call(method(_,_))
90 (ln 27): Call(print(_))
91 (ln 27): Pop
92 (ln 28): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
93 (ln 28): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
94 (ln 28): Constant(21: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
95 (ln 28): Constant(22: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
96 (ln 28): Constant(23: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
97 (ln 28): Call(method(_,_,_))
98 (ln 28): Call(print(_))
99 (ln 28): Pop
100 (ln 29): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
101 (ln 29): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
102 (ln 29): Constant(21: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
103 (ln 29): Constant(22: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
104 (ln 29): Constant(23: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
105 (ln 29): Constant(24: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
106 (ln 29): Call(method(_,_,_,_))
107 (ln 29): Call(print(_))
108 (ln 29): Pop
109 (ln 30): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
110 (ln 30): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
111 (ln 30): Constant(21: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
112 (ln 30): Constant(22: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
113 (ln 30): Constant(23: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
114 (ln 30): Constant(24: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
115 (ln 30): Constant(25: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
116 (ln 30): Call(method(_,_,_,_,_))
117 (ln 30): Call(print(_))
118 (ln 30): Pop
119 (ln 31): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
120 (ln 31): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
121 (ln 31): Constant(21: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
122 (ln 31): Constant(22: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
123 (ln 31): Constant(23: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
124 (ln 31): Constant(24: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
125 (ln 31): Constant(25: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
126 (ln 31): Constant(26: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
127 (ln 31): Call(method(_,_,_,_,_,_))
128 (ln 31): Call(print(_))
129 (ln 31): Pop
130 (ln 32): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
131 (ln 32): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
132 (ln 32): Constant(21: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
133 (ln 32): Constant(22: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
134 (ln 32): Constant(23: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
135 (ln 32): Constant(24: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
136 (ln 32): Constant(25: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
137 (ln 32): Constant(26: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
138 (ln 32): Constant(27: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
139 (ln 32): Call(method(_,_,_,_,_,_,_))
140 (ln 32): Call(print(_))
141 (ln 32): Pop
142 (ln 33): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
143 (ln 33): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
144 (ln 33): Constant(21: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
145 (ln 33): Constant(22: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
146 (ln 33): Constant(23: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
147 (ln 33): Constant(24: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
148 (ln 33): Constant(25: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
149 (ln 33): Constant(26: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
150 (ln 33): Constant(27: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
151 (ln 33): Constant(28: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
152 (ln 33): Call(method(_,_,_,_,_,_,_,_))
153 (ln 33): Call(print(_))
154 (ln 33): Pop
155 (ln 34): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
156 (ln 34): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
157 (ln 34): Constant(21: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
158 (ln 34): Constant(22: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
159 (ln 34): Constant(23: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
160 (ln 34): Constant(24: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
161 (ln 34): Constant(25: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
162 (ln 34): Constant(26: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
163 (ln 34): Constant(27: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
164 (ln 34): Constant(28: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
165 (ln 34): Constant(29: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
166 (ln 34): Call(method(_,_,_,_,_,_,_,_,_))
167 (ln 34): Call(print(_))
168 (ln 34): Pop
169 (ln 35): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
170 (ln 35): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
171 (ln 35): Constant(21: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
172 (ln 35): Constant(22: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
173 (ln 35): Constant(23: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
174 (ln 35): Constant(24: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
175 (ln 35): Constant(25: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
176 (ln 35): Constant(26: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
177 (ln 35): Constant(27: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
178 (ln 35): Constant(28: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
179 (ln 35): Constant(29: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
180 (ln 35): Constant(30: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
181 (ln 35): Call(method(_,_,_,_,_,_,_,_,_,_))
182 (ln 35): Call(print(_))
183 (ln 35): Pop
184 (ln 36): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
185 (ln 36): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
186 (ln 36): Constant(21: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
187 (ln 36): Constant(22: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
188 (ln 36): Constant(23: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
189 (ln 36): Constant(24: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
190 (ln 36): Constant(25: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
191 (ln 36): Constant(26: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
192 (ln 36): Constant(27: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
193 (ln 36): Constant(28: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
194 (ln 36): Constant(29: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
195 (ln 36): Constant(30: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
196 (ln 36): Constant(31: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
197 (ln 36): Call(method(_,_,_,_,_,_,_,_,_,_,_))
198 (ln 36): Call(print(_))
199 (ln 36): Pop
200 (ln 37): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
201 (ln 37): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
202 (ln 37): Constant(21: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
203 (ln 37): Constant(22: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
204 (ln 37): Constant(23: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
205 (ln 37): Constant(24: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
206 (ln 37): Constant(25: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
207 (ln 37): Constant(26: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
208 (ln 37): Constant(27: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
209 (ln 37): Constant(28: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
210 (ln 37): Constant(29: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
211 (ln 37): Constant(30: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
212 (ln 37): Constant(31: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
213 (ln 37): Constant(32: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
214 (ln 37): Call(method(_,_,_,_,_,_,_,_,_,_,_,_))
215 (ln 37): Call(print(_))
216 (ln 37): Pop
217 (ln 38): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
218 (ln 38): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
219 (ln 38): Constant(21: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
220 (ln 38): Constant(22: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
221 (ln 38): Constant(23: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
222 (ln 38): Constant(24: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
223 (ln 38): Constant(25: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
224 (ln 38): Constant(26: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
225 (ln 38): Constant(27: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
226 (ln 38): Constant(28: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
227 (ln 38): Constant(29: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
228 (ln 38): Constant(30: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
229 (ln 38): Constant(31: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
230 (ln 38): Constant(32: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
231 (ln 38): Constant(33: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
232 (ln 38): Call(method(_,_,_,_,_,_,_,_,_,_,_,_,_))
233 (ln 38): Call(print(_))
234 (ln 38): Pop
235 (ln 39): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
236 (ln 39): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
237 (ln 39): Constant(21: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
238 (ln 39): Constant(22: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
239 (ln 39): Constant(23: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
240 (ln 39): Constant(24: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
241 (ln 39): Constant(25: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
242 (ln 39): Constant(26: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
243 (ln 39): Constant(27: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
244 (ln 39): Constant(28: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
245 (ln 39): Constant(29: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
246 (ln 39): Constant(30: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
247 (ln 39): Constant(31: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
248 (ln 39): Constant(32: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
249 (ln 39): Constant(33: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
250 (ln 39): Constant(34: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
251 (ln 39): Call(method(_,_,_,_,_,_,_,_,_,_,_,_,_,_))
252 (ln 39): Call(print(_))
253 (ln 39): Pop
254 (ln 40): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
255 (ln 40): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
256 (ln 40): Constant(21: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
257 (ln 40): Constant(22: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
258 (ln 40): Constant(23: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
259 (ln 40): Constant(24: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
260 (ln 40): Constant(25: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
261 (ln 40): Constant(26: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
262 (ln 40): Constant(27: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
263 (ln 40): Constant(28: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
264 (ln 40): Constant(29: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
265 (ln 40): Constant(30: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
266 (ln 40): Constant(31: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
267 (ln 40): Constant(32: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
268 (ln 40): Constant(33: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
269 (ln 40): Constant(34: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
270 (ln 40): Constant(35: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
271 (ln 40): Call(method(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_))
272 (ln 40): Call(print(_))
273 (ln 40): Pop
274 (ln 41): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
275 (ln 41): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
276 (ln 41): Constant(21: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
277 (ln 41): Constant(22: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
278 (ln 41): Constant(23: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
279 (ln 41): Constant(24: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
280 (ln 41): Constant(25: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
281 (ln 41): Constant(26: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
282 (ln 41): Constant(27: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
283 (ln 41): Constant(28: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
284 (ln 41): Constant(29: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
285 (ln 41): Constant(30: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
286 (ln 41): Constant(31: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
287 (ln 41): Constant(32: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
288 (ln 41): Constant(33: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
289 (ln 41): Constant(34: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
290 (ln 41): Constant(35: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
291 (ln 41): Constant(36: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
292 (ln 41): Call(method(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_))
293 (ln 41): Call(print(_))
294 (ln 41): Pop
295 (ln 42): EndModule
296 (ln 42): Return
297 (ln 42): End
init new() Code:
00 (ln 2): Load(Local, 0)
01 (ln 2): Return
02 (ln 2): End
 Code:
00 (ln 2): Construct
01 (ln 2): Call(init new())
02 (ln 2): Return
03 (ln 2): End
method Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
method Code:
00 (ln 3): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 3): Return
02 (ln 3): End
method() Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
method() Code:
00 (ln 4): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 4): Return
02 (ln 4): End
method(_) Code:
00 (ln 5): Load(Local, 1)
01 (ln 5): Return
02 (ln 5): End
method(_,_) Code:
00 (ln 6): Load(Local, 1)
01 (ln 6): Load(Local, 2)
02 (ln 6): Call(+(_))
03 (ln 6): Return
04 (ln 6): End
method(_,_,_) Code:
00 (ln 7): Load(Local, 1)
01 (ln 7): Load(Local, 2)
02 (ln 7): Call(+(_))
03 (ln 7): Load(Local, 3)
04 (ln 7): Call(+(_))
05 (ln 7): Return
06 (ln 7): End
method(_,_,_,_) Code:
00 (ln 8): Load(Local, 1)
01 (ln 8): Load(Local, 2)
02 (ln 8): Call(+(_))
03 (ln 8): Load(Local, 3)
04 (ln 8): Call(+(_))
05 (ln 8): Load(Local, 4)
06 (ln 8): Call(+(_))
07 (ln 8): Return
08 (ln 8): End
method(_,_,_,_,_) Code:
00 (ln 9): Load(Local, 1)
01 (ln 9): Load(Local, 2)
02 (ln 9): Call(+(_))
03 (ln 9): Load(Local, 3)
04 (ln 9): Call(+(_))
05 (ln 9): Load(Local, 4)
06 (ln 9): Call(+(_))
07 (ln 9): Load(Local, 5)
08 (ln 9): Call(+(_))
09 (ln 9): Return
10 (ln 9): End
method(_,_,_,_,_,_) Code:
00 (ln 10): Load(Local, 1)
01 (ln 10): Load(Local, 2)
02 (ln 10): Call(+(_))
03 (ln 10): Load(Local, 3)
04 (ln 10): Call(+(_))
05 (ln 10): Load(Local, 4)
06 (ln 10): Call(+(_))
07 (ln 10): Load(Local, 5)
08 (ln 10): Call(+(_))
09 (ln 10): Load(Local, 6)
10 (ln 10): Call(+(_))
11 (ln 10): Return
12 (ln 10): End
method(_,_,_,_,_,_,_) Code:
00 (ln 11): Load(Local, 1)
01 (ln 11): Load(Local, 2)
02 (ln 11): Call(+(_))
03 (ln 11): Load(Local, 3)
04 (ln 11): Call(+(_))
05 (ln 11): Load(Local, 4)
06 (ln 11): Call(+(_))
07 (ln 11): Load(Local, 5)
08 (ln 11): Call(+(_))
09 (ln 11): Load(Local, 6)
10 (ln 11): Call(+(_))
11 (ln 11): Load(Local, 7)
12 (ln 11): Call(+(_))
13 (ln 11): Return
14 (ln 11): End
method(_,_,_,_,_,_,_,_) Code:
00 (ln 12): Load(Local, 1)
01 (ln 12): Load(Local, 2)
02 (ln 12): Call(+(_))
03 (ln 12): Load(Local, 3)
04 (ln 12): Call(+(_))
05 (ln 12): Load(Local, 4)
06 (ln 12): Call(+(_))
07 (ln 12): Load(Local, 5)
08 (ln 12): Call(+(_))
09 (ln 12): Load(Local, 6)
10 (ln 12): Call(+(_))
11 (ln 12): Load(Local, 7)
12 (ln 12): Call(+(_))
13 (ln 12): Load(Local, 8)
14 (ln 12): Call(+(_))
15 (ln 12): Return
16 (ln 12): End
method(_,_,_,_,_,_,_,_,_) Code:
00 (ln 13): Load(Local, 1)
01 (ln 13): Load(Local, 2)
02 (ln 13): Call(+(_))
03 (ln 13): Load(Local, 3)
04 (ln 13): Call(+(_))
05 (ln 13): Load(Local, 4)
06 (ln 13): Call(+(_))
07 (ln 13): Load(Local, 5)
08 (ln 13): Call(+(_))
09 (ln 13): Load(Local, 6)
10 (ln 13): Call(+(_))
11 (ln 13): Load(Local, 7)
12 (ln 13): Call(+(_))
13 (ln 13): Load(Local, 8)
14 (ln 13): Call(+(_))
15 (ln 13): Load(Local, 9)
16 (ln 13): Call(+(_))
17 (ln 13): Return
18 (ln 13): End
method(_,_,_,_,_,_,_,_,_,_) Code:
00 (ln 14): Load(Local, 1)
01 (ln 14): Load(Local, 2)
02 (ln 14): Call(+(_))
03 (ln 14): Load(Local, 3)
04 (ln 14): Call(+(_))
05 (ln 14): Load(Local, 4)
06 (ln 14): Call(+(_))
07 (ln 14): Load(Local, 5)
08 (ln 14): Call(+(_))
09 (ln 14): Load(Local, 6)
10 (ln 14): Call(+(_))
11 (ln 14): Load(Local, 7)
12 (ln 14): Call(+(_))
13 (ln 14): Load(Local, 8)
14 (ln 14): Call(+(_))
15 (ln 14): Load(Local, 9)
16 (ln 14): Call(+(_))
17 (ln 14): Load(Local, 10)
18 (ln 14): Call(+(_))
19 (ln 14): Return
20 (ln 14): End
method(_,_,_,_,_,_,_,_,_,_,_) Code:
00 (ln 15): Load(Local, 1)
01 (ln 15): Load(Local, 2)
02 (ln 15): Call(+(_))
03 (ln 15): Load(Local, 3)
04 (ln 15): Call(+(_))
05 (ln 15): Load(Local, 4)
06 (ln 15): Call(+(_))
07 (ln 15): Load(Local, 5)
08 (ln 15): Call(+(_))
09 (ln 15): Load(Local, 6)
10 (ln 15): Call(+(_))
11 (ln 15): Load(Local, 7)
12 (ln 15): Call(+(_))
13 (ln 15): Load(Local, 8)
14 (ln 15): Call(+(_))
15 (ln 15): Load(Local, 9)
16 (ln 15): Call(+(_))
17 (ln 15): Load(Local, 10)
18 (ln 15): Call(+(_))
19 (ln 15): Load(Local, 11)
20 (ln 15): Call(+(_))
21 (ln 15): Return
22 (ln 15): End
method(_,_,_,_,_,_,_,_,_,_,_,_) Code:
00 (ln 16): Load(Local, 1)
01 (ln 16): Load(Local, 2)
02 (ln 16): Call(+(_))
03 (ln 16): Load(Local, 3)
04 (ln 16): Call(+(_))
05 (ln 16): Load(Local, 4)
06 (ln 16): Call(+(_))
07 (ln 16): Load(Local, 5)
08 (ln 16): Call(+(_))
09 (ln 16): Load(Local, 6)
10 (ln 16): Call(+(_))
11 (ln 16): Load(Local, 7)
12 (ln 16): Call(+(_))
13 (ln 16): Load(Local, 8)
14 (ln 16): Call(+(_))
15 (ln 16): Load(Local, 9)
16 (ln 16): Call(+(_))
17 (ln 16): Load(Local, 10)
18 (ln 16): Call(+(_))
19 (ln 16): Load(Local, 11)
20 (ln 16): Call(+(_))
21 (ln 16): Load(Local, 12)
22 (ln 16): Call(+(_))
23 (ln 16): Return
24 (ln 16): End
method(_,_,_,_,_,_,_,_,_,_,_,_,_) Code:
00 (ln 17): Load(Local, 1)
01 (ln 17): Load(Local, 2)
02 (ln 17): Call(+(_))
03 (ln 17): Load(Local, 3)
04 (ln 17): Call(+(_))
05 (ln 17): Load(Local, 4)
06 (ln 17): Call(+(_))
07 (ln 17): Load(Local, 5)
08 (ln 17): Call(+(_))
09 (ln 17): Load(Local, 6)
10 (ln 17): Call(+(_))
11 (ln 17): Load(Local, 7)
12 (ln 17): Call(+(_))
13 (ln 17): Load(Local, 8)
14 (ln 17): Call(+(_))
15 (ln 17): Load(Local, 9)
16 (ln 17): Call(+(_))
17 (ln 17): Load(Local, 10)
18 (ln 17): Call(+(_))
19 (ln 17): Load(Local, 11)
20 (ln 17): Call(+(_))
21 (ln 17): Load(Local, 12)
22 (ln 17): Call(+(_))
23 (ln 17): Load(Local, 13)
24 (ln 17): Call(+(_))
25 (ln 17): Return
26 (ln 17): End
method(_,_,_,_,_,_,_,_,_,_,_,_,_,_) Code:
00 (ln 18): Load(Local, 1)
01 (ln 18): Load(Local, 2)
02 (ln 18): Call(+(_))
03 (ln 18): Load(Local, 3)
04 (ln 18): Call(+(_))
05 (ln 18): Load(Local, 4)
06 (ln 18): Call(+(_))
07 (ln 18): Load(Local, 5)
08 (ln 18): Call(+(_))
09 (ln 18): Load(Local, 6)
10 (ln 18): Call(+(_))
11 (ln 18): Load(Local, 7)
12 (ln 18): Call(+(_))
13 (ln 18): Load(Local, 8)
14 (ln 18): Call(+(_))
15 (ln 18): Load(Local, 9)
16 (ln 18): Call(+(_))
17 (ln 18): Load(Local, 10)
18 (ln 18): Call(+(_))
19 (ln 18): Load(Local, 11)
20 (ln 18): Call(+(_))
21 (ln 18): Load(Local, 12)
22 (ln 18): Call(+(_))
23 (ln 18): Load(Local, 13)
24 (ln 18): Call(+(_))
25 (ln 18): Load(Local, 14)
26 (ln 18): Call(+(_))
27 (ln 18): Return
28 (ln 18): End
method(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_) Code:
00 (ln 19): Load(Local, 1)
01 (ln 19): Load(Local, 2)
02 (ln 19): Call(+(_))
03 (ln 19): Load(Local, 3)
04 (ln 19): Call(+(_))
05 (ln 19): Load(Local, 4)
06 (ln 19): Call(+(_))
07 (ln 19): Load(Local, 5)
08 (ln 19): Call(+(_))
09 (ln 19): Load(Local, 6)
10 (ln 19): Call(+(_))
11 (ln 19): Load(Local, 7)
12 (ln 19): Call(+(_))
13 (ln 19): Load(Local, 8)
14 (ln 19): Call(+(_))
15 (ln 19): Load(Local, 9)
16 (ln 19): Call(+(_))
17 (ln 19): Load(Local, 10)
18 (ln 19): Call(+(_))
19 (ln 19): Load(Local, 11)
20 (ln 19): Call(+(_))
21 (ln 19): Load(Local, 12)
22 (ln 19): Call(+(_))
23 (ln 19): Load(Local, 13)
24 (ln 19): Call(+(_))
25 (ln 19): Load(Local, 14)
26 (ln 19): Call(+(_))
27 (ln 19): Load(Local, 15)
28 (ln 19): Call(+(_))
29 (ln 19): Return
30 (ln 19): End
method(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_) Code:
00 (ln 20): Load(Local, 1)
01 (ln 20): Load(Local, 2)
02 (ln 20): Call(+(_))
03 (ln 20): Load(Local, 3)
04 (ln 20): Call(+(_))
05 (ln 20): Load(Local, 4)
06 (ln 20): Call(+(_))
07 (ln 20): Load(Local, 5)
08 (ln 20): Call(+(_))
09 (ln 20): Load(Local, 6)
10 (ln 20): Call(+(_))
11 (ln 20): Load(Local, 7)
12 (ln 20): Call(+(_))
13 (ln 20): Load(Local, 8)
14 (ln 20): Call(+(_))
15 (ln 20): Load(Local, 9)
16 (ln 20): Call(+(_))
17 (ln 20): Load(Local, 10)
18 (ln 20): Call(+(_))
19 (ln 20): Load(Local, 11)
20 (ln 20): Call(+(_))
21 (ln 20): Load(Local, 12)
22 (ln 20): Call(+(_))
23 (ln 20): Load(Local, 13)
24 (ln 20): Call(+(_))
25 (ln 20): Load(Local, 14)
26 (ln 20): Call(+(_))
27 (ln 20): Load(Local, 15)
28 (ln 20): Call(+(_))
29 (ln 20): Load(Local, 16)
30 (ln 20): Call(+(_))
31 (ln 20): Return
32 (ln 20): End
