<script> Constants:
00: "Foo"
01: Fn(init new())
02: Fn()
03: Fn([_])
04: Fn([_,_])
05: Fn([_,_,_])
06: Fn([_]=(_))
07: Fn([_,_]=(_))
08: Fn([_,_,_]=(_))
09: "a"
10: "b"
11: "c"
12: "value"
<script> Code:
00 (ln 1): Constant(0: "Foo")
01 (ln 1): Load(Module, Class("Object"))
02 (ln 1): Class(0 fields)
03 (ln 1): Store(Module)
04 (ln 1): Pop
05 (ln 2): Closure(1, [])
06 (ln 2): Load(Module, Null)
07 (ln 2): Method(instance, init new())
08 (ln 2): Closure(2, [])
09 (ln 2): Load(Module, Null)
10 (ln 2): Method(static, new())
11 (ln 3): Closure(3, [])
12 (ln 3): Load(Module, Null)
13 (ln 3): Method(instance, [_])
14 (ln 4): Closure(4, [])
15 (ln 4): Load(Module, Null)
16 (ln 4): Method(instance, [_,_])
17 (ln 5): Closure(5, [])
18 (ln 5): Load(Module, Null)
19 (ln 5): Method(instance, [_,_,_])
20 (ln 6): Closure(6, [])
21 (ln 6): Load(Module, Null)
22 (ln 6): Method(instance, [_]=(_))
23 (ln 7): Closure(7, [])
24 (ln 7): Load(Module, Null)
25 (ln 7): Method(instance, [_,_]=(_))
26 (ln 8): Closure(8, [])
27 (ln 8): Load(Module, Null)
28 (ln 8): Method(instance, [_,_,_]=(_))
29 (ln 11): Load(Module, Null)
30 (ln 11): Call(Method, new())
31 (ln 11): Store(Module)
32 (ln 11): Pop
33 (ln 12): Load(Module, Class("System"))
34 (ln 12): Load(Module, Null)
35 (ln 12): Constant(9: "a")
36 (ln 12): Call(Subscript, [_])
37 (ln 12): Call(Method, print(_))
38 (ln 12): Pop
39 (ln 13): Load(Module, Class("System"))
40 (ln 13): Load(Module, Null)
41 (ln 13): Constant(9: "a")
42 (ln 13): Constant(10: "b")
43 (ln 13): Call(Subscript, [_,_])
44 (ln 13): Call(Method, print(_))
45 (ln 13): Pop
46 (ln 14): Load(Module, Class("System"))
47 (ln 14): Load(Module, Null)
48 (ln 14): Constant(9: "a")
49 (ln 14): Constant(10: "b")
50 (ln 14): Constant(11: "c")
51 (ln 14): Call(Subscript, [_,_,_])
52 (ln 14): Call(Method, print(_))
53 (ln 14): Pop
54 (ln 15): Load(Module, Class("System"))
55 (ln 15): Load(Module, Null)
56 (ln 15): Constant(9: "a")
57 (ln 15): Constant(12: "value")
58 (ln 15): Call(SubscriptSetter, [_]=(_))
59 (ln 15): Call(Method, print(_))
60 (ln 15): Pop
61 (ln 16): Load(Module, Class("System"))
62 (ln 16): Load(Module, Null)
63 (ln 16): Constant(9: "a")
64 (ln 16): Constant(10: "b")
65 (ln 16): Constant(12: "value")
66 (ln 16): Call(SubscriptSetter, [_,_]=(_))
67 (ln 16): Call(Method, print(_))
68 (ln 16): Pop
69 (ln 17): Load(Module, Class("System"))
70 (ln 17): Load(Module, Null)
71 (ln 17): Constant(9: "a")
72 (ln 17): Constant(10: "b")
73 (ln 17): Constant(11: "c")
74 (ln 17): Constant(12: "value")
75 (ln 17): Call(SubscriptSetter, [_,_,_]=(_))
76 (ln 17): Call(Method, print(_))
77 (ln 17): Pop
78 (ln 18): EndModule
79 (ln 18): Return
80 (ln 18): End
init new() Code:
00 (ln 2): Load(Local, 0)
01 (ln 2): Return
02 (ln 2): End
 Code:
00 (ln 2): Construct
01 (ln 2): Call(Method, init new())
02 (ln 2): Return
03 (ln 2): End
[_] Constants:
00: "1-subscript "
01: ""
[_] Code:
00 (ln 3): Load(Module, Class("List"))
01 (ln 3): Call(Method, new())
02 (ln 3): Constant(0: "1-subscript ")
03 (ln 3): Call(Method, addCore_(_))
04 (ln 3): Load(Local, 1)
05 (ln 3): Call(Method, addCore_(_))
06 (ln 3): Constant(1: "")
07 (ln 3): Call(Method, addCore_(_))
08 (ln 3): Call(Method, join())
09 (ln 3): Return
10 (ln 3): End
[_,_] Constants:
00: "2-subscript "
01: " "
02: ""
[_,_] Code:
00 (ln 4): Load(Module, Class("List"))
01 (ln 4): Call(Method, new())
02 (ln 4): Constant(0: "2-subscript ")
03 (ln 4): Call(Method, addCore_(_))
04 (ln 4): Load(Local, 1)
05 (ln 4): Call(Method, addCore_(_))
06 (ln 4): Constant(1: " ")
07 (ln 4): Call(Method, addCore_(_))
08 (ln 4): Load(Local, 2)
09 (ln 4): Call(Method, addCore_(_))
10 (ln 4): Constant(2: "")
11 (ln 4): Call(Method, addCore_(_))
12 (ln 4): Call(Method, join())
13 (ln 4): Return
14 (ln 4): End
[_,_,_] Constants:
00: "3-subscript "
01: " "
02: ""
[_,_,_] Code:
00 (ln 5): Load(Module, Class("List"))
01 (ln 5): Call(Method, new())
02 (ln 5): Constant(0: "3-subscript ")
03 (ln 5): Call(Method, addCore_(_))
04 (ln 5): Load(Local, 1)
05 (ln 5): Call(Method, addCore_(_))
06 (ln 5): Constant(1: " ")
07 (ln 5): Call(Method, addCore_(_))
08 (ln 5): Load(Local, 2)
09 (ln 5): Call(Method, addCore_(_))
10 (ln 5): Constant(1: " ")
11 (ln 5): Call(Method, addCore_(_))
12 (ln 5): Load(Local, 3)
13 (ln 5): Call(Method, addCore_(_))
14 (ln 5): Constant(2: "")
15 (ln 5): Call(Method, addCore_(_))
16 (ln 5): Call(Method, join())
17 (ln 5): Return
18 (ln 5): End
[_]=(_) Constants:
00: "1-subscript setter "
01: " = "
02: ""
[_]=(_) Code:
00 (ln 6): Load(Module, Class("List"))
01 (ln 6): Call(Method, new())
02 (ln 6): Constant(0: "1-subscript setter ")
03 (ln 6): Call(Method, addCore_(_))
04 (ln 6): Load(Local, 1)
05 (ln 6): Call(Method, addCore_(_))
06 (ln 6): Constant(1: " = ")
07 (ln 6): Call(Method, addCore_(_))
08 (ln 6): Load(Local, 2)
09 (ln 6): Call(Method, addCore_(_))
10 (ln 6): Constant(2: "")
11 (ln 6): Call(Method, addCore_(_))
12 (ln 6): Call(Method, join())
13 (ln 6): Return
14 (ln 6): End
[_,_]=(_) Constants:
00: "2-subscript setter "
01: " "
02: " = "
03: ""
[_,_]=(_) Code:
00 (ln 7): Load(Module, Class("List"))
01 (ln 7): Call(Method, new())
02 (ln 7): Constant(0: "2-subscript setter ")
03 (ln 7): Call(Method, addCore_(_))
04 (ln 7): Load(Local, 1)
05 (ln 7): Call(Method, addCore_(_))
06 (ln 7): Constant(1: " ")
07 (ln 7): Call(Method, addCore_(_))
08 (ln 7): Load(Local, 2)
09 (ln 7): Call(Method, addCore_(_))
10 (ln 7): Constant(2: " = ")
11 (ln 7): Call(Method, addCore_(_))
12 (ln 7): Load(Local, 3)
13 (ln 7): Call(Method, addCore_(_))
14 (ln 7): Constant(3: "")
15 (ln 7): Call(Method, addCore_(_))
16 (ln 7): Call(Method, join())
17 (ln 7): Return
18 (ln 7): End
[_,_,_]=(_) Constants:
00: "3-subscript setter "
01: " "
02: " = "
03: ""
[_,_,_]=(_) Code:
00 (ln 8): Load(Module, Class("List"))
01 (ln 8): Call(Method, new())
02 (ln 8): Constant(0: "3-subscript setter ")
03 (ln 8): Call(Method, addCore_(_))
04 (ln 8): Load(Local, 1)
05 (ln 8): Call(Method, addCore_(_))
06 (ln 8): Constant(1: " ")
07 (ln 8): Call(Method, addCore_(_))
08 (ln 8): Load(Local, 2)
09 (ln 8): Call(Method, addCore_(_))
10 (ln 8): Constant(1: " ")
11 (ln 8): Call(Method, addCore_(_))
12 (ln 8): Load(Local, 3)
13 (ln 8): Call(Method, addCore_(_))
14 (ln 8): Constant(2: " = ")
15 (ln 8): Call(Method, addCore_(_))
16 (ln 8): Load(Local, 4)
17 (ln 8): Call(Method, addCore_(_))
18 (ln 8): Constant(3: "")
19 (ln 8): Call(Method, addCore_(_))
20 (ln 8): Call(Method, join())
21 (ln 8): Return
22 (ln 8): End
