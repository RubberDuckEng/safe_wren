Constants:
00: "Foo"
01: Fn(init new())
02: Fn()
03: Fn([_])
04: Fn([_,_])
05: Fn([_,_,_])
06: Fn([_]=(_))
07: Fn([_,_]=(_))
08: Fn([_,_,_]=(_))
09: "a"
10: "b"
11: "c"
12: "value"
Code:
00: Constant(0: "Foo")
01: Load(Module, Class("Object"))
02: Class(0 fields)
03: Store(Module)
04: Pop
05: Closure(1, [])
06: Load(Module, Null)
07: Method(instance, init new())
08: Closure(2, [])
09: Load(Module, Null)
10: Method(static, new())
11: Closure(3, [])
12: Load(Module, Null)
13: Method(instance, [_])
14: Closure(4, [])
15: Load(Module, Null)
16: Method(instance, [_,_])
17: Closure(5, [])
18: Load(Module, Null)
19: Method(instance, [_,_,_])
20: Closure(6, [])
21: Load(Module, Null)
22: Method(instance, [_]=(_))
23: Closure(7, [])
24: Load(Module, Null)
25: Method(instance, [_,_]=(_))
26: Closure(8, [])
27: Load(Module, Null)
28: Method(instance, [_,_,_]=(_))
29: Load(Module, Null)
30: Call(Method, new())
31: Store(Module)
32: Pop
33: Load(Module, Class("System"))
34: Load(Module, Null)
35: Constant(9: "a")
36: Call(Subscript, [_])
37: Call(Method, print(_))
38: Pop
39: Load(Module, Class("System"))
40: Load(Module, Null)
41: Constant(9: "a")
42: Constant(10: "b")
43: Call(Subscript, [_,_])
44: Call(Method, print(_))
45: Pop
46: Load(Module, Class("System"))
47: Load(Module, Null)
48: Constant(9: "a")
49: Constant(10: "b")
50: Constant(11: "c")
51: Call(Subscript, [_,_,_])
52: Call(Method, print(_))
53: Pop
54: Load(Module, Class("System"))
55: Load(Module, Null)
56: Constant(9: "a")
57: Constant(12: "value")
58: Call(SubscriptSetter, [_]=(_))
59: Call(Method, print(_))
60: Pop
61: Load(Module, Class("System"))
62: Load(Module, Null)
63: Constant(9: "a")
64: Constant(10: "b")
65: Constant(12: "value")
66: Call(SubscriptSetter, [_,_]=(_))
67: Call(Method, print(_))
68: Pop
69: Load(Module, Class("System"))
70: Load(Module, Null)
71: Constant(9: "a")
72: Constant(10: "b")
73: Constant(11: "c")
74: Constant(12: "value")
75: Call(SubscriptSetter, [_,_,_]=(_))
76: Call(Method, print(_))
77: Pop
78: EndModule
79: Return
80: End
