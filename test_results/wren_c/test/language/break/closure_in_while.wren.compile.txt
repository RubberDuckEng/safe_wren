<script> Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
01: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
<script> Code:
00 (ln 1): Null
01 (ln 1): Store(Module)
02 (ln 1): Pop
03 (ln 2): Boolean true
04 (ln 2): JumpIfFalse(10)
05 (ln 3): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
06 (ln 4): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
07 (ln 4): Closure(1, [Upvalue { is_local_in_parent: true, index: 1 }])
08 (ln 4): Call(new(_))
09 (ln 4): Store(Module)
10 (ln 4): Pop
11 (ln 5): CloseUpvalues
12 (ln 5): Jump(2)
13 (ln 6): CloseUpvalues
14 (ln 6): Loop(12)
15 (ln 8): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
16 (ln 8): Call(call())
17 (ln 8): Pop
18 (ln 10): EndModule
19 (ln 10): Return
20 (ln 10): End
new(_) block argument Code:
00 (ln 4): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 4): Load(Upvalue, 0)
02 (ln 4): Call(print(_))
03 (ln 4): Return
04 (ln 4): End
