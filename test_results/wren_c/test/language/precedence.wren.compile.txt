Function { constants: [Num(2), Num(3), Num(4), Num(20), Num(3), Num(4), Num(2), Num(6), Num(3), Num(2), Num(6), Num(3), Num(2), Num(1), Num(1), Num(2), Num(2), Num(1), Num(1), Num(2), Num(10), Num(10), String("abc"), Num(1), Num(1), Num(1), Num(1), Num(1), Num(1), Num(1), Num(1), Num(2), Num(6), Num(2), Num(2)], code: [Load(Variable { scope: Module, index: 9 }), Constant(0), Constant(1), Constant(2), Call(Signature { bare_name: "*", call_type: Method, arity: 1 }, 9), Call(Signature { bare_name: "+", call_type: Method, arity: 1 }, 6), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(3), Constant(4), Constant(5), Call(Signature { bare_name: "*", call_type: Method, arity: 1 }, 9), Call(Signature { bare_name: "-", call_type: Method, arity: 1 }, 7), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(6), Constant(7), Constant(8), Call(Signature { bare_name: "/", call_type: Method, arity: 1 }, 10), Call(Signature { bare_name: "+", call_type: Method, arity: 1 }, 6), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(9), Constant(10), Constant(11), Call(Signature { bare_name: "/", call_type: Method, arity: 1 }, 10), Call(Signature { bare_name: "-", call_type: Method, arity: 1 }, 7), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Boolean(false), Constant(12), Constant(13), Call(Signature { bare_name: "<", call_type: Method, arity: 1 }, 11), Call(Signature { bare_name: "==", call_type: Method, arity: 1 }, 1), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Boolean(false), Constant(14), Constant(15), Call(Signature { bare_name: ">", call_type: Method, arity: 1 }, 13), Call(Signature { bare_name: "==", call_type: Method, arity: 1 }, 1), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Boolean(false), Constant(16), Constant(17), Call(Signature { bare_name: "<=", call_type: Method, arity: 1 }, 12), Call(Signature { bare_name: "==", call_type: Method, arity: 1 }, 1), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Boolean(false), Constant(18), Constant(19), Call(Signature { bare_name: ">=", call_type: Method, arity: 1 }, 14), Call(Signature { bare_name: "==", call_type: Method, arity: 1 }, 1), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Boolean(true), Constant(20), Load(Variable { scope: Module, index: 6 }), Call(Signature { bare_name: "is", call_type: Method, arity: 1 }, 3), Call(Signature { bare_name: "==", call_type: Method, arity: 1 }, 1), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(21), Load(Variable { scope: Module, index: 6 }), Call(Signature { bare_name: "is", call_type: Method, arity: 1 }, 3), Boolean(false), Call(Signature { bare_name: "==", call_type: Method, arity: 1 }, 1), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(22), Call(Signature { bare_name: "count", call_type: Getter, arity: 0 }, 43), Call(Signature { bare_name: "-", call_type: Method, arity: 0 }, 8), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(23), Constant(24), Call(Signature { bare_name: "-", call_type: Method, arity: 1 }, 7), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(25), Constant(26), Call(Signature { bare_name: "-", call_type: Method, arity: 1 }, 7), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(27), Constant(28), Call(Signature { bare_name: "-", call_type: Method, arity: 1 }, 7), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(29), Constant(30), Call(Signature { bare_name: "-", call_type: Method, arity: 1 }, 7), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(31), Constant(32), Constant(33), Constant(34), Call(Signature { bare_name: "+", call_type: Method, arity: 1 }, 6), Call(Signature { bare_name: "-", call_type: Method, arity: 1 }, 7), Call(Signature { bare_name: "*", call_type: Method, arity: 1 }, 9), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, End, End] }
00: Load(Module 9: Class("System"))
01: Constant(0: Num(2))
02: Constant(1: Num(3))
03: Constant(2: Num(4))
04: Call(Method: *(_) 9)
05: Call(Method: +(_) 6)
06: Call(Method: print(_) 42)
07: Pop
08: Load(Module 9: Class("System"))
09: Constant(3: Num(20))
10: Constant(4: Num(3))
11: Constant(5: Num(4))
12: Call(Method: *(_) 9)
13: Call(Method: -(_) 7)
14: Call(Method: print(_) 42)
15: Pop
16: Load(Module 9: Class("System"))
17: Constant(6: Num(2))
18: Constant(7: Num(6))
19: Constant(8: Num(3))
20: Call(Method: /(_) 10)
21: Call(Method: +(_) 6)
22: Call(Method: print(_) 42)
23: Pop
24: Load(Module 9: Class("System"))
25: Constant(9: Num(2))
26: Constant(10: Num(6))
27: Constant(11: Num(3))
28: Call(Method: /(_) 10)
29: Call(Method: -(_) 7)
30: Call(Method: print(_) 42)
31: Pop
32: Load(Module 9: Class("System"))
33: Boolean false
34: Constant(12: Num(2))
35: Constant(13: Num(1))
36: Call(Method: <(_) 11)
37: Call(Method: ==(_) 1)
38: Call(Method: print(_) 42)
39: Pop
40: Load(Module 9: Class("System"))
41: Boolean false
42: Constant(14: Num(1))
43: Constant(15: Num(2))
44: Call(Method: >(_) 13)
45: Call(Method: ==(_) 1)
46: Call(Method: print(_) 42)
47: Pop
48: Load(Module 9: Class("System"))
49: Boolean false
50: Constant(16: Num(2))
51: Constant(17: Num(1))
52: Call(Method: <=(_) 12)
53: Call(Method: ==(_) 1)
54: Call(Method: print(_) 42)
55: Pop
56: Load(Module 9: Class("System"))
57: Boolean false
58: Constant(18: Num(1))
59: Constant(19: Num(2))
60: Call(Method: >=(_) 14)
61: Call(Method: ==(_) 1)
62: Call(Method: print(_) 42)
63: Pop
64: Load(Module 9: Class("System"))
65: Boolean true
66: Constant(20: Num(10))
67: Load(Module 6: Class("Num"))
68: Call(Method: is(_) 3)
69: Call(Method: ==(_) 1)
70: Call(Method: print(_) 42)
71: Pop
72: Load(Module 9: Class("System"))
73: Constant(21: Num(10))
74: Load(Module 6: Class("Num"))
75: Call(Method: is(_) 3)
76: Boolean false
77: Call(Method: ==(_) 1)
78: Call(Method: print(_) 42)
79: Pop
80: Load(Module 9: Class("System"))
81: Constant(22: String("abc"))
82: Call(Getter: count 43)
83: Call(Method: - 8)
84: Call(Method: print(_) 42)
85: Pop
86: Load(Module 9: Class("System"))
87: Constant(23: Num(1))
88: Constant(24: Num(1))
89: Call(Method: -(_) 7)
90: Call(Method: print(_) 42)
91: Pop
92: Load(Module 9: Class("System"))
93: Constant(25: Num(1))
94: Constant(26: Num(1))
95: Call(Method: -(_) 7)
96: Call(Method: print(_) 42)
97: Pop
98: Load(Module 9: Class("System"))
99: Constant(27: Num(1))
100: Constant(28: Num(1))
101: Call(Method: -(_) 7)
102: Call(Method: print(_) 42)
103: Pop
104: Load(Module 9: Class("System"))
105: Constant(29: Num(1))
106: Constant(30: Num(1))
107: Call(Method: -(_) 7)
108: Call(Method: print(_) 42)
109: Pop
110: Load(Module 9: Class("System"))
111: Constant(31: Num(2))
112: Constant(32: Num(6))
113: Constant(33: Num(2))
114: Constant(34: Num(2))
115: Call(Method: +(_) 6)
116: Call(Method: -(_) 7)
117: Call(Method: *(_) 9)
118: Call(Method: print(_) 42)
119: Pop
120: End
121: End
