<script> Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
01: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
02: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
03: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
04: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
05: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
06: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
07: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
<script> Code:
00 (ln 1): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 1): Store(Module)
02 (ln 1): Pop
03 (ln 3): Constant(1: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
04 (ln 3): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
05 (ln 3): Class(0 fields)
06 (ln 3): Store(Module)
07 (ln 3): Pop
08 (ln 4): Closure(2, [])
09 (ln 4): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
10 (ln 4): Method(instance, init new())
11 (ln 4): Closure(3, [])
12 (ln 4): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
13 (ln 4): Method(static, new())
14 (ln 6): Closure(4, [])
15 (ln 6): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
16 (ln 6): Method(instance, foo)
17 (ln 10): Closure(5, [])
18 (ln 10): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
19 (ln 10): Method(instance, method)
20 (ln 12): Closure(6, [])
21 (ln 12): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
22 (ln 12): Method(static, foo)
23 (ln 16): Closure(7, [])
24 (ln 16): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
25 (ln 16): Method(static, classMethod)
26 (ln 19): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
27 (ln 19): Call(new())
28 (ln 19): Call(method)
29 (ln 19): Pop
30 (ln 20): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
31 (ln 20): Call(classMethod)
32 (ln 20): Pop
33 (ln 21): EndModule
34 (ln 21): Return
35 (ln 21): End
init new() Code:
00 (ln 4): Load(Local, 0)
01 (ln 4): Return
02 (ln 4): End
 Code:
00 (ln 4): Construct
01 (ln 4): Call(init new())
02 (ln 4): Return
03 (ln 4): End
foo Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
foo Code:
00 (ln 6): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 6): Return
02 (ln 6): End
method Code:
00 (ln 9): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 9): Load(Local, 0)
02 (ln 9): Call(foo)
03 (ln 9): Call(print(_))
04 (ln 9): Pop
05 (ln 10): Null
06 (ln 10): Return
07 (ln 10): End
foo Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
foo Code:
00 (ln 12): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 12): Return
02 (ln 12): End
classMethod Code:
00 (ln 15): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 15): Load(Local, 0)
02 (ln 15): Call(foo)
03 (ln 15): Call(print(_))
04 (ln 15): Pop
05 (ln 16): Null
06 (ln 16): Return
07 (ln 16): End
