<script> Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
<script> Code:
00 (ln 1): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 4): Closure(0, [])
02 (ln 4): Call(new(_))
03 (ln 4): Store(Module)
04 (ln 4): Pop
05 (ln 6): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
06 (ln 6): Call(call())
07 (ln 6): Null
08 (ln 6): Load(Local, 1)
09 (ln 6): Load(Local, 2)
10 (ln 6): Call(iterate(_))
11 (ln 6): Store(Local, 2)
12 (ln 6): JumpIfFalse(9)
13 (ln 6): Load(Local, 1)
14 (ln 6): Load(Local, 2)
15 (ln 6): Call(iteratorValue(_))
16 (ln 6): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
17 (ln 6): Load(Local, 3)
18 (ln 6): Call(print(_))
19 (ln 6): Pop
20 (ln 6): Pop
21 (ln 6): Loop(14)
22 (ln 6): Pop
23 (ln 6): Pop
24 (ln 11): EndModule
25 (ln 11): Return
26 (ln 11): End
new(_) block argument Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
01: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
02: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
03: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
new(_) block argument Code:
00 (ln 2): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 2): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
02 (ln 2): Call(print(_))
03 (ln 2): Pop
04 (ln 3): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
05 (ln 3): Call(new())
06 (ln 3): Constant(1: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
07 (ln 3): Call(addCore_(_))
08 (ln 3): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
09 (ln 3): Call(addCore_(_))
10 (ln 3): Constant(3: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
11 (ln 3): Call(addCore_(_))
12 (ln 3): Return
13 (ln 4): Null
14 (ln 4): Return
15 (ln 4): End
