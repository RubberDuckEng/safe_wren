<script> Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
01: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
02: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
03: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
<script> Code:
00 (ln 1): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 1): Call(new())
02 (ln 1): Store(Module)
03 (ln 1): Pop
04 (ln 3): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
05 (ln 3): Call(new())
06 (ln 3): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
07 (ln 3): Call(addCore_(_))
08 (ln 3): Constant(1: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
09 (ln 3): Call(addCore_(_))
10 (ln 3): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
11 (ln 3): Call(addCore_(_))
12 (ln 3): Null
13 (ln 3): Load(Local, 1)
14 (ln 3): Load(Local, 2)
15 (ln 3): Call(iterate(_))
16 (ln 3): Store(Local, 2)
17 (ln 3): JumpIfFalse(15)
18 (ln 3): Load(Local, 1)
19 (ln 3): Load(Local, 2)
20 (ln 3): Call(iteratorValue(_))
21 (ln 4): Load(Local, 3)
22 (ln 4): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
23 (ln 4): Call(+(_))
24 (ln 5): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
25 (ln 5): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
26 (ln 5): Closure(3, [Upvalue { is_local_in_parent: true, index: 4 }])
27 (ln 5): Call(new(_))
28 (ln 5): Call(add(_))
29 (ln 5): Pop
30 (ln 6): CloseUpvalues
31 (ln 6): Pop
32 (ln 6): Loop(20)
33 (ln 6): Pop
34 (ln 6): Pop
35 (ln 8): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
36 (ln 8): Null
37 (ln 8): Load(Local, 1)
38 (ln 8): Load(Local, 2)
39 (ln 8): Call(iterate(_))
40 (ln 8): Store(Local, 2)
41 (ln 8): JumpIfFalse(8)
42 (ln 8): Load(Local, 1)
43 (ln 8): Load(Local, 2)
44 (ln 8): Call(iteratorValue(_))
45 (ln 8): Load(Local, 3)
46 (ln 8): Call(call())
47 (ln 8): Pop
48 (ln 8): Pop
49 (ln 8): Loop(13)
50 (ln 8): Pop
51 (ln 8): Pop
52 (ln 12): EndModule
53 (ln 12): Return
54 (ln 12): End
new(_) block argument Code:
00 (ln 5): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 5): Load(Upvalue, 0)
02 (ln 5): Call(print(_))
03 (ln 5): Return
04 (ln 5): End
