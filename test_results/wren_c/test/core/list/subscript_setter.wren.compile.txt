<script> Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
01: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
02: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
03: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
04: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
05: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
06: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
<script> Code:
00 (ln 3): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 3): Call(new())
02 (ln 3): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
03 (ln 3): Call(addCore_(_))
04 (ln 3): Constant(1: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
05 (ln 3): Call(addCore_(_))
06 (ln 3): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
07 (ln 3): Call(addCore_(_))
08 (ln 4): Load(Local, 1)
09 (ln 4): Constant(3: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
10 (ln 4): Constant(4: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
11 (ln 4): Call([_]=(_))
12 (ln 4): Pop
13 (ln 5): Load(Local, 1)
14 (ln 5): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
15 (ln 5): Constant(5: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
16 (ln 5): Call([_]=(_))
17 (ln 5): Pop
18 (ln 6): Load(Local, 1)
19 (ln 6): Constant(1: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
20 (ln 6): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
21 (ln 6): Call([_]=(_))
22 (ln 6): Pop
23 (ln 7): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
24 (ln 7): Load(Local, 1)
25 (ln 7): Call(print(_))
26 (ln 7): Pop
27 (ln 8): Pop
28 (ln 12): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
29 (ln 12): Call(new())
30 (ln 12): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
31 (ln 12): Call(addCore_(_))
32 (ln 12): Constant(1: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
33 (ln 12): Call(addCore_(_))
34 (ln 12): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
35 (ln 12): Call(addCore_(_))
36 (ln 13): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
37 (ln 13): Load(Local, 1)
38 (ln 13): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
39 (ln 13): Constant(4: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
40 (ln 13): Call([_]=(_))
41 (ln 13): Call(print(_))
42 (ln 13): Pop
43 (ln 14): Pop
44 (ln 18): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
45 (ln 18): Call(new())
46 (ln 18): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
47 (ln 18): Call(addCore_(_))
48 (ln 18): Constant(1: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
49 (ln 18): Call(addCore_(_))
50 (ln 18): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
51 (ln 18): Call(addCore_(_))
52 (ln 19): Load(Local, 1)
53 (ln 19): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
54 (ln 19): Call(-)
55 (ln 19): Constant(4: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
56 (ln 19): Call([_]=(_))
57 (ln 19): Pop
58 (ln 20): Load(Local, 1)
59 (ln 20): Constant(1: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
60 (ln 20): Call(-)
61 (ln 20): Constant(5: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
62 (ln 20): Call([_]=(_))
63 (ln 20): Pop
64 (ln 21): Load(Local, 1)
65 (ln 21): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
66 (ln 21): Call(-)
67 (ln 21): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
68 (ln 21): Call([_]=(_))
69 (ln 21): Pop
70 (ln 22): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
71 (ln 22): Load(Local, 1)
72 (ln 22): Call(print(_))
73 (ln 22): Pop
74 (ln 23): Pop
75 (ln 24): EndModule
76 (ln 24): Return
77 (ln 24): End
