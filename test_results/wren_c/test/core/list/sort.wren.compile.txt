<script> Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
01: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
02: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
03: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
04: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
05: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
06: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
07: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
08: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
09: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
10: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
<script> Code:
00 (ln 1): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 1): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
02 (ln 1): Call(new())
03 (ln 1): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
04 (ln 1): Call(addCore_(_))
05 (ln 1): Constant(1: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
06 (ln 1): Call(addCore_(_))
07 (ln 1): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
08 (ln 1): Call(addCore_(_))
09 (ln 1): Constant(3: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
10 (ln 1): Call(addCore_(_))
11 (ln 1): Call(sort())
12 (ln 1): Call(print(_))
13 (ln 1): Pop
14 (ln 3): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
15 (ln 3): Call(new())
16 (ln 3): Constant(4: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
17 (ln 3): Call(addCore_(_))
18 (ln 3): Constant(5: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
19 (ln 3): Call(addCore_(_))
20 (ln 3): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
21 (ln 3): Call(addCore_(_))
22 (ln 3): Constant(7: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
23 (ln 3): Call(addCore_(_))
24 (ln 3): Constant(1: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
25 (ln 3): Call(addCore_(_))
26 (ln 3): Constant(8: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
27 (ln 3): Call(addCore_(_))
28 (ln 3): Store(Module)
29 (ln 3): Pop
30 (ln 4): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
31 (ln 4): Closure(9, [])
32 (ln 4): Call(sort(_))
33 (ln 4): Pop
34 (ln 5): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
35 (ln 5): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
36 (ln 5): Call(print(_))
37 (ln 5): Pop
38 (ln 6): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
39 (ln 6): Closure(10, [])
40 (ln 6): Call(sort(_))
41 (ln 6): Pop
42 (ln 7): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
43 (ln 7): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
44 (ln 7): Call(print(_))
45 (ln 7): Pop
46 (ln 9): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
47 (ln 9): Call(new())
48 (ln 9): Constant(4: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
49 (ln 9): Call(addCore_(_))
50 (ln 9): Constant(5: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
51 (ln 9): Call(addCore_(_))
52 (ln 9): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
53 (ln 9): Call(addCore_(_))
54 (ln 9): Constant(7: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
55 (ln 9): Call(addCore_(_))
56 (ln 9): Constant(1: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
57 (ln 9): Call(addCore_(_))
58 (ln 9): Constant(8: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
59 (ln 9): Call(addCore_(_))
60 (ln 9): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
61 (ln 9): Call(sort(_))
62 (ln 9): Pop
63 (ln 9): EndModule
64 (ln 9): Return
65 (ln 9): End
sort(_) block argument Code:
00 (ln 4): Load(Local, 1)
01 (ln 4): Load(Local, 2)
02 (ln 4): Call(<(_))
03 (ln 4): Return
04 (ln 4): End
sort(_) block argument Code:
00 (ln 6): Load(Local, 1)
01 (ln 6): Load(Local, 2)
02 (ln 6): Call(>(_))
03 (ln 6): Return
04 (ln 6): End
