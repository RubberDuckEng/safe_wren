Constants:
00: ""
01: "foo"
02: " \t\r\nfoo b\tar \t\r\n"
03: "foo b\tar \t\r\n"
04: " \t\r\n \t\r\n"
05: " \n\n\tsøméஃthîng"
06: "søméஃthîng"
07: "abc"
08: "cbacbfoobarab"
09: "foobarab"
10: "abcbacba"
11: "ஃmésø"
12: "thîng"
13: " \t\ra\0b"
14: "a\0b"
15: "\0a\0b\0c\0"
16: "a\0"
17: "b\0c\0"
Code:
00 (ln 1): Load(Module, Class("System"))
01 (ln 1): Constant(0: "")
02 (ln 1): Call(Method, trimStart())
03 (ln 1): Constant(0: "")
04 (ln 1): Call(Method, ==(_))
05 (ln 1): Call(Method, print(_))
06 (ln 1): Pop
07 (ln 2): Load(Module, Class("System"))
08 (ln 2): Constant(1: "foo")
09 (ln 2): Call(Method, trimStart())
10 (ln 2): Constant(1: "foo")
11 (ln 2): Call(Method, ==(_))
12 (ln 2): Call(Method, print(_))
13 (ln 2): Pop
14 (ln 3): Load(Module, Class("System"))
15 (ln 3): Constant(2: " \t\r\nfoo b\tar \t\r\n")
16 (ln 3): Call(Method, trimStart())
17 (ln 3): Constant(3: "foo b\tar \t\r\n")
18 (ln 3): Call(Method, ==(_))
19 (ln 3): Call(Method, print(_))
20 (ln 3): Pop
21 (ln 4): Load(Module, Class("System"))
22 (ln 4): Constant(4: " \t\r\n \t\r\n")
23 (ln 4): Call(Method, trimStart())
24 (ln 4): Constant(0: "")
25 (ln 4): Call(Method, ==(_))
26 (ln 4): Call(Method, print(_))
27 (ln 4): Pop
28 (ln 5): Load(Module, Class("System"))
29 (ln 5): Constant(5: " \n\n\tsøméஃthîng")
30 (ln 5): Call(Method, trimStart())
31 (ln 5): Constant(6: "søméஃthîng")
32 (ln 5): Call(Method, ==(_))
33 (ln 5): Call(Method, print(_))
34 (ln 5): Pop
35 (ln 7): Load(Module, Class("System"))
36 (ln 7): Constant(0: "")
37 (ln 7): Constant(7: "abc")
38 (ln 7): Call(Method, trimStart(_))
39 (ln 7): Constant(0: "")
40 (ln 7): Call(Method, ==(_))
41 (ln 7): Call(Method, print(_))
42 (ln 7): Pop
43 (ln 8): Load(Module, Class("System"))
44 (ln 8): Constant(1: "foo")
45 (ln 8): Constant(7: "abc")
46 (ln 8): Call(Method, trimStart(_))
47 (ln 8): Constant(1: "foo")
48 (ln 8): Call(Method, ==(_))
49 (ln 8): Call(Method, print(_))
50 (ln 8): Pop
51 (ln 9): Load(Module, Class("System"))
52 (ln 9): Constant(1: "foo")
53 (ln 9): Constant(0: "")
54 (ln 9): Call(Method, trimStart(_))
55 (ln 9): Constant(1: "foo")
56 (ln 9): Call(Method, ==(_))
57 (ln 9): Call(Method, print(_))
58 (ln 9): Pop
59 (ln 10): Load(Module, Class("System"))
60 (ln 10): Constant(8: "cbacbfoobarab")
61 (ln 10): Constant(7: "abc")
62 (ln 10): Call(Method, trimStart(_))
63 (ln 10): Constant(9: "foobarab")
64 (ln 10): Call(Method, ==(_))
65 (ln 10): Call(Method, print(_))
66 (ln 10): Pop
67 (ln 11): Load(Module, Class("System"))
68 (ln 11): Constant(10: "abcbacba")
69 (ln 11): Constant(7: "abc")
70 (ln 11): Call(Method, trimStart(_))
71 (ln 11): Constant(0: "")
72 (ln 11): Call(Method, ==(_))
73 (ln 11): Call(Method, print(_))
74 (ln 11): Pop
75 (ln 12): Load(Module, Class("System"))
76 (ln 12): Constant(6: "søméஃthîng")
77 (ln 12): Constant(11: "ஃmésø")
78 (ln 12): Call(Method, trimStart(_))
79 (ln 12): Constant(12: "thîng")
80 (ln 12): Call(Method, ==(_))
81 (ln 12): Call(Method, print(_))
82 (ln 12): Pop
83 (ln 15): Load(Module, Class("System"))
84 (ln 15): Constant(13: " \t\ra\0b")
85 (ln 15): Call(Method, trimStart())
86 (ln 15): Constant(14: "a\0b")
87 (ln 15): Call(Method, ==(_))
88 (ln 15): Call(Method, print(_))
89 (ln 15): Pop
90 (ln 16): Load(Module, Class("System"))
91 (ln 16): Constant(15: "\0a\0b\0c\0")
92 (ln 16): Constant(16: "a\0")
93 (ln 16): Call(Method, trimStart(_))
94 (ln 16): Constant(17: "b\0c\0")
95 (ln 16): Call(Method, ==(_))
96 (ln 16): Call(Method, print(_))
97 (ln 16): Pop
98 (ln 17): EndModule
99 (ln 17): Return
100 (ln 17): End
