<script> Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
01: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
02: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
03: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
04: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
05: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
06: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
07: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
08: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
09: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
10: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
11: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
12: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
13: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
14: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
15: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
16: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
17: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
18: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
19: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
20: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
21: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
22: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
<script> Code:
00 (ln 1): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 1): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
02 (ln 1): Constant(1: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
03 (ln 1): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
04 (ln 1): Call(replace(_,_))
05 (ln 1): Call(print(_))
06 (ln 1): Pop
07 (ln 2): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
08 (ln 2): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
09 (ln 2): Constant(3: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
10 (ln 2): Constant(4: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
11 (ln 2): Call(replace(_,_))
12 (ln 2): Call(print(_))
13 (ln 2): Pop
14 (ln 3): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
15 (ln 3): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
16 (ln 3): Constant(5: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
17 (ln 3): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
18 (ln 3): Call(replace(_,_))
19 (ln 3): Call(print(_))
20 (ln 3): Pop
21 (ln 4): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
22 (ln 4): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
23 (ln 4): Constant(7: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
24 (ln 4): Constant(8: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
25 (ln 4): Call(replace(_,_))
26 (ln 4): Call(print(_))
27 (ln 4): Pop
28 (ln 7): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
29 (ln 7): Constant(9: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
30 (ln 7): Constant(1: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
31 (ln 7): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
32 (ln 7): Call(replace(_,_))
33 (ln 7): Call(print(_))
34 (ln 7): Pop
35 (ln 8): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
36 (ln 8): Constant(10: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
37 (ln 8): Constant(11: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
38 (ln 8): Constant(12: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
39 (ln 8): Call(replace(_,_))
40 (ln 8): Call(print(_))
41 (ln 8): Pop
42 (ln 9): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
43 (ln 9): Constant(13: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
44 (ln 9): Constant(14: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
45 (ln 9): Constant(12: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
46 (ln 9): Call(replace(_,_))
47 (ln 9): Call(print(_))
48 (ln 9): Pop
49 (ln 12): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
50 (ln 12): Constant(15: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
51 (ln 12): Constant(16: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
52 (ln 12): Constant(17: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
53 (ln 12): Call(replace(_,_))
54 (ln 12): Call(print(_))
55 (ln 12): Pop
56 (ln 13): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
57 (ln 13): Constant(15: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
58 (ln 13): Constant(18: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
59 (ln 13): Constant(8: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
60 (ln 13): Call(replace(_,_))
61 (ln 13): Call(print(_))
62 (ln 13): Pop
63 (ln 16): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
64 (ln 16): Constant(19: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
65 (ln 16): Constant(20: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
66 (ln 16): Constant(12: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
67 (ln 16): Call(replace(_,_))
68 (ln 16): Call(print(_))
69 (ln 16): Pop
70 (ln 17): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
71 (ln 17): Constant(19: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
72 (ln 17): Constant(21: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
73 (ln 17): Constant(12: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
74 (ln 17): Call(replace(_,_))
75 (ln 17): Constant(22: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
76 (ln 17): Call(==(_))
77 (ln 17): Call(print(_))
78 (ln 17): Pop
79 (ln 18): EndModule
80 (ln 18): Return
81 (ln 18): End
