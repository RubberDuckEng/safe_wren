Function { constants: [String("something"), String("some"), String("no"), String("something"), String("thing"), String("one"), String("something"), String("ometh"), String("umm"), String("something"), String("math"), String("ton"), String("somethingsomething"), String("some"), String("no"), String("abc abc abc"), String(" "), String(""), String("abcabcabc"), String("abc"), String(""), String("søméthîng"), String("sømé"), String("nø"), String("søméthîng"), String("meth"), String("ton"), String("a\0b\0c"), String("\0"), String(""), String("a\0b\0c"), String("b"), String(""), String("a\0\0c")], code: [Load(Variable { scope: Module, index: 9 }), Constant(0), Constant(1), Constant(2), Call(Signature { bare_name: "replace", call_type: Method, arity: 2 }, 43), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(3), Constant(4), Constant(5), Call(Signature { bare_name: "replace", call_type: Method, arity: 2 }, 43), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(6), Constant(7), Constant(8), Call(Signature { bare_name: "replace", call_type: Method, arity: 2 }, 43), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(9), Constant(10), Constant(11), Call(Signature { bare_name: "replace", call_type: Method, arity: 2 }, 43), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(12), Constant(13), Constant(14), Call(Signature { bare_name: "replace", call_type: Method, arity: 2 }, 43), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(15), Constant(16), Constant(17), Call(Signature { bare_name: "replace", call_type: Method, arity: 2 }, 43), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(18), Constant(19), Constant(20), Call(Signature { bare_name: "replace", call_type: Method, arity: 2 }, 43), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(21), Constant(22), Constant(23), Call(Signature { bare_name: "replace", call_type: Method, arity: 2 }, 43), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(24), Constant(25), Constant(26), Call(Signature { bare_name: "replace", call_type: Method, arity: 2 }, 43), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(27), Constant(28), Constant(29), Call(Signature { bare_name: "replace", call_type: Method, arity: 2 }, 43), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(30), Constant(31), Constant(32), Call(Signature { bare_name: "replace", call_type: Method, arity: 2 }, 43), Constant(33), Call(Signature { bare_name: "==", call_type: Method, arity: 1 }, 1), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, End, End] }
00: Load(Module 9: Class("System"))
01: Constant(0: String("something"))
02: Constant(1: String("some"))
03: Constant(2: String("no"))
04: Call(Method: replace(_,_) 43)
05: Call(Method: print(_) 42)
06: Pop
07: Load(Module 9: Class("System"))
08: Constant(3: String("something"))
09: Constant(4: String("thing"))
10: Constant(5: String("one"))
11: Call(Method: replace(_,_) 43)
12: Call(Method: print(_) 42)
13: Pop
14: Load(Module 9: Class("System"))
15: Constant(6: String("something"))
16: Constant(7: String("ometh"))
17: Constant(8: String("umm"))
18: Call(Method: replace(_,_) 43)
19: Call(Method: print(_) 42)
20: Pop
21: Load(Module 9: Class("System"))
22: Constant(9: String("something"))
23: Constant(10: String("math"))
24: Constant(11: String("ton"))
25: Call(Method: replace(_,_) 43)
26: Call(Method: print(_) 42)
27: Pop
28: Load(Module 9: Class("System"))
29: Constant(12: String("somethingsomething"))
30: Constant(13: String("some"))
31: Constant(14: String("no"))
32: Call(Method: replace(_,_) 43)
33: Call(Method: print(_) 42)
34: Pop
35: Load(Module 9: Class("System"))
36: Constant(15: String("abc abc abc"))
37: Constant(16: String(" "))
38: Constant(17: String(""))
39: Call(Method: replace(_,_) 43)
40: Call(Method: print(_) 42)
41: Pop
42: Load(Module 9: Class("System"))
43: Constant(18: String("abcabcabc"))
44: Constant(19: String("abc"))
45: Constant(20: String(""))
46: Call(Method: replace(_,_) 43)
47: Call(Method: print(_) 42)
48: Pop
49: Load(Module 9: Class("System"))
50: Constant(21: String("søméthîng"))
51: Constant(22: String("sømé"))
52: Constant(23: String("nø"))
53: Call(Method: replace(_,_) 43)
54: Call(Method: print(_) 42)
55: Pop
56: Load(Module 9: Class("System"))
57: Constant(24: String("søméthîng"))
58: Constant(25: String("meth"))
59: Constant(26: String("ton"))
60: Call(Method: replace(_,_) 43)
61: Call(Method: print(_) 42)
62: Pop
63: Load(Module 9: Class("System"))
64: Constant(27: String("a\0b\0c"))
65: Constant(28: String("\0"))
66: Constant(29: String(""))
67: Call(Method: replace(_,_) 43)
68: Call(Method: print(_) 42)
69: Pop
70: Load(Module 9: Class("System"))
71: Constant(30: String("a\0b\0c"))
72: Constant(31: String("b"))
73: Constant(32: String(""))
74: Call(Method: replace(_,_) 43)
75: Constant(33: String("a\0\0c"))
76: Call(Method: ==(_) 1)
77: Call(Method: print(_) 42)
78: Pop
79: End
80: End
