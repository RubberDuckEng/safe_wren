<script> Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
01: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
02: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
03: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
04: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
05: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
06: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
07: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
08: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
09: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
10: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
11: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
12: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
<script> Code:
00 (ln 1): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 1): Store(Module)
02 (ln 1): Pop
03 (ln 2): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
04 (ln 2): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
05 (ln 2): Constant(1: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
06 (ln 2): Constant(1: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
07 (ln 2): Call(..(_))
08 (ln 2): Call([_])
09 (ln 2): Call(print(_))
10 (ln 2): Pop
11 (ln 3): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
12 (ln 3): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
13 (ln 3): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
14 (ln 3): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
15 (ln 3): Call(...(_))
16 (ln 3): Call([_])
17 (ln 3): Constant(3: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
18 (ln 3): Call(==(_))
19 (ln 3): Call(print(_))
20 (ln 3): Pop
21 (ln 4): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
22 (ln 4): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
23 (ln 4): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
24 (ln 4): Constant(4: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
25 (ln 4): Call(..(_))
26 (ln 4): Call([_])
27 (ln 4): Call(print(_))
28 (ln 4): Pop
29 (ln 5): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
30 (ln 5): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
31 (ln 5): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
32 (ln 5): Constant(4: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
33 (ln 5): Call(...(_))
34 (ln 5): Call([_])
35 (ln 5): Call(print(_))
36 (ln 5): Pop
37 (ln 6): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
38 (ln 6): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
39 (ln 6): Constant(4: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
40 (ln 6): Constant(5: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
41 (ln 6): Call(..(_))
42 (ln 6): Call([_])
43 (ln 6): Call(print(_))
44 (ln 6): Pop
45 (ln 7): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
46 (ln 7): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
47 (ln 7): Constant(4: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
48 (ln 7): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
49 (ln 7): Call(...(_))
50 (ln 7): Call([_])
51 (ln 7): Call(print(_))
52 (ln 7): Pop
53 (ln 10): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
54 (ln 10): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
55 (ln 10): Constant(7: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
56 (ln 10): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
57 (ln 10): Call(..(_))
58 (ln 10): Call([_])
59 (ln 10): Call(print(_))
60 (ln 10): Pop
61 (ln 11): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
62 (ln 11): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
63 (ln 11): Constant(7: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
64 (ln 11): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
65 (ln 11): Call(...(_))
66 (ln 11): Call([_])
67 (ln 11): Call(print(_))
68 (ln 11): Pop
69 (ln 12): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
70 (ln 12): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
71 (ln 12): Constant(7: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
72 (ln 12): Constant(7: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
73 (ln 12): Call(...(_))
74 (ln 12): Call([_])
75 (ln 12): Constant(3: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
76 (ln 12): Call(==(_))
77 (ln 12): Call(print(_))
78 (ln 12): Pop
79 (ln 15): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
80 (ln 15): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
81 (ln 15): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
82 (ln 15): Call(-)
83 (ln 15): Constant(4: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
84 (ln 15): Call(-)
85 (ln 15): Call(..(_))
86 (ln 15): Call([_])
87 (ln 15): Call(print(_))
88 (ln 15): Pop
89 (ln 16): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
90 (ln 16): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
91 (ln 16): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
92 (ln 16): Call(-)
93 (ln 16): Constant(4: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
94 (ln 16): Call(-)
95 (ln 16): Call(...(_))
96 (ln 16): Call([_])
97 (ln 16): Call(print(_))
98 (ln 16): Pop
99 (ln 17): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
100 (ln 17): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
101 (ln 17): Constant(7: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
102 (ln 17): Call(-)
103 (ln 17): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
104 (ln 17): Call(-)
105 (ln 17): Call(..(_))
106 (ln 17): Call([_])
107 (ln 17): Call(print(_))
108 (ln 17): Pop
109 (ln 18): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
110 (ln 18): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
111 (ln 18): Constant(7: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
112 (ln 18): Call(-)
113 (ln 18): Constant(8: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
114 (ln 18): Call(-)
115 (ln 18): Call(...(_))
116 (ln 18): Call([_])
117 (ln 18): Call(print(_))
118 (ln 18): Pop
119 (ln 22): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
120 (ln 22): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
121 (ln 22): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
122 (ln 22): Call(-)
123 (ln 22): Constant(7: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
124 (ln 22): Call(..(_))
125 (ln 22): Call([_])
126 (ln 22): Call(print(_))
127 (ln 22): Pop
128 (ln 23): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
129 (ln 23): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
130 (ln 23): Constant(7: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
131 (ln 23): Call(-)
132 (ln 23): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
133 (ln 23): Call(...(_))
134 (ln 23): Call([_])
135 (ln 23): Call(print(_))
136 (ln 23): Pop
137 (ln 24): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
138 (ln 24): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
139 (ln 24): Constant(4: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
140 (ln 24): Call(-)
141 (ln 24): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
142 (ln 24): Call(..(_))
143 (ln 24): Call([_])
144 (ln 24): Call(print(_))
145 (ln 24): Pop
146 (ln 25): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
147 (ln 25): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
148 (ln 25): Constant(4: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
149 (ln 25): Call(-)
150 (ln 25): Constant(1: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
151 (ln 25): Call(...(_))
152 (ln 25): Call([_])
153 (ln 25): Call(print(_))
154 (ln 25): Pop
155 (ln 27): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
156 (ln 27): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
157 (ln 27): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
158 (ln 27): Constant(4: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
159 (ln 27): Call(-)
160 (ln 27): Call(..(_))
161 (ln 27): Call([_])
162 (ln 27): Call(print(_))
163 (ln 27): Pop
164 (ln 28): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
165 (ln 28): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
166 (ln 28): Constant(4: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
167 (ln 28): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
168 (ln 28): Call(-)
169 (ln 28): Call(...(_))
170 (ln 28): Call([_])
171 (ln 28): Call(print(_))
172 (ln 28): Pop
173 (ln 29): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
174 (ln 29): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
175 (ln 29): Constant(5: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
176 (ln 29): Constant(6: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
177 (ln 29): Call(-)
178 (ln 29): Call(..(_))
179 (ln 29): Call([_])
180 (ln 29): Call(print(_))
181 (ln 29): Pop
182 (ln 30): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
183 (ln 30): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
184 (ln 30): Constant(7: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
185 (ln 30): Constant(8: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
186 (ln 30): Call(-)
187 (ln 30): Call(...(_))
188 (ln 30): Call([_])
189 (ln 30): Call(print(_))
190 (ln 30): Pop
191 (ln 33): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
192 (ln 33): Constant(3: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
193 (ln 33): Constant(1: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
194 (ln 33): Constant(1: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
195 (ln 33): Call(...(_))
196 (ln 33): Call([_])
197 (ln 33): Constant(3: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
198 (ln 33): Call(==(_))
199 (ln 33): Call(print(_))
200 (ln 33): Pop
201 (ln 34): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
202 (ln 34): Constant(3: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
203 (ln 34): Constant(1: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
204 (ln 34): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
205 (ln 34): Call(-)
206 (ln 34): Call(..(_))
207 (ln 34): Call([_])
208 (ln 34): Constant(3: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
209 (ln 34): Call(==(_))
210 (ln 34): Call(print(_))
211 (ln 34): Pop
212 (ln 37): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
213 (ln 37): Constant(9: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
214 (ln 37): Constant(7: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
215 (ln 37): Constant(7: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
216 (ln 37): Call(...(_))
217 (ln 37): Call([_])
218 (ln 37): Constant(3: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
219 (ln 37): Call(==(_))
220 (ln 37): Call(print(_))
221 (ln 37): Pop
222 (ln 38): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
223 (ln 38): Constant(9: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
224 (ln 38): Constant(7: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
225 (ln 38): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
226 (ln 38): Call(-)
227 (ln 38): Call(..(_))
228 (ln 38): Call([_])
229 (ln 38): Constant(3: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
230 (ln 38): Call(==(_))
231 (ln 38): Call(print(_))
232 (ln 38): Pop
233 (ln 45): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
234 (ln 45): Constant(10: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
235 (ln 45): Constant(1: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
236 (ln 45): Constant(7: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
237 (ln 45): Call(..(_))
238 (ln 45): Call([_])
239 (ln 45): Call(print(_))
240 (ln 45): Pop
241 (ln 46): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
242 (ln 46): Constant(10: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
243 (ln 46): Constant(7: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
244 (ln 46): Constant(11: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
245 (ln 46): Call(...(_))
246 (ln 46): Call([_])
247 (ln 46): Call(print(_))
248 (ln 46): Pop
249 (ln 49): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
250 (ln 49): Constant(10: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
251 (ln 49): Constant(4: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
252 (ln 49): Constant(8: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
253 (ln 49): Call(..(_))
254 (ln 49): Call([_])
255 (ln 49): Call(print(_))
256 (ln 49): Pop
257 (ln 50): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
258 (ln 50): Constant(10: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
259 (ln 50): Constant(4: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
260 (ln 50): Constant(8: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
261 (ln 50): Call(...(_))
262 (ln 50): Call([_])
263 (ln 50): Call(print(_))
264 (ln 50): Pop
265 (ln 51): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
266 (ln 51): Constant(10: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
267 (ln 51): Constant(4: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
268 (ln 51): Constant(12: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
269 (ln 51): Call(...(_))
270 (ln 51): Call([_])
271 (ln 51): Call(print(_))
272 (ln 51): Pop
273 (ln 54): EndModule
274 (ln 54): Return
275 (ln 54): End
