Function { constants: [String(""), String(""), String("anything"), String(""), String("something"), String("meth"), String("something"), String("some"), String("something"), String("ing"), String("something"), String("math"), String("søméthîng"), String("méth"), String("søméthîng"), String("meth"), String("a\0b\0c"), String("\0"), String("a\0b\0c"), String("b"), String("a\0b\0c"), String("b\0c"), String("a\0b\0c"), String("bc")], code: [Load(Variable { scope: Module, index: 9 }), Constant(0), Constant(1), Call(Signature { bare_name: "contains", call_type: Method, arity: 1 }, 43), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(2), Constant(3), Call(Signature { bare_name: "contains", call_type: Method, arity: 1 }, 43), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(4), Constant(5), Call(Signature { bare_name: "contains", call_type: Method, arity: 1 }, 43), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(6), Constant(7), Call(Signature { bare_name: "contains", call_type: Method, arity: 1 }, 43), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(8), Constant(9), Call(Signature { bare_name: "contains", call_type: Method, arity: 1 }, 43), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(10), Constant(11), Call(Signature { bare_name: "contains", call_type: Method, arity: 1 }, 43), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(12), Constant(13), Call(Signature { bare_name: "contains", call_type: Method, arity: 1 }, 43), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(14), Constant(15), Call(Signature { bare_name: "contains", call_type: Method, arity: 1 }, 43), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(16), Constant(17), Call(Signature { bare_name: "contains", call_type: Method, arity: 1 }, 43), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(18), Constant(19), Call(Signature { bare_name: "contains", call_type: Method, arity: 1 }, 43), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(20), Constant(21), Call(Signature { bare_name: "contains", call_type: Method, arity: 1 }, 43), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(22), Constant(23), Call(Signature { bare_name: "contains", call_type: Method, arity: 1 }, 43), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, End, End] }
00: Load(Module 9: Class("System"))
01: Constant(0: String(""))
02: Constant(1: String(""))
03: Call(Method: contains(_) 43)
04: Call(Method: print(_) 42)
05: Pop
06: Load(Module 9: Class("System"))
07: Constant(2: String("anything"))
08: Constant(3: String(""))
09: Call(Method: contains(_) 43)
10: Call(Method: print(_) 42)
11: Pop
12: Load(Module 9: Class("System"))
13: Constant(4: String("something"))
14: Constant(5: String("meth"))
15: Call(Method: contains(_) 43)
16: Call(Method: print(_) 42)
17: Pop
18: Load(Module 9: Class("System"))
19: Constant(6: String("something"))
20: Constant(7: String("some"))
21: Call(Method: contains(_) 43)
22: Call(Method: print(_) 42)
23: Pop
24: Load(Module 9: Class("System"))
25: Constant(8: String("something"))
26: Constant(9: String("ing"))
27: Call(Method: contains(_) 43)
28: Call(Method: print(_) 42)
29: Pop
30: Load(Module 9: Class("System"))
31: Constant(10: String("something"))
32: Constant(11: String("math"))
33: Call(Method: contains(_) 43)
34: Call(Method: print(_) 42)
35: Pop
36: Load(Module 9: Class("System"))
37: Constant(12: String("søméthîng"))
38: Constant(13: String("méth"))
39: Call(Method: contains(_) 43)
40: Call(Method: print(_) 42)
41: Pop
42: Load(Module 9: Class("System"))
43: Constant(14: String("søméthîng"))
44: Constant(15: String("meth"))
45: Call(Method: contains(_) 43)
46: Call(Method: print(_) 42)
47: Pop
48: Load(Module 9: Class("System"))
49: Constant(16: String("a\0b\0c"))
50: Constant(17: String("\0"))
51: Call(Method: contains(_) 43)
52: Call(Method: print(_) 42)
53: Pop
54: Load(Module 9: Class("System"))
55: Constant(18: String("a\0b\0c"))
56: Constant(19: String("b"))
57: Call(Method: contains(_) 43)
58: Call(Method: print(_) 42)
59: Pop
60: Load(Module 9: Class("System"))
61: Constant(20: String("a\0b\0c"))
62: Constant(21: String("b\0c"))
63: Call(Method: contains(_) 43)
64: Call(Method: print(_) 42)
65: Pop
66: Load(Module 9: Class("System"))
67: Constant(22: String("a\0b\0c"))
68: Constant(23: String("bc"))
69: Call(Method: contains(_) 43)
70: Call(Method: print(_) 42)
71: Pop
72: End
73: End
