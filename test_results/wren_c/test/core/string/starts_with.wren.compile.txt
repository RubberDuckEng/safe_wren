Constants:
00: "abcd"
01: "cd"
02: "a"
03: "abcde"
04: ""
05: "søméthîng"
06: "sømé"
07: "some"
08: "a\0b\0c"
09: "a\0"
10: "b\0"
Code:
00 (ln 1): Load(Module, Class("System"))
01 (ln 1): Constant(0: "abcd")
02 (ln 1): Constant(1: "cd")
03 (ln 1): Call(Method, startsWith(_))
04 (ln 1): Call(Method, print(_))
05 (ln 1): Pop
06 (ln 2): Load(Module, Class("System"))
07 (ln 2): Constant(0: "abcd")
08 (ln 2): Constant(2: "a")
09 (ln 2): Call(Method, startsWith(_))
10 (ln 2): Call(Method, print(_))
11 (ln 2): Pop
12 (ln 3): Load(Module, Class("System"))
13 (ln 3): Constant(0: "abcd")
14 (ln 3): Constant(0: "abcd")
15 (ln 3): Call(Method, startsWith(_))
16 (ln 3): Call(Method, print(_))
17 (ln 3): Pop
18 (ln 4): Load(Module, Class("System"))
19 (ln 4): Constant(0: "abcd")
20 (ln 4): Constant(3: "abcde")
21 (ln 4): Call(Method, startsWith(_))
22 (ln 4): Call(Method, print(_))
23 (ln 4): Pop
24 (ln 5): Load(Module, Class("System"))
25 (ln 5): Constant(0: "abcd")
26 (ln 5): Constant(4: "")
27 (ln 5): Call(Method, startsWith(_))
28 (ln 5): Call(Method, print(_))
29 (ln 5): Pop
30 (ln 8): Load(Module, Class("System"))
31 (ln 8): Constant(5: "søméthîng")
32 (ln 8): Constant(6: "sømé")
33 (ln 8): Call(Method, startsWith(_))
34 (ln 8): Call(Method, print(_))
35 (ln 8): Pop
36 (ln 9): Load(Module, Class("System"))
37 (ln 9): Constant(5: "søméthîng")
38 (ln 9): Constant(7: "some")
39 (ln 9): Call(Method, startsWith(_))
40 (ln 9): Call(Method, print(_))
41 (ln 9): Pop
42 (ln 12): Load(Module, Class("System"))
43 (ln 12): Constant(8: "a\0b\0c")
44 (ln 12): Constant(2: "a")
45 (ln 12): Call(Method, startsWith(_))
46 (ln 12): Call(Method, print(_))
47 (ln 12): Pop
48 (ln 13): Load(Module, Class("System"))
49 (ln 13): Constant(8: "a\0b\0c")
50 (ln 13): Constant(9: "a\0")
51 (ln 13): Call(Method, startsWith(_))
52 (ln 13): Call(Method, print(_))
53 (ln 13): Pop
54 (ln 14): Load(Module, Class("System"))
55 (ln 14): Constant(8: "a\0b\0c")
56 (ln 14): Constant(10: "b\0")
57 (ln 14): Call(Method, startsWith(_))
58 (ln 14): Call(Method, print(_))
59 (ln 14): Pop
60 (ln 15): EndModule
61 (ln 15): Return
62 (ln 15): End
