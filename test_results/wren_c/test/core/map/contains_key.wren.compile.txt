<script> Constants:
00: "one"
01: 1
02: "two"
03: 2
04: "three"
05: 3
06: "four"
07: "five"
<script> Code:
00 (ln 1): Load(Module, Class("Map"))
01 (ln 1): Call(Method, new())
02 (ln 2): Constant(0: "one")
03 (ln 2): Constant(1: 1)
04 (ln 2): Call(Method, addCore_(_,_))
05 (ln 3): Constant(2: "two")
06 (ln 3): Constant(3: 2)
07 (ln 3): Call(Method, addCore_(_,_))
08 (ln 4): Constant(4: "three")
09 (ln 4): Constant(5: 3)
10 (ln 4): Call(Method, addCore_(_,_))
11 (ln 5): Store(Module)
12 (ln 5): Pop
13 (ln 7): Load(Module, Class("System"))
14 (ln 7): Load(Module, Null)
15 (ln 7): Constant(0: "one")
16 (ln 7): Call(Method, containsKey(_))
17 (ln 7): Call(Method, print(_))
18 (ln 7): Pop
19 (ln 8): Load(Module, Class("System"))
20 (ln 8): Load(Module, Null)
21 (ln 8): Constant(2: "two")
22 (ln 8): Call(Method, containsKey(_))
23 (ln 8): Call(Method, print(_))
24 (ln 8): Pop
25 (ln 9): Load(Module, Class("System"))
26 (ln 9): Load(Module, Null)
27 (ln 9): Constant(4: "three")
28 (ln 9): Call(Method, containsKey(_))
29 (ln 9): Call(Method, print(_))
30 (ln 9): Pop
31 (ln 10): Load(Module, Class("System"))
32 (ln 10): Load(Module, Null)
33 (ln 10): Constant(6: "four")
34 (ln 10): Call(Method, containsKey(_))
35 (ln 10): Call(Method, print(_))
36 (ln 10): Pop
37 (ln 11): Load(Module, Class("System"))
38 (ln 11): Load(Module, Null)
39 (ln 11): Constant(7: "five")
40 (ln 11): Call(Method, containsKey(_))
41 (ln 11): Call(Method, print(_))
42 (ln 11): Pop
43 (ln 12): EndModule
44 (ln 12): Return
45 (ln 12): End
