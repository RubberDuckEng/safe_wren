<script> Constants:
00: Fn(new(_) block argument)
01: Fn(new(_) block argument)
02: Fn(new(_) block argument)
03: "not reached"
<script> Code:
00 (ln 1): Load(Module, Class("Fiber"))
01 (ln 5): Closure(0, [])
02 (ln 5): Call(new(_))
03 (ln 5): Store(Module)
04 (ln 5): Pop
05 (ln 9): Load(Module, Class("Fiber"))
06 (ln 9): Closure(1, [])
07 (ln 9): Call(new(_))
08 (ln 9): Store(Module)
09 (ln 9): Pop
10 (ln 10): Load(Module, Class("Fiber"))
11 (ln 10): Closure(2, [])
12 (ln 10): Call(new(_))
13 (ln 10): Store(Module)
14 (ln 10): Pop
15 (ln 11): Load(Module, Null)
16 (ln 11): Call(transfer())
17 (ln 11): Pop
18 (ln 12): Load(Module, Class("System"))
19 (ln 12): Constant(3: "not reached")
20 (ln 12): Call(print(_))
21 (ln 12): Pop
22 (ln 13): EndModule
23 (ln 13): Return
24 (ln 13): End
new(_) block argument Constants:
00: "before"
01: 1
02: "not reached"
new(_) block argument Code:
00 (ln 2): Load(Module, Class("System"))
01 (ln 2): Constant(0: "before")
02 (ln 2): Call(print(_))
03 (ln 2): Pop
04 (ln 3): Load(Module, Class("Fiber"))
05 (ln 3): Constant(1: 1)
06 (ln 3): Call(yield(_))
07 (ln 3): Pop
08 (ln 4): Load(Module, Class("System"))
09 (ln 4): Constant(2: "not reached")
10 (ln 4): Call(print(_))
11 (ln 4): Pop
12 (ln 5): Null
13 (ln 5): Return
14 (ln 5): End
new(_) block argument Code:
00 (ln 9): Load(Module, Null)
01 (ln 9): Call(transfer())
02 (ln 9): Return
03 (ln 9): End
new(_) block argument Code:
00 (ln 10): Load(Module, Null)
01 (ln 10): Call(transfer())
02 (ln 10): Return
03 (ln 10): End
