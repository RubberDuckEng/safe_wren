<script> Constants:
00: Fn(new(_) block argument)
01: "main 1"
02: "main 2"
03: "main 3"
<script> Code:
00 (ln 1): Load(Module, Class("Fiber"))
01 (ln 7): Closure(0, [])
02 (ln 7): Call(Method, new(_))
03 (ln 7): Store(Module)
04 (ln 7): Pop
05 (ln 9): Load(Module, Null)
06 (ln 9): Call(Method, call())
07 (ln 9): Pop
08 (ln 10): Load(Module, Class("System"))
09 (ln 10): Constant(1: "main 1")
10 (ln 10): Call(Method, print(_))
11 (ln 10): Pop
12 (ln 11): Load(Module, Null)
13 (ln 11): Call(Method, call())
14 (ln 11): Pop
15 (ln 12): Load(Module, Class("System"))
16 (ln 12): Constant(2: "main 2")
17 (ln 12): Call(Method, print(_))
18 (ln 12): Pop
19 (ln 13): Load(Module, Null)
20 (ln 13): Call(Method, call())
21 (ln 13): Pop
22 (ln 14): Load(Module, Class("System"))
23 (ln 14): Constant(3: "main 3")
24 (ln 14): Call(Method, print(_))
25 (ln 14): Pop
26 (ln 15): EndModule
27 (ln 15): Return
28 (ln 15): End
new(_) block argument Constants:
00: "fiber 1"
01: "fiber 2"
02: "fiber 3"
new(_) block argument Code:
00 (ln 2): Load(Module, Class("System"))
01 (ln 2): Constant(0: "fiber 1")
02 (ln 2): Call(Method, print(_))
03 (ln 2): Pop
04 (ln 3): Load(Module, Class("Fiber"))
05 (ln 3): Call(Method, yield())
06 (ln 3): Pop
07 (ln 4): Load(Module, Class("System"))
08 (ln 4): Constant(1: "fiber 2")
09 (ln 4): Call(Method, print(_))
10 (ln 4): Pop
11 (ln 5): Load(Module, Class("Fiber"))
12 (ln 5): Call(Method, yield())
13 (ln 5): Pop
14 (ln 6): Load(Module, Class("System"))
15 (ln 6): Constant(2: "fiber 3")
16 (ln 6): Call(Method, print(_))
17 (ln 6): Pop
18 (ln 7): Null
19 (ln 7): Return
20 (ln 7): End
