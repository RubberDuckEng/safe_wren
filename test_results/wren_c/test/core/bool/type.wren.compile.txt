Function { constants: [], code: [Load(Variable { scope: Module, index: 9 }), Boolean(true), Load(Variable { scope: Module, index: 4 }), Call(Signature { bare_name: "is", call_type: Method, arity: 1 }, 3), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Boolean(true), Load(Variable { scope: Module, index: 0 }), Call(Signature { bare_name: "is", call_type: Method, arity: 1 }, 3), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Boolean(true), Load(Variable { scope: Module, index: 6 }), Call(Signature { bare_name: "is", call_type: Method, arity: 1 }, 3), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Boolean(true), Call(Signature { bare_name: "type", call_type: Getter, arity: 0 }, 43), Load(Variable { scope: Module, index: 4 }), Call(Signature { bare_name: "==", call_type: Method, arity: 1 }, 1), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, End, End] }
00: Load(Module 9: Class("System"))
01: Boolean true
02: Load(Module 4: Class("Bool"))
03: Call(Method: is(_) 3)
04: Call(Method: print(_) 42)
05: Pop
06: Load(Module 9: Class("System"))
07: Boolean true
08: Load(Module 0: Class("Object"))
09: Call(Method: is(_) 3)
10: Call(Method: print(_) 42)
11: Pop
12: Load(Module 9: Class("System"))
13: Boolean true
14: Load(Module 6: Class("Num"))
15: Call(Method: is(_) 3)
16: Call(Method: print(_) 42)
17: Pop
18: Load(Module 9: Class("System"))
19: Boolean true
20: Call(Getter: type 43)
21: Load(Module 4: Class("Bool"))
22: Call(Method: ==(_) 1)
23: Call(Method: print(_) 42)
24: Pop
25: End
26: End
