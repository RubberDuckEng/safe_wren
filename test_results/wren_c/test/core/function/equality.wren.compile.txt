Constants:
00: Fn(new(_) block argument)
01: Fn(new(_) block argument)
02: Fn(new(_) block argument)
03: Fn(new(_) block argument)
04: Fn(new(_) block argument)
05: 1
06: Fn(new(_) block argument)
07: Fn(new(_) block argument)
08: "fn 123"
09: Fn(new(_) block argument)
10: Fn(new(_) block argument)
11: Fn(new(_) block argument)
12: Fn(new(_) block argument)
13: 2
14: Fn(new(_) block argument)
15: 0
Code:
00 (ln 2): Load(Module, Class("System"))
01 (ln 2): Load(Module, Class("Fn"))
02 (ln 2): Closure(0, [])
03 (ln 2): Call(Method, new(_))
04 (ln 2): Load(Module, Class("Fn"))
05 (ln 2): Closure(1, [])
06 (ln 2): Call(Method, new(_))
07 (ln 2): Call(Method, ==(_))
08 (ln 2): Call(Method, print(_))
09 (ln 2): Pop
10 (ln 3): Load(Module, Class("System"))
11 (ln 3): Load(Module, Class("Fn"))
12 (ln 3): Closure(2, [])
13 (ln 3): Call(Method, new(_))
14 (ln 3): Load(Module, Class("Fn"))
15 (ln 3): Closure(3, [])
16 (ln 3): Call(Method, new(_))
17 (ln 3): Call(Method, !=(_))
18 (ln 3): Call(Method, print(_))
19 (ln 3): Pop
20 (ln 6): Load(Module, Class("System"))
21 (ln 6): Load(Module, Class("Fn"))
22 (ln 6): Closure(4, [])
23 (ln 6): Call(Method, new(_))
24 (ln 6): Constant(5: 1)
25 (ln 6): Call(Method, ==(_))
26 (ln 6): Call(Method, print(_))
27 (ln 6): Pop
28 (ln 7): Load(Module, Class("System"))
29 (ln 7): Load(Module, Class("Fn"))
30 (ln 7): Closure(6, [])
31 (ln 7): Call(Method, new(_))
32 (ln 7): Boolean false
33 (ln 7): Call(Method, ==(_))
34 (ln 7): Call(Method, print(_))
35 (ln 7): Pop
36 (ln 8): Load(Module, Class("System"))
37 (ln 8): Load(Module, Class("Fn"))
38 (ln 8): Closure(7, [])
39 (ln 8): Call(Method, new(_))
40 (ln 8): Constant(8: "fn 123")
41 (ln 8): Call(Method, ==(_))
42 (ln 8): Call(Method, print(_))
43 (ln 8): Pop
44 (ln 9): Load(Module, Class("System"))
45 (ln 9): Load(Module, Class("Fn"))
46 (ln 9): Closure(9, [])
47 (ln 9): Call(Method, new(_))
48 (ln 9): Constant(5: 1)
49 (ln 9): Call(Method, !=(_))
50 (ln 9): Call(Method, print(_))
51 (ln 9): Pop
52 (ln 10): Load(Module, Class("System"))
53 (ln 10): Load(Module, Class("Fn"))
54 (ln 10): Closure(10, [])
55 (ln 10): Call(Method, new(_))
56 (ln 10): Boolean false
57 (ln 10): Call(Method, !=(_))
58 (ln 10): Call(Method, print(_))
59 (ln 10): Pop
60 (ln 11): Load(Module, Class("System"))
61 (ln 11): Load(Module, Class("Fn"))
62 (ln 11): Closure(11, [])
63 (ln 11): Call(Method, new(_))
64 (ln 11): Constant(8: "fn 123")
65 (ln 11): Call(Method, !=(_))
66 (ln 11): Call(Method, print(_))
67 (ln 11): Pop
68 (ln 14): Load(Module, Class("Fn"))
69 (ln 14): Closure(12, [])
70 (ln 14): Call(Method, new(_))
71 (ln 14): Store(Module)
72 (ln 14): Pop
73 (ln 15): Load(Module, Class("System"))
74 (ln 15): Load(Module, Null)
75 (ln 15): Load(Module, Null)
76 (ln 15): Call(Method, ==(_))
77 (ln 15): Call(Method, print(_))
78 (ln 15): Pop
79 (ln 16): Load(Module, Class("System"))
80 (ln 16): Load(Module, Null)
81 (ln 16): Load(Module, Null)
82 (ln 16): Call(Method, !=(_))
83 (ln 16): Call(Method, print(_))
84 (ln 16): Pop
85 (ln 19): Load(Module, Class("List"))
86 (ln 19): Call(Method, new())
87 (ln 19): Store(Module)
88 (ln 19): Pop
89 (ln 20): Constant(5: 1)
90 (ln 20): Constant(13: 2)
91 (ln 20): Call(Method, ..(_))
92 (ln 20): Null
93 (ln 20): Load(Local, 1)
94 (ln 20): Load(Local, 2)
95 (ln 20): Call(Method, iterate(_))
96 (ln 20): Store(Local, 2)
97 (ln 20): JumpIfFalse(11)
98 (ln 20): Load(Local, 1)
99 (ln 20): Load(Local, 2)
100 (ln 20): Call(Method, iteratorValue(_))
101 (ln 21): Load(Module, Null)
102 (ln 21): Load(Module, Class("Fn"))
103 (ln 21): Closure(14, [])
104 (ln 21): Call(Method, new(_))
105 (ln 21): Call(Method, add(_))
106 (ln 21): Pop
107 (ln 22): Pop
108 (ln 22): Loop(16)
109 (ln 22): Pop
110 (ln 22): Pop
111 (ln 23): Load(Module, Class("System"))
112 (ln 23): Load(Module, Null)
113 (ln 23): Constant(15: 0)
114 (ln 23): Call(Subscript, [_])
115 (ln 23): Load(Module, Null)
116 (ln 23): Constant(5: 1)
117 (ln 23): Call(Subscript, [_])
118 (ln 23): Call(Method, ==(_))
119 (ln 23): Call(Method, print(_))
120 (ln 23): Pop
121 (ln 24): EndModule
122 (ln 24): Return
123 (ln 24): End
