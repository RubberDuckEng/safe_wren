Constants:
00: Fn(new(_) block argument)
01: Fn(new(_) block argument)
02: Fn(new(_) block argument)
03: Fn(new(_) block argument)
Code:
00 (ln 1): Load(Module, Class("System"))
01 (ln 1): Load(Module, Class("Fn"))
02 (ln 1): Closure(0, [])
03 (ln 1): Call(Method, new(_))
04 (ln 1): Load(Module, Class("Fn"))
05 (ln 1): Call(Method, is(_))
06 (ln 1): Call(Method, print(_))
07 (ln 1): Pop
08 (ln 2): Load(Module, Class("System"))
09 (ln 2): Load(Module, Class("Fn"))
10 (ln 2): Closure(1, [])
11 (ln 2): Call(Method, new(_))
12 (ln 2): Load(Module, Class("Object"))
13 (ln 2): Call(Method, is(_))
14 (ln 2): Call(Method, print(_))
15 (ln 2): Pop
16 (ln 3): Load(Module, Class("System"))
17 (ln 3): Load(Module, Class("Fn"))
18 (ln 3): Closure(2, [])
19 (ln 3): Call(Method, new(_))
20 (ln 3): Load(Module, Class("String"))
21 (ln 3): Call(Method, is(_))
22 (ln 3): Call(Method, print(_))
23 (ln 3): Pop
24 (ln 4): Load(Module, Class("System"))
25 (ln 4): Load(Module, Class("Fn"))
26 (ln 4): Closure(3, [])
27 (ln 4): Call(Method, new(_))
28 (ln 4): Call(Getter, type)
29 (ln 4): Load(Module, Class("Fn"))
30 (ln 4): Call(Method, ==(_))
31 (ln 4): Call(Method, print(_))
32 (ln 4): Pop
33 (ln 5): EndModule
34 (ln 5): Return
35 (ln 5): End
