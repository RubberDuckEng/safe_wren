Function { constants: [Fn(), Fn(), Fn(), Fn()], code: [Load(Variable { scope: Module, index: 9 }), Load(Variable { scope: Module, index: 3 }), Closure(0, []), Call(Signature { bare_name: "new", call_type: Method, arity: 1 }, 24), Load(Variable { scope: Module, index: 3 }), Call(Signature { bare_name: "is", call_type: Method, arity: 1 }, 3), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Load(Variable { scope: Module, index: 3 }), Closure(1, []), Call(Signature { bare_name: "new", call_type: Method, arity: 1 }, 24), Load(Variable { scope: Module, index: 0 }), Call(Signature { bare_name: "is", call_type: Method, arity: 1 }, 3), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Load(Variable { scope: Module, index: 3 }), Closure(2, []), Call(Signature { bare_name: "new", call_type: Method, arity: 1 }, 24), Load(Variable { scope: Module, index: 7 }), Call(Signature { bare_name: "is", call_type: Method, arity: 1 }, 3), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Load(Variable { scope: Module, index: 3 }), Closure(3, []), Call(Signature { bare_name: "new", call_type: Method, arity: 1 }, 24), Call(Signature { bare_name: "type", call_type: Getter, arity: 0 }, 43), Load(Variable { scope: Module, index: 3 }), Call(Signature { bare_name: "==", call_type: Method, arity: 1 }, 1), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, End, End] }
00: Load(Module 9: Class("System"))
01: Load(Module 3: Class("Fn"))
02: Closure(0, [])
03: Call(Method: new(_) 24)
04: Load(Module 3: Class("Fn"))
05: Call(Method: is(_) 3)
06: Call(Method: print(_) 42)
07: Pop
08: Load(Module 9: Class("System"))
09: Load(Module 3: Class("Fn"))
10: Closure(1, [])
11: Call(Method: new(_) 24)
12: Load(Module 0: Class("Object"))
13: Call(Method: is(_) 3)
14: Call(Method: print(_) 42)
15: Pop
16: Load(Module 9: Class("System"))
17: Load(Module 3: Class("Fn"))
18: Closure(2, [])
19: Call(Method: new(_) 24)
20: Load(Module 7: Class("String"))
21: Call(Method: is(_) 3)
22: Call(Method: print(_) 42)
23: Pop
24: Load(Module 9: Class("System"))
25: Load(Module 3: Class("Fn"))
26: Closure(3, [])
27: Call(Method: new(_) 24)
28: Call(Getter: type 43)
29: Load(Module 3: Class("Fn"))
30: Call(Method: ==(_) 1)
31: Call(Method: print(_) 42)
32: Pop
33: End
34: End
