<script> Constants:
00: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
01: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
02: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData }
<script> Code:
00 (ln 3): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
01 (ln 3): Constant(1: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
02 (ln 3): Call(..(_))
03 (ln 3): Null
04 (ln 3): Load(Local, 1)
05 (ln 3): Load(Local, 2)
06 (ln 3): Call(iterate(_))
07 (ln 3): Store(Local, 2)
08 (ln 3): JumpIfFalse(9)
09 (ln 3): Load(Local, 1)
10 (ln 3): Load(Local, 2)
11 (ln 3): Call(iteratorValue(_))
12 (ln 3): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
13 (ln 3): Load(Local, 3)
14 (ln 3): Call(print(_))
15 (ln 3): Pop
16 (ln 3): Pop
17 (ln 3): Loop(14)
18 (ln 3): Pop
19 (ln 3): Pop
20 (ln 9): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
21 (ln 9): Constant(1: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
22 (ln 9): Call(...(_))
23 (ln 9): Null
24 (ln 9): Load(Local, 1)
25 (ln 9): Load(Local, 2)
26 (ln 9): Call(iterate(_))
27 (ln 9): Store(Local, 2)
28 (ln 9): JumpIfFalse(9)
29 (ln 9): Load(Local, 1)
30 (ln 9): Load(Local, 2)
31 (ln 9): Call(iteratorValue(_))
32 (ln 9): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
33 (ln 9): Load(Local, 3)
34 (ln 9): Call(print(_))
35 (ln 9): Pop
36 (ln 9): Pop
37 (ln 9): Loop(14)
38 (ln 9): Pop
39 (ln 9): Pop
40 (ln 15): Constant(0: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
41 (ln 15): Constant(2: HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
42 (ln 15): Call(...(_))
43 (ln 15): Null
44 (ln 15): Load(Local, 1)
45 (ln 15): Load(Local, 2)
46 (ln 15): Call(iterate(_))
47 (ln 15): Store(Local, 2)
48 (ln 15): JumpIfFalse(9)
49 (ln 15): Load(Local, 1)
50 (ln 15): Load(Local, 2)
51 (ln 15): Call(iteratorValue(_))
52 (ln 15): Load(Module, HeapHandle { ptr: Cell { value: TaggedPtr }, _phantom: PhantomData })
53 (ln 15): Load(Local, 3)
54 (ln 15): Call(print(_))
55 (ln 15): Pop
56 (ln 15): Pop
57 (ln 15): Loop(14)
58 (ln 15): Pop
59 (ln 15): Pop
60 (ln 19): EndModule
61 (ln 19): Return
62 (ln 19): End
