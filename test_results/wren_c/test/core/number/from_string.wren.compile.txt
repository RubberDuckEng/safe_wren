Function { constants: [String("123"), Num(123), String("-123"), Num(123), String("-0"), Num(0), String("12.34"), Num(12.34), String("-0.0001"), Num(0.0001), String(" 12 "), Num(12), String("test1"), String(""), String("prefix1.2"), String("1.2suffix")], code: [Load(Variable { scope: Module, index: 9 }), Load(Variable { scope: Module, index: 6 }), Constant(0), Call(Signature { bare_name: "fromString", call_type: Method, arity: 1 }, 43), Constant(1), Call(Signature { bare_name: "==", call_type: Method, arity: 1 }, 1), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Load(Variable { scope: Module, index: 6 }), Constant(2), Call(Signature { bare_name: "fromString", call_type: Method, arity: 1 }, 43), Constant(3), Call(Signature { bare_name: "-", call_type: Method, arity: 0 }, 8), Call(Signature { bare_name: "==", call_type: Method, arity: 1 }, 1), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Load(Variable { scope: Module, index: 6 }), Constant(4), Call(Signature { bare_name: "fromString", call_type: Method, arity: 1 }, 43), Constant(5), Call(Signature { bare_name: "-", call_type: Method, arity: 0 }, 8), Call(Signature { bare_name: "==", call_type: Method, arity: 1 }, 1), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Load(Variable { scope: Module, index: 6 }), Constant(6), Call(Signature { bare_name: "fromString", call_type: Method, arity: 1 }, 43), Constant(7), Call(Signature { bare_name: "==", call_type: Method, arity: 1 }, 1), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Load(Variable { scope: Module, index: 6 }), Constant(8), Call(Signature { bare_name: "fromString", call_type: Method, arity: 1 }, 43), Constant(9), Call(Signature { bare_name: "-", call_type: Method, arity: 0 }, 8), Call(Signature { bare_name: "==", call_type: Method, arity: 1 }, 1), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Load(Variable { scope: Module, index: 6 }), Constant(10), Call(Signature { bare_name: "fromString", call_type: Method, arity: 1 }, 43), Constant(11), Call(Signature { bare_name: "==", call_type: Method, arity: 1 }, 1), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Load(Variable { scope: Module, index: 6 }), Constant(12), Call(Signature { bare_name: "fromString", call_type: Method, arity: 1 }, 43), Null, Call(Signature { bare_name: "==", call_type: Method, arity: 1 }, 1), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Load(Variable { scope: Module, index: 6 }), Constant(13), Call(Signature { bare_name: "fromString", call_type: Method, arity: 1 }, 43), Null, Call(Signature { bare_name: "==", call_type: Method, arity: 1 }, 1), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Load(Variable { scope: Module, index: 6 }), Constant(14), Call(Signature { bare_name: "fromString", call_type: Method, arity: 1 }, 43), Null, Call(Signature { bare_name: "==", call_type: Method, arity: 1 }, 1), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Load(Variable { scope: Module, index: 6 }), Constant(15), Call(Signature { bare_name: "fromString", call_type: Method, arity: 1 }, 43), Null, Call(Signature { bare_name: "==", call_type: Method, arity: 1 }, 1), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, End, End] }
00: Load(Module 9: Class("System"))
01: Load(Module 6: Class("Num"))
02: Constant(0: String("123"))
03: Call(Method: fromString(_) 43)
04: Constant(1: Num(123))
05: Call(Method: ==(_) 1)
06: Call(Method: print(_) 42)
07: Pop
08: Load(Module 9: Class("System"))
09: Load(Module 6: Class("Num"))
10: Constant(2: String("-123"))
11: Call(Method: fromString(_) 43)
12: Constant(3: Num(123))
13: Call(Method: - 8)
14: Call(Method: ==(_) 1)
15: Call(Method: print(_) 42)
16: Pop
17: Load(Module 9: Class("System"))
18: Load(Module 6: Class("Num"))
19: Constant(4: String("-0"))
20: Call(Method: fromString(_) 43)
21: Constant(5: Num(0))
22: Call(Method: - 8)
23: Call(Method: ==(_) 1)
24: Call(Method: print(_) 42)
25: Pop
26: Load(Module 9: Class("System"))
27: Load(Module 6: Class("Num"))
28: Constant(6: String("12.34"))
29: Call(Method: fromString(_) 43)
30: Constant(7: Num(12.34))
31: Call(Method: ==(_) 1)
32: Call(Method: print(_) 42)
33: Pop
34: Load(Module 9: Class("System"))
35: Load(Module 6: Class("Num"))
36: Constant(8: String("-0.0001"))
37: Call(Method: fromString(_) 43)
38: Constant(9: Num(0.0001))
39: Call(Method: - 8)
40: Call(Method: ==(_) 1)
41: Call(Method: print(_) 42)
42: Pop
43: Load(Module 9: Class("System"))
44: Load(Module 6: Class("Num"))
45: Constant(10: String(" 12 "))
46: Call(Method: fromString(_) 43)
47: Constant(11: Num(12))
48: Call(Method: ==(_) 1)
49: Call(Method: print(_) 42)
50: Pop
51: Load(Module 9: Class("System"))
52: Load(Module 6: Class("Num"))
53: Constant(12: String("test1"))
54: Call(Method: fromString(_) 43)
55: Null
56: Call(Method: ==(_) 1)
57: Call(Method: print(_) 42)
58: Pop
59: Load(Module 9: Class("System"))
60: Load(Module 6: Class("Num"))
61: Constant(13: String(""))
62: Call(Method: fromString(_) 43)
63: Null
64: Call(Method: ==(_) 1)
65: Call(Method: print(_) 42)
66: Pop
67: Load(Module 9: Class("System"))
68: Load(Module 6: Class("Num"))
69: Constant(14: String("prefix1.2"))
70: Call(Method: fromString(_) 43)
71: Null
72: Call(Method: ==(_) 1)
73: Call(Method: print(_) 42)
74: Pop
75: Load(Module 9: Class("System"))
76: Load(Module 6: Class("Num"))
77: Constant(15: String("1.2suffix"))
78: Call(Method: fromString(_) 43)
79: Null
80: Call(Method: ==(_) 1)
81: Call(Method: print(_) 42)
82: Pop
83: End
84: End
