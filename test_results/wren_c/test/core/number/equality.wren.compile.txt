Function { constants: [Num(123), Num(123), Num(123), Num(124), Num(3), Num(3), Num(0), Num(0), Num(123), String("123"), Num(1), Num(0), Num(123), Num(123), Num(123), Num(124), Num(3), Num(3), Num(0), Num(0), Num(123), String("123"), Num(1), Num(0)], code: [Load(Variable { scope: Module, index: 9 }), Constant(0), Constant(1), Call(Signature { bare_name: "==", call_type: Method, arity: 1 }, 1), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(2), Constant(3), Call(Signature { bare_name: "==", call_type: Method, arity: 1 }, 1), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(4), Call(Signature { bare_name: "-", call_type: Method, arity: 0 }, 8), Constant(5), Call(Signature { bare_name: "==", call_type: Method, arity: 1 }, 1), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(6), Constant(7), Call(Signature { bare_name: "-", call_type: Method, arity: 0 }, 8), Call(Signature { bare_name: "==", call_type: Method, arity: 1 }, 1), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(8), Constant(9), Call(Signature { bare_name: "==", call_type: Method, arity: 1 }, 1), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(10), Boolean(true), Call(Signature { bare_name: "==", call_type: Method, arity: 1 }, 1), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(11), Boolean(false), Call(Signature { bare_name: "==", call_type: Method, arity: 1 }, 1), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(12), Constant(13), Call(Signature { bare_name: "!=", call_type: Method, arity: 1 }, 2), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(14), Constant(15), Call(Signature { bare_name: "!=", call_type: Method, arity: 1 }, 2), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(16), Call(Signature { bare_name: "-", call_type: Method, arity: 0 }, 8), Constant(17), Call(Signature { bare_name: "!=", call_type: Method, arity: 1 }, 2), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(18), Constant(19), Call(Signature { bare_name: "-", call_type: Method, arity: 0 }, 8), Call(Signature { bare_name: "!=", call_type: Method, arity: 1 }, 2), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(20), Constant(21), Call(Signature { bare_name: "!=", call_type: Method, arity: 1 }, 2), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(22), Boolean(true), Call(Signature { bare_name: "!=", call_type: Method, arity: 1 }, 2), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(23), Boolean(false), Call(Signature { bare_name: "!=", call_type: Method, arity: 1 }, 2), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, End, End] }
00: Load(Module 9: Class("System"))
01: Constant(0: Num(123))
02: Constant(1: Num(123))
03: Call(Method: ==(_) 1)
04: Call(Method: print(_) 42)
05: Pop
06: Load(Module 9: Class("System"))
07: Constant(2: Num(123))
08: Constant(3: Num(124))
09: Call(Method: ==(_) 1)
10: Call(Method: print(_) 42)
11: Pop
12: Load(Module 9: Class("System"))
13: Constant(4: Num(3))
14: Call(Method: - 8)
15: Constant(5: Num(3))
16: Call(Method: ==(_) 1)
17: Call(Method: print(_) 42)
18: Pop
19: Load(Module 9: Class("System"))
20: Constant(6: Num(0))
21: Constant(7: Num(0))
22: Call(Method: - 8)
23: Call(Method: ==(_) 1)
24: Call(Method: print(_) 42)
25: Pop
26: Load(Module 9: Class("System"))
27: Constant(8: Num(123))
28: Constant(9: String("123"))
29: Call(Method: ==(_) 1)
30: Call(Method: print(_) 42)
31: Pop
32: Load(Module 9: Class("System"))
33: Constant(10: Num(1))
34: Boolean true
35: Call(Method: ==(_) 1)
36: Call(Method: print(_) 42)
37: Pop
38: Load(Module 9: Class("System"))
39: Constant(11: Num(0))
40: Boolean false
41: Call(Method: ==(_) 1)
42: Call(Method: print(_) 42)
43: Pop
44: Load(Module 9: Class("System"))
45: Constant(12: Num(123))
46: Constant(13: Num(123))
47: Call(Method: !=(_) 2)
48: Call(Method: print(_) 42)
49: Pop
50: Load(Module 9: Class("System"))
51: Constant(14: Num(123))
52: Constant(15: Num(124))
53: Call(Method: !=(_) 2)
54: Call(Method: print(_) 42)
55: Pop
56: Load(Module 9: Class("System"))
57: Constant(16: Num(3))
58: Call(Method: - 8)
59: Constant(17: Num(3))
60: Call(Method: !=(_) 2)
61: Call(Method: print(_) 42)
62: Pop
63: Load(Module 9: Class("System"))
64: Constant(18: Num(0))
65: Constant(19: Num(0))
66: Call(Method: - 8)
67: Call(Method: !=(_) 2)
68: Call(Method: print(_) 42)
69: Pop
70: Load(Module 9: Class("System"))
71: Constant(20: Num(123))
72: Constant(21: String("123"))
73: Call(Method: !=(_) 2)
74: Call(Method: print(_) 42)
75: Pop
76: Load(Module 9: Class("System"))
77: Constant(22: Num(1))
78: Boolean true
79: Call(Method: !=(_) 2)
80: Call(Method: print(_) 42)
81: Pop
82: Load(Module 9: Class("System"))
83: Constant(23: Num(0))
84: Boolean false
85: Call(Method: !=(_) 2)
86: Call(Method: print(_) 42)
87: Pop
88: End
89: End
