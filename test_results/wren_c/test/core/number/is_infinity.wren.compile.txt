Function { constants: [Num(123), Num(1), Num(0), Num(10), Num(0)], code: [Load(Variable { scope: Module, index: 9 }), Constant(0), Call(Signature { bare_name: "isInfinity", call_type: Getter, arity: 0 }, 43), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(1), Constant(2), Call(Signature { bare_name: "/", call_type: Method, arity: 1 }, 10), Call(Signature { bare_name: "isInfinity", call_type: Getter, arity: 0 }, 43), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, Load(Variable { scope: Module, index: 9 }), Constant(3), Call(Signature { bare_name: "-", call_type: Method, arity: 0 }, 8), Constant(4), Call(Signature { bare_name: "/", call_type: Method, arity: 1 }, 10), Call(Signature { bare_name: "isInfinity", call_type: Getter, arity: 0 }, 43), Call(Signature { bare_name: "print", call_type: Method, arity: 1 }, 42), Pop, End, End] }
00: Load(Module 9: Class("System"))
01: Constant(0: Num(123))
02: Call(Getter: isInfinity 43)
03: Call(Method: print(_) 42)
04: Pop
05: Load(Module 9: Class("System"))
06: Constant(1: Num(1))
07: Constant(2: Num(0))
08: Call(Method: /(_) 10)
09: Call(Getter: isInfinity 43)
10: Call(Method: print(_) 42)
11: Pop
12: Load(Module 9: Class("System"))
13: Constant(3: Num(10))
14: Call(Method: - 8)
15: Constant(4: Num(0))
16: Call(Method: /(_) 10)
17: Call(Getter: isInfinity 43)
18: Call(Method: print(_) 42)
19: Pop
20: End
21: End
