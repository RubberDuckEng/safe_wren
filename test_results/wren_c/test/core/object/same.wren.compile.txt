<script> Constants:
00: 1
01: 2
02: 3
03: "ab"
04: "a"
05: "b"
06: "c"
07: "1"
08: "Foo"
09: Fn(init new())
10: Fn()
11: "Bar"
12: Fn(init new())
13: Fn()
14: Fn(==(_))
<script> Code:
00 (ln 2): Load(Module, Class("System"))
01 (ln 2): Load(Module, Class("Object"))
02 (ln 2): Boolean true
03 (ln 2): Boolean true
04 (ln 2): Call(same(_,_))
05 (ln 2): Call(print(_))
06 (ln 2): Pop
07 (ln 3): Load(Module, Class("System"))
08 (ln 3): Load(Module, Class("Object"))
09 (ln 3): Boolean true
10 (ln 3): Boolean false
11 (ln 3): Call(same(_,_))
12 (ln 3): Call(print(_))
13 (ln 3): Pop
14 (ln 5): Load(Module, Class("System"))
15 (ln 5): Load(Module, Class("Object"))
16 (ln 5): Null
17 (ln 5): Null
18 (ln 5): Call(same(_,_))
19 (ln 5): Call(print(_))
20 (ln 5): Pop
21 (ln 7): Load(Module, Class("System"))
22 (ln 7): Load(Module, Class("Object"))
23 (ln 7): Constant(0: 1)
24 (ln 7): Constant(1: 2)
25 (ln 7): Call(+(_))
26 (ln 7): Constant(1: 2)
27 (ln 7): Constant(0: 1)
28 (ln 7): Call(+(_))
29 (ln 7): Call(same(_,_))
30 (ln 7): Call(print(_))
31 (ln 7): Pop
32 (ln 8): Load(Module, Class("System"))
33 (ln 8): Load(Module, Class("Object"))
34 (ln 8): Constant(0: 1)
35 (ln 8): Constant(1: 2)
36 (ln 8): Call(+(_))
37 (ln 8): Constant(1: 2)
38 (ln 8): Constant(1: 2)
39 (ln 8): Call(+(_))
40 (ln 8): Call(same(_,_))
41 (ln 8): Call(print(_))
42 (ln 8): Pop
43 (ln 10): Load(Module, Class("System"))
44 (ln 10): Load(Module, Class("Object"))
45 (ln 10): Constant(0: 1)
46 (ln 10): Constant(1: 2)
47 (ln 10): Call(..(_))
48 (ln 10): Constant(0: 1)
49 (ln 10): Constant(1: 2)
50 (ln 10): Call(..(_))
51 (ln 10): Call(same(_,_))
52 (ln 10): Call(print(_))
53 (ln 10): Pop
54 (ln 11): Load(Module, Class("System"))
55 (ln 11): Load(Module, Class("Object"))
56 (ln 11): Constant(0: 1)
57 (ln 11): Constant(1: 2)
58 (ln 11): Call(..(_))
59 (ln 11): Constant(0: 1)
60 (ln 11): Constant(2: 3)
61 (ln 11): Call(..(_))
62 (ln 11): Call(same(_,_))
63 (ln 11): Call(print(_))
64 (ln 11): Pop
65 (ln 13): Load(Module, Class("System"))
66 (ln 13): Load(Module, Class("Object"))
67 (ln 13): Constant(3: "ab")
68 (ln 13): Constant(4: "a")
69 (ln 13): Constant(5: "b")
70 (ln 13): Call(+(_))
71 (ln 13): Call(same(_,_))
72 (ln 13): Call(print(_))
73 (ln 13): Pop
74 (ln 14): Load(Module, Class("System"))
75 (ln 14): Load(Module, Class("Object"))
76 (ln 14): Constant(3: "ab")
77 (ln 14): Constant(4: "a")
78 (ln 14): Constant(6: "c")
79 (ln 14): Call(+(_))
80 (ln 14): Call(same(_,_))
81 (ln 14): Call(print(_))
82 (ln 14): Pop
83 (ln 17): Load(Module, Class("System"))
84 (ln 17): Load(Module, Class("Object"))
85 (ln 17): Null
86 (ln 17): Boolean false
87 (ln 17): Call(same(_,_))
88 (ln 17): Call(print(_))
89 (ln 17): Pop
90 (ln 18): Load(Module, Class("System"))
91 (ln 18): Load(Module, Class("Object"))
92 (ln 18): Boolean true
93 (ln 18): Constant(1: 2)
94 (ln 18): Call(same(_,_))
95 (ln 18): Call(print(_))
96 (ln 18): Pop
97 (ln 19): Load(Module, Class("System"))
98 (ln 19): Load(Module, Class("Object"))
99 (ln 19): Constant(0: 1)
100 (ln 19): Constant(1: 2)
101 (ln 19): Call(..(_))
102 (ln 19): Constant(1: 2)
103 (ln 19): Call(same(_,_))
104 (ln 19): Call(print(_))
105 (ln 19): Pop
106 (ln 20): Load(Module, Class("System"))
107 (ln 20): Load(Module, Class("Object"))
108 (ln 20): Constant(7: "1")
109 (ln 20): Constant(0: 1)
110 (ln 20): Call(same(_,_))
111 (ln 20): Call(print(_))
112 (ln 20): Pop
113 (ln 23): Load(Module, Class("System"))
114 (ln 23): Load(Module, Class("Object"))
115 (ln 23): Load(Module, Class("Bool"))
116 (ln 23): Load(Module, Class("Num"))
117 (ln 23): Call(same(_,_))
118 (ln 23): Call(print(_))
119 (ln 23): Pop
120 (ln 24): Load(Module, Class("System"))
121 (ln 24): Load(Module, Class("Object"))
122 (ln 24): Load(Module, Class("Bool"))
123 (ln 24): Load(Module, Class("Bool"))
124 (ln 24): Call(same(_,_))
125 (ln 24): Call(print(_))
126 (ln 24): Pop
127 (ln 27): Constant(8: "Foo")
128 (ln 27): Load(Module, Class("Object"))
129 (ln 27): Class(0 fields)
130 (ln 27): Store(Module)
131 (ln 27): Pop
132 (ln 28): Closure(9, [])
133 (ln 28): Load(Module, Null)
134 (ln 28): Method(instance, init new())
135 (ln 28): Closure(10, [])
136 (ln 28): Load(Module, Null)
137 (ln 28): Method(static, new())
138 (ln 31): Load(Module, Null)
139 (ln 31): Call(new())
140 (ln 31): Store(Module)
141 (ln 31): Pop
142 (ln 32): Load(Module, Class("System"))
143 (ln 32): Load(Module, Class("Object"))
144 (ln 32): Load(Module, Null)
145 (ln 32): Load(Module, Null)
146 (ln 32): Call(same(_,_))
147 (ln 32): Call(print(_))
148 (ln 32): Pop
149 (ln 33): Load(Module, Class("System"))
150 (ln 33): Load(Module, Class("Object"))
151 (ln 33): Load(Module, Null)
152 (ln 33): Load(Module, Null)
153 (ln 33): Call(new())
154 (ln 33): Call(same(_,_))
155 (ln 33): Call(print(_))
156 (ln 33): Pop
157 (ln 36): Constant(11: "Bar")
158 (ln 36): Load(Module, Class("Object"))
159 (ln 36): Class(0 fields)
160 (ln 36): Store(Module)
161 (ln 36): Pop
162 (ln 37): Closure(12, [])
163 (ln 37): Load(Module, Null)
164 (ln 37): Method(instance, init new())
165 (ln 37): Closure(13, [])
166 (ln 37): Load(Module, Null)
167 (ln 37): Method(static, new())
168 (ln 38): Closure(14, [])
169 (ln 38): Load(Module, Null)
170 (ln 38): Method(instance, ==(_))
171 (ln 41): Load(Module, Null)
172 (ln 41): Call(new())
173 (ln 41): Store(Module)
174 (ln 41): Pop
175 (ln 42): Load(Module, Class("System"))
176 (ln 42): Load(Module, Class("Object"))
177 (ln 42): Load(Module, Null)
178 (ln 42): Load(Module, Null)
179 (ln 42): Call(same(_,_))
180 (ln 42): Call(print(_))
181 (ln 42): Pop
182 (ln 43): Load(Module, Class("System"))
183 (ln 43): Load(Module, Class("Object"))
184 (ln 43): Load(Module, Null)
185 (ln 43): Load(Module, Null)
186 (ln 43): Call(new())
187 (ln 43): Call(same(_,_))
188 (ln 43): Call(print(_))
189 (ln 43): Pop
190 (ln 44): EndModule
191 (ln 44): Return
192 (ln 44): End
init new() Code:
00 (ln 28): Load(Local, 0)
01 (ln 28): Return
02 (ln 28): End
 Code:
00 (ln 28): Construct
01 (ln 28): Call(init new())
02 (ln 28): Return
03 (ln 28): End
init new() Code:
00 (ln 37): Load(Local, 0)
01 (ln 37): Return
02 (ln 37): End
 Code:
00 (ln 37): Construct
01 (ln 37): Call(init new())
02 (ln 37): Return
03 (ln 37): End
==(_) Code:
00 (ln 38): Boolean true
01 (ln 38): Return
02 (ln 38): End
