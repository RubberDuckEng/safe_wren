<script> Constants:
00: "Foo"
01: Fn(init new())
02: Fn()
03: Fn(getter)
04: Fn(setter=_)
05: Fn(method())
06: Fn([_])
07: Fn([_]=(_))
08: "Bar"
09: Fn(init new())
10: Fn()
11: Fn(getter)
12: Fn(setter=_)
13: Fn(method())
14: Fn([_])
15: Fn([_]=(_))
16: 1
<script> Code:
00 (ln 1): Constant(0: "Foo")
01 (ln 1): Load(Module, Class("Object"))
02 (ln 1): Class(0 fields)
03 (ln 1): Store(Module)
04 (ln 1): Pop
05 (ln 2): Closure(1, [])
06 (ln 2): Load(Module, Null)
07 (ln 2): Method(instance, init new())
08 (ln 2): Closure(2, [])
09 (ln 2): Load(Module, Null)
10 (ln 2): Method(static, new())
11 (ln 3): Closure(3, [])
12 (ln 3): Load(Module, Null)
13 (ln 3): Method(instance, getter)
14 (ln 4): Closure(4, [])
15 (ln 4): Load(Module, Null)
16 (ln 4): Method(instance, setter=_)
17 (ln 5): Closure(5, [])
18 (ln 5): Load(Module, Null)
19 (ln 5): Method(instance, method())
20 (ln 6): Closure(6, [])
21 (ln 6): Load(Module, Null)
22 (ln 6): Method(instance, [_])
23 (ln 7): Closure(7, [])
24 (ln 7): Load(Module, Null)
25 (ln 7): Method(instance, [_]=(_))
26 (ln 10): Constant(8: "Bar")
27 (ln 10): Load(Module, Null)
28 (ln 10): Class(0 fields)
29 (ln 10): Store(Module)
30 (ln 10): Pop
31 (ln 11): Closure(9, [])
32 (ln 11): Load(Module, Null)
33 (ln 11): Method(instance, init new())
34 (ln 11): Closure(10, [])
35 (ln 11): Load(Module, Null)
36 (ln 11): Method(static, new())
37 (ln 12): Closure(11, [])
38 (ln 12): Load(Module, Null)
39 (ln 12): Method(instance, getter)
40 (ln 13): Closure(12, [])
41 (ln 13): Load(Module, Null)
42 (ln 13): Method(instance, setter=_)
43 (ln 14): Closure(13, [])
44 (ln 14): Load(Module, Null)
45 (ln 14): Method(instance, method())
46 (ln 15): Closure(14, [])
47 (ln 15): Load(Module, Null)
48 (ln 15): Method(instance, [_])
49 (ln 16): Closure(15, [])
50 (ln 16): Load(Module, Null)
51 (ln 16): Method(instance, [_]=(_))
52 (ln 19): Load(Module, Null)
53 (ln 19): Call(Method, new())
54 (ln 19): Store(Module)
55 (ln 19): Pop
56 (ln 20): Load(Module, Class("System"))
57 (ln 20): Load(Module, Null)
58 (ln 20): Call(Getter, getter)
59 (ln 20): Call(Method, print(_))
60 (ln 20): Pop
61 (ln 21): Load(Module, Class("System"))
62 (ln 21): Load(Module, Null)
63 (ln 21): Constant(16: 1)
64 (ln 21): Call(Setter, setter=_)
65 (ln 21): Call(Method, print(_))
66 (ln 21): Pop
67 (ln 22): Load(Module, Class("System"))
68 (ln 22): Load(Module, Null)
69 (ln 22): Call(Method, method())
70 (ln 22): Call(Method, print(_))
71 (ln 22): Pop
72 (ln 23): Load(Module, Class("System"))
73 (ln 23): Load(Module, Null)
74 (ln 23): Constant(16: 1)
75 (ln 23): Call(Subscript, [_])
76 (ln 23): Call(Method, print(_))
77 (ln 23): Pop
78 (ln 26): EndModule
79 (ln 26): Return
80 (ln 26): End
init new() Constants:
00: "Foo constructor"
init new() Code:
00 (ln 2): Load(Module, Class("System"))
01 (ln 2): Constant(0: "Foo constructor")
02 (ln 2): Call(Method, print(_))
03 (ln 2): Pop
04 (ln 2): Load(Local, 0)
05 (ln 2): Return
06 (ln 2): End
 Code:
00 (ln 2): Construct
01 (ln 2): Call(Method, init new())
02 (ln 2): Return
03 (ln 2): End
getter Constants:
00: "Foo.getter"
getter Code:
00 (ln 3): Constant(0: "Foo.getter")
01 (ln 3): Return
02 (ln 3): End
setter=_ Constants:
00: "Foo.setter = "
01: ""
setter=_ Code:
00 (ln 4): Load(Module, Class("List"))
01 (ln 4): Call(Method, new())
02 (ln 4): Constant(0: "Foo.setter = ")
03 (ln 4): Call(Method, addCore_(_))
04 (ln 4): Load(Local, 1)
05 (ln 4): Call(Method, addCore_(_))
06 (ln 4): Constant(1: "")
07 (ln 4): Call(Method, addCore_(_))
08 (ln 4): Call(Method, join())
09 (ln 4): Return
10 (ln 4): End
method() Constants:
00: "Foo.method()"
method() Code:
00 (ln 5): Constant(0: "Foo.method()")
01 (ln 5): Return
02 (ln 5): End
[_] Constants:
00: "Foo.["
01: "]"
[_] Code:
00 (ln 6): Load(Module, Class("List"))
01 (ln 6): Call(Method, new())
02 (ln 6): Constant(0: "Foo.[")
03 (ln 6): Call(Method, addCore_(_))
04 (ln 6): Load(Local, 1)
05 (ln 6): Call(Method, addCore_(_))
06 (ln 6): Constant(1: "]")
07 (ln 6): Call(Method, addCore_(_))
08 (ln 6): Call(Method, join())
09 (ln 6): Return
10 (ln 6): End
[_]=(_) Constants:
00: "Foo.["
01: "] = "
02: ""
[_]=(_) Code:
00 (ln 7): Load(Module, Class("List"))
01 (ln 7): Call(Method, new())
02 (ln 7): Constant(0: "Foo.[")
03 (ln 7): Call(Method, addCore_(_))
04 (ln 7): Load(Local, 1)
05 (ln 7): Call(Method, addCore_(_))
06 (ln 7): Constant(1: "] = ")
07 (ln 7): Call(Method, addCore_(_))
08 (ln 7): Load(Local, 2)
09 (ln 7): Call(Method, addCore_(_))
10 (ln 7): Constant(2: "")
11 (ln 7): Call(Method, addCore_(_))
12 (ln 7): Call(Method, join())
13 (ln 7): Return
14 (ln 7): End
init new() Constants:
00: Null
init new() Code:
00 (ln 11): Load(Local, 0)
01 (ln 11): CallSuper(Initializer, init new())
02 (ln 11): Pop
03 (ln 11): Load(Local, 0)
04 (ln 11): Return
05 (ln 11): End
 Code:
00 (ln 11): Construct
01 (ln 11): Call(Method, init new())
02 (ln 11): Return
03 (ln 11): End
getter Constants:
00: Null
getter Code:
00 (ln 12): Load(Local, 0)
01 (ln 12): CallSuper(Getter, getter)
02 (ln 12): Return
03 (ln 12): End
setter=_ Constants:
00: Null
setter=_ Code:
00 (ln 13): Load(Local, 0)
01 (ln 13): Load(Local, 1)
02 (ln 13): CallSuper(Setter, setter=_)
03 (ln 13): Return
04 (ln 13): End
method() Constants:
00: Null
method() Code:
00 (ln 14): Load(Local, 0)
01 (ln 14): CallSuper(Method, method())
02 (ln 14): Return
03 (ln 14): End
[_] Constants:
00: Null
[_] Code:
00 (ln 15): Load(Local, 0)
01 (ln 15): CallSuper(Getter, )
02 (ln 15): Load(Local, 1)
03 (ln 15): Call(Subscript, [_])
04 (ln 15): Return
05 (ln 15): End
[_]=(_) Constants:
00: Null
[_]=(_) Code:
00 (ln 16): Load(Local, 0)
01 (ln 16): CallSuper(Getter, )
02 (ln 16): Load(Local, 1)
03 (ln 16): Load(Local, 2)
04 (ln 16): Call(SubscriptSetter, [_]=(_))
05 (ln 16): Return
06 (ln 16): End
